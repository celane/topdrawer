Topdrawer のサブプログラムの利用

				最終変更 98/07/27
				作成     98/07/27

			東北大学理学部  大津秀暁

  Topdrawer の subroutine はかつて VAX の時代においては
さまざまな形で用いられていました。しかしながら 1993 年頃 
VAX がAlpha にとってかわられようとしていた頃から突然使わ
れなくなってしまったようです。
  このもっとも大きな要因は、VAX Fortran から Dec Fortran 
への仕様変更が大きかったのではと勝手に想像しております。

  VAX Fortran ではサブプログラムを呼び出す際に引数をある
ところから省略することができました。その際、与えられた引
数の個数をサブプログラム側で使うためのサービスルーチンが
存在したようです。したがって、引数の個数に応じてただのxy 
のデータであるか、あるいはxyz の3次元データであるかなどの
判断をその引数の個数を用いて行うことができました。つまり、
引数の個数を能動的に用いるプログラムが書けたわけです。

  一方、オーソドックスな Fortran ではもちろん、このような
機能は持ち合わせておりません。当時のDec Fortran でも事情
は同じだったかもしれません。したがって、VAX Fortran の引数
関係の部分は書き換えざる得ませんでした。

  TopDrawer のソースプログラムのなかにも、引数の個数を用
いた場合わけがなされている部分がいくつかあり、この部分を
頻繁に用いている subroutine は次第にその地位をおれていく
ようになります。

  さて、それでも使いたいという人がいるので、書き換えをこ
ころみるわけですが、UNIX 版にPorting された当時東京大学の
岡村氏のように際限ないプログラミングパワーを持ち合わせて
いない私はもっとも単純な方法をとりました。ただし、これら
のアイデアも岡村氏のプログラムの中を参考にしたことを書き
添えておきます。

  方法としては、引数の個数をあらかじめサブプログラムに与
え、その後サブプログラムを呼び出します。サブプログラム側
では entry 文を用いた引数の個数の受け渡しの部分を書き加え
る必要があります。将来の首尾一貫性のため、この entry の
名前にはもとの名前に "_narg" をつけたものにしています。
また、与えられる引数の個数の変数は "narg_c" としています。
これらはプログラムを見る方が早いので、これ以上は省略させ
てもらいます。

tdend.f より抜粋
-- 
      INTEGER NERR,NARG
      save narg
      integer*4 narg_c
(中略)
      IF(FLAGS(54))CALL TXVOID
      return
      entry tdjoin_narg(narg_c)
      narg=narg_c
      return
      END
--

  このような変更とは別にいくつか気になった点があったので
書き直した部分もあります。
  まず、td.f ですが、ここに main routine がありますので、
Link の際に通常 main routine が二つあって困ると怒られます。
そこで、main routine の部分だけコメントアウトしたソース
をtd_rtl.f としました。これにともない、ライブラリも td_rtl.a
という名前にしました。
  あとは細かな Bug Fix です。

98/07/27

  tdend.f 2236 行目あたり、
  t2stl1 の呼び出しの引数の個数が間違っているので直した。

  tdtext.f 116 行目あたり、
  noarg を呼び出しているがこれをコメントアウトした。


