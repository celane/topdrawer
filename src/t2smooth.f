C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
      SUBROUTINE T2_SMOOTH(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER *(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      REAL HNONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      CHARACTER CXYZ*3
      LOGICAL LSPLINE,LAVER,LFLAT,LHIS,LERR,LNERROR
      LOGICAL LTEST
      INTEGER LEVEL,LIST,I,J,K,L,M,N,IARRAY,IPOINT,NLIM
      INTEGER LMIN,LMAX
      INTEGER ISET,JSET
      REAL X0,DX,T
      DOUBLE PRECISION DSUM,ESUM,ENSUM
      DATA HNONE /-666.666/
      DATA CXYZ/'XYZ'/
      LAVER=.true.
      LERR=REVLEV .ge. 5.0
      LFLAT=.false.
      N_NAME=8
      C_NAME='Smooth %'
      LEVEL=3
      LIST=0
      IARRAY=2
      LLOG=FLAGS(95)
      GOTO 10011
10040 CONTINUE
      LAVER=LTOKEN
      GOTO 10011
10050 CONTINUE
      LAPPEN=LTOKEN
      GOTO 10011
10060 CONTINUE
      LERR=LTOKEN
      GOTO 10011
10070 CONTINUE
      LFLAT=LTOKEN
      GOTO 10011
10080 CONTINUE
      LCHECK=LTOKEN
      GOTO 10011
10090 CONTINUE
      IARRAY=INTEG
      GOTO 10011
10100 CONTINUE
      LEVEL=INTEG
      GOTO 10011
10110 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 10011
10120 CONTINUE
      LMONITOR=LTOKEN
      GOTO 10011
10130 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 10011
10140 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10011
10150 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10011
10160 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10011
10170 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 10011
10180 CONTINUE
      LIST=INTEG
      GOTO 10011
10190 CONTINUE
      LLOG=LTOKEN
      GOTO 10011
10011 CALL TOKEN(INFOIN,CARDIN,'AVERAGE:Y,APPEND:Y,ERROR:Y,FLAT:Y,CHECK:
     *Y,X:1,THETA:1,Y:2,RADIUS:2,Z:3,PHI:3,LEVEL:::3,LINES,ROWS,MONITOR:
     *Y,NAME:S,POINTS,COLUMNS,SETS,SELECT:S,LIMITED,LIST:::1000,LOG:Y,;'
     *)
      GOTO (10012,10017,10015,10015,10015,10015,10011,10017, 10015),INTE
     *RP
10015 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10011
10017 GOTO ( 10040,10050,10060,10070,10080,10090,10090,10090,10090,10090
     *,10090,10100,10110,10110,10120,10130,10140,10140,10150,10160,10170
     *,10180,10190,10015),KEYORD
10012 CONTINUE
      IF (FLAGS(23)) RETURN
      LEVEL=MAX(1,LEVEL)
      IPOINT=0
      DO 10201 ISET=NS1,NS2
      IF (LTRAP) RETURN
      JSET=ISET
      CALL T2GDSET(JSET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF(NP .lt. N1)GOTO 10201
      I=1
      IF (IBTYPE.eq.2) I=IARRAY
      IF (LCHECK) THEN
      CALL T2FHIS(ISET,I,N1,N2,N3,N4,LHIS,J,X0,DX)
      IF (.not. LHIS) THEN
      WRITE(OUTSTR,*)'*** ERROR *** Data not histogram, Set=',ISET
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      RETURN
      ENDIF
      ENDIF
      IF (LMONITOR .and. IBTYPE .eq. 1) THEN
      CALL TXVOID
      IF (IPOINT .gt. 0) CALL T2WAIT('Smooth:',LTEST)
      CALL TXNEXT
      CALL T2REST
      NXYLIM(1,1)=N1
      NXYLIM(1,2)=N2
      NXYLIM(2,1)=N3
      NXYLIM(2,2)=N4
      NXYLIM(3,1)=ISET
      NXYLIM(3,2)=ISET
      DO 10211 I=1,2
      DO 10221 J=1,3
      EXYZLIM(J,I)=TLIM(J,I)
10221 CONTINUE
10222 CONTINUE
10211 CONTINUE
10212 CONTINUE
      CALL T2HIST(DATBUF(I1),DATBUF(I2),DATBUF(I3), DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), 0,0,NP-N1+1,NINCR0, HNONE,HNONE,HNONE)
      CALL T2_PLOT_TITLE(ISET,.false.)
      CALL TXVOID
      ENDIF
      IPOINT=0
      IF (LAPPEN) THEN
      JSET=0
      CALL T2SCOP(INFOIN,CARDIN  ,ISET,1, 2 147 483 647,1, 2 147 483 647
     *  ,JSET,1, 2 147 483 647,1, 2 147 483 647  ,C_NAME(:N_NAME))
      IF (FLAGS(23)) RETURN
      CALL T2GDSET(JSET,N1,N2,N3,N4,ISETD,TLIM,'*')
      ENDIF
      NP=NP-N1+1
      NL=NL-N3+1
      IF (IBTYPE.eq.2) THEN
      NINCR1=NINCR1*NINCR0
      IF (IARRAY.eq.MESH1) THEN
      ELSEIF (IARRAY.eq.MESH2) THEN
      I=NL
      NL=NP
      NP=I
      I=NINCR0
      NINCR0=NINCR1
      NINCR1=I
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Illegal axis for MESH dat
     *a'),4)
      RETURN
      ENDIF
      ELSE
      I3=ISETD(NXDATA+NCSIZE*(IARRAY-1))
      I6=ISETD(NXDATA+NCSIZE*(IARRAY-1)+1)
      NINCR0=NINCR1
      ENDIF
      LNERROR = DATBUF(I6+1).ne.HNONE
      IF (DATBUF(I6).eq.HNONE .or. .not. LERR) I6=0
      IF (DATBUF(I3).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Coordinate does not exist
     *'),4)
      RETURN
      ELSEIF (NP.gt.1.and.NL.ge.1) THEN
      IPOINT=NL*NP
      IF (LFLAT) THEN
      DO 10231 I=1,NL
      M=I3
      N=I6
      DO 10241 J=1,NP,LEVEL
      K=MIN(LEVEL,NP-J+1)
      DSUM=0
      ESUM=0
      ENSUM=0
      DO 10251 L=1,K
      DSUM=DSUM+DATBUF(M)
      M=M+NINCR0
      IF (I6.ne.0) THEN
      IF (LNERROR) ENSUM=ENSUM+DATBUF(N+1)**2
      ESUM=ESUM+DATBUF(N)**2
      N=N+NINCR0
      ENDIF
10251 CONTINUE
10252 CONTINUE
      M=M-K*NINCR0
      IF (I6.ne.0) N=N-K*NINCR0
      IF (LAVER) THEN
      DSUM=DSUM/K
      IF (LNERROR) ENSUM=SQRT(ENSUM)/K
      ESUM=SQRT(ESUM)/K
      ENDIF
      DO 10261 L=1,K
      DATBUF(M)=DSUM
      M=M+NINCR0
      IF (I6.ne.0) THEN
      IF (LNERROR) DATBUF(N+1)=ENSUM
      DATBUF(N)=ESUM
      N=N+NINCR0
      ENDIF
10261 CONTINUE
10262 CONTINUE
10241 CONTINUE
10242 CONTINUE
      I3=I3+NINCR2
      IF (I6.ne.0) I6=I6+NINCR2
10231 CONTINUE
10232 CONTINUE
      ELSE
      LEVEL=MIN(LEVEL,5)
      DO 10271 I=1,NL
      IF (I6.ne.0) THEN
      K=I6
      DO 10281 J=1,NP
      IF (LNERROR) DATBUF(K+1)=DATBUF(K+1)**2
      DATBUF(K)=DATBUF(K)**2
      K=K+NINCR0
10281 CONTINUE
10282 CONTINUE
      IF (LNERROR) CALL T2_SMOOTH_DO(DATBUF(I6+1),NP,LEVEL,NINCR0)
      CALL T2_SMOOTH_DO(DATBUF(I6),NP,LEVEL,NINCR0)
      K=I6
      DO 10291 J=1,NP
      IF (LNERROR) DATBUF(K+1)=SQRT(ABS(DATBUF(K+1)))
      DATBUF(K)=SQRT(ABS(DATBUF(K)))
      K=K+NINCR0
10291 CONTINUE
10292 CONTINUE
      I6=I6+NINCR1
      ENDIF
      CALL T2_SMOOTH_DO(DATBUF(I3),NP,LEVEL,NINCR0)
      I3=I3+NINCR1
10271 CONTINUE
10272 CONTINUE
      ENDIF
      ENDIF
      IF (LMONITOR .and. IBTYPE .eq. 1) THEN
      CALL T2JOIN(DATBUF(I1),DATBUF(I2),DATBUF(I3), ITXSEC,1,NP-N1+1,NIN
     *CR0)
      CALL TXVOID
      ENDIF
      IF (IPOINT .ne. 0) DATDAT(1,1)=HNONE
      IF (LLOG.or.IPOINT.eq.0) WRITE(6,*) '  Smoothed ',IPOINT,' points 
     *',CXYZ(IARRAY:IARRAY),' width=', LEVEL,' Set=',JSET
10201 CONTINUE
10202 CONTINUE
      END
      SUBROUTINE T2_SMOOTH_DO(ARRAY,N,INLEVL,INCRMT)
      IMPLICIT NONE
      INTEGER N,INLEVL,INCRMT
      REAL ARRAY(INCRMT,N)
      REAL HNONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LEVEL,FIRST,LAST,OVERLP, IMOVE, IE, IF, IG, NB, IPNT
      INTEGER I,J, MOVE, NP
      DATA HNONE /-666.666/
      IF (N.LE.1) RETURN
      IF (INLEVL.eq.0) THEN
      LEVEL = N-25
      ENDIF
      LEVEL = MIN(MAX(INLEVL,1),5)
      OVERLP = 4*LEVEL
      NB = (400)/4
      IE = 1+NB
      IF = IE+NB
      IG = IF+NB
      FIRST = 1
      IPNT = 1
      IMOVE = 0
      DO 10301 FIRST=1,N,NB-2*OVERLP
      LAST = MIN0(FIRST+NB-1,N)
      NP = LAST-FIRST+1
      MOVE = NP-IMOVE
      IF (LAST .lt. N) MOVE = MOVE - OVERLP
      J=IG
      DO 10311 I=FIRST,LAST
      BUFFER(J)=ARRAY(1,I)
      J=J+1
10311 CONTINUE
10312 CONTINUE
      CALL SMCTRL(BUFFER(1),BUFFER(IG),NP,LEVEL,BUFFER(IE),BUFFER(IF))
      DO 10321 I=1,MOVE
      IMOVE=IMOVE+1
      ARRAY(1,IPNT)=BUFFER(IMOVE)
      IPNT=IPNT+1
10321 CONTINUE
10322 CONTINUE
      IMOVE = OVERLP
      IF(LAST.EQ.N)GOTO 10302
10301 CONTINUE
10302 CONTINUE
      END
