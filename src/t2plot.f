C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
      SUBROUTINE T2_HISTOGRAM(INFOIN,CARDIN)
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL LEXPAN,LCYCLE,LFILL,LTITLE
      INTEGER ICYCLE,ICOL,ITXTUR,INTEN,ITX
      REAL DXYZ(3),SYMSAV
      CHARACTER TKSTR*523
      DATA HNONE /-666.666/
      LEVEL = INTEG
      IXYZ = 0
      ITXTUR = 0
      INTEN=0
      ICOL=0
      IF (FLAGS(134) .and. IAND(GRDTYP,3) .ne. 0) IXYZ=4096
      DO 10011 I=1,3
      DXYZ(I)=0.0
10011 CONTINUE
10012 CONTINUE
      NINCR1=NINCR
      NINCR2=1
      LCYCLE=.false.
      ICYCLE=0
      LTITLE=FLAGS(108)
      LFILL=.false.
      LEXPAN=FLAGS(17)
      DO 10021 J=1,2
      DO 10031 I=1,2
      NXYLIM(I,J)=0
10031 CONTINUE
10032 CONTINUE
10021 CONTINUE
10022 CONTINUE
      GOTO 10041
10070 CONTINUE
      LFILL=LTOKEN
      GOTO 10041
10080 CONTINUE
      LEXPAN=LTOKEN
      GOTO 10041
10090 CONTINUE
      IF (LTOKEN) THEN
      IXYZ=IOR(INTEG,IXYZ)
      IF (INTEG.eq.1024.and.DXYZ(1).eq.0) DXYZ(1)=5000
      IF (INTEG .eq. 16) LEVEL=IAND(LEVEL,NOT(4))
      ELSE
      IXYZ=IAND(NOT(INTEG),IXYZ)
      IF (INTEG .eq. 16) LEVEL=IOR(LEVEL,4)
      ENDIF
      GOTO 10041
10100 CONTINUE
      CALL T2GTEX(ITXTUR)
      GOTO 10041
10110 CONTINUE
      INTEN=INTEG
      GOTO 10041
10120 CONTINUE
      ICOL=INTEG
      GOTO 10041
10130 CONTINUE
      I=INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      DXYZ(I)=FLOTNG
      ENDIF
      GOTO 10041
10150 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 10041
10160 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10041
10170 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10041
10180 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10041
10190 CONTINUE
      CALL T2BNDA(INFOIN,CARDIN,TLIM)
      GOTO 10041
10200 CONTINUE
      LTITLE=LTOKEN
      GOTO 10041
10210 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 10041
10220 CONTINUE
      LCYCLE=LTOKEN
      GOTO 10041
C0041 CALL TOKEN(INFOIN,CARDIN,'FILL:Y,EXPAND:Y,X:1Y,Y:2Y,Z:4Y,LEGO:7Y,B
C    *LOCK:7Y,DEPTH:8N,HIDE:16N,HIDDEN:16N,FRAME:32N,NODEPTH:8,NOHIDE:16
C    *,NOHIDDEN:16,NOFRAME:32,XY:256Y,YX:256Y,YZ:64Y,ZY::64Y,ZX:128Y,XZ:
C    *128Y,CROSS:512Y,RANDOM:1024Y,ERRORS:2048Y,GRID:4096Y,DO:1,DOT:1,DO
C    *TS:1,DOTTED:1,DA:2,DASHES:2,DASHED:2,DOT-DASH:3,DOTDASHED:3,SOLID:
C    *4,FUNNY:5,PATTERNED:6,DAASHES:7,SPACE:8,,INTENSITY:1:5:2,WIDTH:1:5
C    *:2,WHITE:1,RED:2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,DX:1,DY:
C    *2,DZ:3,LINES,ROWS,POINTS,COLUMNS,SETS,SELECT:S,SLICES,TITLE:Y,LIMI
C    *TED,CYCLE:Y,;')
10041 TKSTR(:264)=             'FILL:Y,EXPAND:Y,X:1Y,Y:2Y,Z:4Y,LEGO:7Y,B
     *LOCK:7Y,DEPTH:8N,HIDE:16N,HIDDEN:16N,FRAME:32N,NODEPTH:8,NOHIDE:16
     *,NOHIDDEN:16,NOFRAME:32,XY:256Y,YX:256Y,YZ:64Y,ZY::64Y,ZX:128Y,XZ:
     *128Y,CROSS:512Y,RANDOM:1024Y,ERRORS:2048Y,GRID:4096Y,DO:1,DOT:1,DO
     *TS:1,DOTTED:1,DA:2,DASHES:'
      TKSTR(265:)=             '2,DASHED:2,DOT-DASH:3,DOTDASHED:3,SOLID:
     *4,FUNNY:5,PATTERNED:6,DAASHES:7,SPACE:8,,INTENSITY:1:7:2,WIDTH:1:7
     *:2,WHITE:1,RED:2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,DX:1,DY:
     *2,DZ:3,LINES,ROWS,POINTS,COLUMNS,SETS,SELECT:S,SLICES,TITLE:Y,LIMI
     *TED,CYCLE:Y,BLACK:8,;'
      CALL TOKEN(INFOIN,CARDIN,TKSTR)
      GOTO (10042,10047,10045,10045,10045,10045,10041,10047, 10045),INTE
     *RP
10045 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10041
10047 GOTO ( 10070,10080,10090,10090,10090,10090,10090,10090,10090,10090
     *,10090,10090,10090,10090,10090,10090,10090,10090,10090,10090,10090
     *,10090,10090,10090,10090,10100,10100,10100,10100,10100,10100,10100
     *,10100,10100,10100,10100,10100,10100,10100,10100,10110,10110,10120
     *,10120,10120,10120,10120,10120,10120,10130,10130,10130,10150,10150
     *,10160,10160,10170,10180,10190,10200,10210,10220,10120,10045),
     *KEYORD
10042 CONTINUE
      IF (FLAGS(23).and.FLAGS(92)) RETURN
      IF (LFILL) LEVEL=IOR(LEVEL,2)
      IF (LEXPAN) THEN
      NXYLIM(1,1)=N1
      NXYLIM(1,2)=N2
      NXYLIM(2,1)=N3
      NXYLIM(2,2)=N4
      NXYLIM(3,1)=NS1
      NXYLIM(3,2)=NS2
      DO 10231 I=1,2
      DO 10241 J=1,3
      EXYZLIM(J,I)=TLIM(J,I)
10241 CONTINUE
10242 CONTINUE
10231 CONTINUE
10232 CONTINUE
      ENDIF
      ITX=8*INTEN+64*ITXTUR+512*ICOL
      DO 10251 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF (FLAGS(23)) RETURN
      IF (LTRAP) RETURN
      IF(NP .lt. N1)GOTO 10251
      IF (IBTYPE.eq.1 .or. (.not.FLAGS(56) .and. (MESH2D.eq.MESH1 .or. M
     *ESH2D.eq.MESH2)) ) THEN
      NN3=N3
      NN1=N1
      IF (IBTYPE.eq.2) THEN
      CALL T23LIM(DATBUF(IM),NINCR0,NINCR1,NINCR2)
      IF (MESH2D.eq.MESH2) THEN
      NINCR2=NINCR1*NINCR0
      NINCR1=NINCR0
      ELSEIF (MESH2D.eq.MESH1) THEN
      I=N3
      NN3=N1
      NN1=I
      I=NP
      NP=NL
      NL=I
      I1=I2
      I4=I5
      NINCR1=NINCR1*NINCR0
      NINCR2=NINCR0
      ENDIF
      I2=I3
      I5=I6
      I6=1
      I3=1
      ELSE
      NL=NN3
      ENDIF
      J=1
      DO 10261 I=1,3
      IF (IAND(IXYZ,J).ne.0) IXYZ=I
      J=J*2
10261 CONTINUE
10262 CONTINUE
      DO 10271 I=NN3,NL
      IF(LTRAP)GOTO 10272
      IF (LCYCLE) THEN
      ICYCLE=ICYCLE+1
      IF (ICYCLE .gt. N_CYCLE) ICYCLE=1
      J=ITX_CYCLE(ICYCLE)
      ITX=8*INTEN+64*ITXTUR+512*ICOL
      IF (ICOL .eq. 0) ITX=ITX+IAND(3584,J)
      IF (ITXTUR .eq. 0) ITX=ITX+IAND(448,J)
      IF (INTEN .eq. 0) ITX=ITX+IAND(56,J)
      ENDIF
      CALL T2HIST(DATBUF(I1),DATBUF(I2),DATBUF(I3), DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), ITX,LEVEL,NP-NN1+1,NINCR1, DATBUF(I_NDX),DATBUF(I_ND
     *Y),DATBUF(I_NDZ))
      I2=I2+NINCR2
      IF (DATBUF(I5) .ne. HNONE) I5=I5+NINCR2
10271 CONTINUE
10272 CONTINUE
      ELSE
      NN1=(I1-IM)/NINCR0
      NN3=(I2-IM)/(NINCR0*NINCR1)
      NP=NP-N1+NN1
      NL=NL-N3+NN3
      IF (LEXPAN) THEN
      NXYLIM(1,1)=NN1
      NXYLIM(1,2)=NP
      NXYLIM(2,1)=NN3
      NXYLIM(2,2)=NL
      ENDIF
      CALL T23HST(DATBUF(IM),NMESH0,NMESH1,NMESH2,IXYZ, ITX,DXYZ,NN1,NP,
     *NN3,NL)
      ENDIF
      IF (LTITLE) CALL T2_PLOT_TITLE(ISET,.false.)
10251 CONTINUE
10252 CONTINUE
      END
      SUBROUTINE T2_JOIN(INFOIN,CARDIN)
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL LEXPAN,LCYCLE,LTITLE
      DATA HNONE /-666.666/
      ITXTUR = 0
      ICOL=0
      INTEN=0
      JTYPE = 0
      LEVEL = 0
      IXYZ = 0
      LTITLE=FLAGS(108)
      LCYCLE=.false.
      ICYCLE=0
      LEXPAN=FLAGS(17)
      DO 10281 J=1,2
      DO 10291 I=1,2
      NXYLIM(I,J)=0
10291 CONTINUE
10292 CONTINUE
10281 CONTINUE
10282 CONTINUE
      GOTO 10301
10330 CONTINUE
      LEXPAN=LTOKEN
      GOTO 10301
10340 CONTINUE
      I=INTEG
      IF ( LTOKEN ) THEN
      IXYZ=IOR(IXYZ,I)
      IF (INTEG .eq. 16) JTYPE=IAND(JTYPE,NOT(4))
      ELSE
      IXYZ=IAND(NOT(I),IXYZ)
      IF (INTEG .eq. 16) JTYPE=IOR(JTYPE,4)
      ENDIF
      GOTO 10301
10350 CONTINUE
      IXYZ=4*(IXYZ/4)+INTEG
      GOTO 10301
10360 CONTINUE
      FLAGS(31)=LTOKEN
      GOTO 10301
10370 CONTINUE
      JTYPE = INTEG
      GOTO 10301
10380 CONTINUE
      CALL T2GTEX(ITXTUR)
      GOTO 10301
10390 CONTINUE
      INTEN=INTEG
      GOTO 10301
10400 CONTINUE
      ICOL=INTEG
      GOTO 10301
10410 CONTINUE
      LEVEL=INTEG
      GOTO 10301
10420 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 10301
10430 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10301
10440 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10301
10450 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10301
10460 CONTINUE
      CALL T2BNDA(INFOIN,CARDIN,TLIM)
      GOTO 10301
10470 CONTINUE
      LCYCLE=LTOKEN
      GOTO 10301
10480 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 10301
10490 CONTINUE
      LTITLE=LTOKEN
      GOTO 10301
10310 GOTO ( 10330,10340,10340,10340,10340,10340,10340,10340,10350,10350
     *,10350,10360,10360,10370,10370,10370,10380,10380,10380,10380,10380
     *,10380,10380,10380,10380,10380,10380,10380,10380,10380,10380,10390
     *,10390,10400,10400,10400,10400,10400,10400,10400,10410,10420,10420
     *,10430,10430,10440,10450,10460,10470,10480,10490,10400,10305),
     *KEYORD
10500 CONTINUE
      LEVEL=INTEG
      If (LEVEL .gt. 20) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** WARNING *** Level greater that 20 tr
     *uncated',4)
      LEVEL=20
      ENDIF
      GOTO 10301
10301 CALL TOKEN(INFOIN,CARDIN,'EXPAND:Y,NOFRAME:32,NOHIDE:16,NOHIDDEN:1
     *6,FRAME:32N,HIDE:16N,HIDDEN:16N,ERRORS:64Y,X:1,Y:2,Z:3,TEXT:Y,DATA
     *:N,SPLINE:1,GENERAL:0,FILL:3,DO:1,DOT:1,DOTS:1,DOTTED:1,DA:2,DASHE
     *S:2,DASHED:2,DOT-DASH:3,DOTDASHED:3,SOLID:4,FUNNY:5,PATTERNED:6,DA
     *ASHES:7,SPACE:8,,INTENSITY:1:7:2,WIDTH:1:7:2,WHITE:1,RED:2,GREEN:3
     *,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,LEVEL:0:100:0,LINES,ROWS,POINTS,
     *COLUMNS,SETS,SELECT:S,SLICES,CYCLE:Y,LIMITED,TITLE:Y,BLACK:8,;')
      GOTO (10302,10310,10500,10500,10305,10305,10305,10310,10305),INTER
     *P
10305 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10301
10302 CONTINUE
      IF (FLAGS(23).and.FLAGS(92)) RETURN
      ITX=8*INTEN+64*ITXTUR+512*ICOL
      IF (LEXPAN) THEN
      NXYLIM(1,1)=N1
      NXYLIM(1,2)=N2
      NXYLIM(2,1)=N3
      NXYLIM(2,2)=N4
      NXYLIM(3,1)=NS1
      NXYLIM(3,2)=NS2
      DO 10511 I=1,2
      DO 10521 J=1,3
      EXYZLIM(J,I)=TLIM(J,I)
10521 CONTINUE
10522 CONTINUE
10511 CONTINUE
10512 CONTINUE
      ENDIF
      DO 10531 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF (FLAGS(23)) RETURN
      IF (LTRAP) RETURN
      IF(NP .lt. N1)GOTO 10531
      IF (IBTYPE.eq.1 .or. (.not.FLAGS(56) .and. (MESH2D.eq.MESH1 .or. M
     *ESH2D.eq.MESH2)) ) THEN
      NN3=N3
      NN1=N1
      IF (IBTYPE.eq.2) THEN
      CALL T23LIM(DATBUF(IM),NINCR0,NINCR1,NINCR2)
      IF (MESH2D.eq.MESH2) THEN
      NINCR2=NINCR1*NINCR0
      NINCR1=NINCR0
      ELSEIF (MESH2D.eq.MESH1) THEN
      I=N3
      NN3=N1
      NN1=I
      I=NP
      NP=NL
      NL=I
      I1=I2
      I4=I5
      NINCR1=NINCR1*NINCR0
      NINCR2=NINCR0
      ENDIF
      I2=I3
      I5=I6
      I6=1
      I3=1
      ELSE
      NL=NN3
      ENDIF
      DO 10541 I=NN3,NL
      IF(LTRAP)GOTO 10542
      IF (LCYCLE) THEN
      ICYCLE=ICYCLE+1
      IF (ICYCLE .gt. N_CYCLE) ICYCLE=1
      J=ITX_CYCLE(ICYCLE)
      ITX=8*INTEN+64*ITXTUR+512*ICOL
      IF (ICOL .eq. 0) ITX=ITX+IAND(3584,J)
      IF (ITXTUR .eq. 0) ITX=ITX+IAND(448,J)
      IF (INTEN .eq. 0) ITX=ITX+IAND(56,J)
      ENDIF
      CALL T2JOIN(DATBUF(I1),DATBUF(I2),DATBUF(I3), ITX+JTYPE,LEVEL,NP-N
     *N1+1,NINCR1)
      I2=I2+NINCR2
10541 CONTINUE
10542 CONTINUE
      ELSE
      NN1=(I1-IM)/NINCR0
      NN3=(I2-IM)/(NINCR0*NINCR1)
      NP=NP-N1+NN1
      NL=NL-N3+NN3
      IF (LEXPAN) THEN
      NXYLIM(1,1)=NN1
      NXYLIM(1,2)=NP
      NXYLIM(2,1)=NN3
      NXYLIM(2,2)=NL
      ENDIF
      CALL T23JIN(DATBUF(IM),NMESH0,NMESH1,NMESH2,IXYZ,ITX, NN1,NP,NN3,N
     *L)
      ENDIF
      IF (LTITLE) CALL T2_PLOT_TITLE(ISET,.false.)
10531 CONTINUE
10532 CONTINUE
      FLAGS(31) = .FALSE.
      END
      SUBROUTINE T2_PLOT(INFOIN,CARDIN)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      REAL HNONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL BUFFR(400)
      INTEGER IBUFF(400)
      REAL TLIM1(3,2),XYZIND(3),TBL_OFFSET
      REAL TSAVE(3),XYZ(3,2),XYZ0(2),XYZ1(2),XYZ2(3),FRTO(4)
      LOGICAL LGRID, LOUTL, LTABL, LAXES, TDATA, FSAVE 
      LOGICAL LEXPAN, LDATA, LCYCLE, LF1, LF2, LHIDE, LTITLE
      INTEGER ITYPE,JTYPE,KTYPE,LTYPE,ITBL_OPT, IHIDE
      INTEGER NN1,NN3,I7_MAX,I4_MAX,I5_MAX,I6_MAX
      INTEGER INFOIN(10)
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      CHARACTER*(*) CARDIN
      DATA HNONE /-666.666/
      SYM=0
      IXYZ=0
      ICOL=0
      INTEN=0
      ITXTUR=0
      SYSIZ=0
      I7_MAX= 2 147 483 647
      I4_MAX= 2 147 483 647
      I5_MAX= 2 147 483 647
      I6_MAX= 2 147 483 647
      JTYPE=0
      KTYPE=2
      LTYPE=0
      LEXPAN=FLAGS(17)
      LHIDE=.false.
      LTITLE=FLAGS(108)
      LCYCLE=.false.
      ICYCLE=0
      LDATA=.false.
      LTABL=.FALSE.
      LAXES=.false.
      LOUTL=.false.
      LGRID=.false.
      TBL_OFFSET=HNONE
      ITBL_OPT=0
      NUMBER=0
      IPOINT=0
      TEMP=1.0E35
      DO 10551 J=1,2
      TEMP=-TEMP
      DO 10561 I=1,3
      TLIM(I,J)=TEMP
10561 CONTINUE
10562 CONTINUE
10551 CONTINUE
10552 CONTINUE
      TLIM(1,1)=HNONE
      DO 10571 J=1,2
      DO 10581 I=1,2
      NXYLIM(I,J)=0
10581 CONTINUE
10582 CONTINUE
10571 CONTINUE
10572 CONTINUE
      GOTO 10591
10620 CONTINUE
      LOUTL=.true.
      GOTO 10591
10630 CONTINUE
      IF (.not.(LAXES.or.LGRID)) THEN
      FSAVE=FLAGS(82)
      IF (.not. FLAGS(75)) CALL TXDEF2
      DO 10641 I=1,3
      TSAVE(I)=ORAXES(I)
10641 CONTINUE
10642 CONTINUE
      ENDIF
      IF ( INTEG.eq.1 ) THEN
      LAXES=.true.
      ELSE
      LGRID=.true.
      ENDIF
      ITYPE=9
      IFORM=9
      GOTO 10651
10680 CONTINUE
      FLAGS(82)=.TRUE.
      DO 10691 I=1,3
      ORAXES(I)=0
10691 CONTINUE
10692 CONTINUE
      DO 10701 I=1,3
      GOTO 10711
10740 CONTINUE
      CALL T2CURS(J,XYZ0,XYZ1,XYZ2,LF1,LF2)
      GOTO 10712
10720 GOTO ( 10740,10715),KEYORD
10750 CONTINUE
      ORAXES(I)=FLOTNG
      GOTO 10712
10715 CONTINUE
      INFOIN(9)=-1
      GOTO 10712
10711 CALL TOKEN(INFOIN,CARDIN,'CURSOR,;')
      GOTO (10715,10720,10750,10750,10715,10715,10715,10720,10715),INTER
     *P
10712 CONTINUE
10701 CONTINUE
10702 CONTINUE
      GOTO 10651
10760 CONTINUE
      NUMBER=NUMBER+1
      IF (NUMBER.lt.400/2) THEN
      IBUFF(NUMBER)=INTEG
      NUMBER=NUMBER+1
      IPOINT=NUMBER
      IBUFF(IPOINT)=0
      ENDIF
      I=MOD(INTEG,10)
      IFORM=9
      IF (NONLIN(I).eq.-7) IFORM=13
      ITYPE=IFORM
      GOTO 10771
10800 CONTINUE
      ITYPE=ISIGN(ITYPE,INTEG)
      GOTO 10771
10810 CONTINUE
      ITYPE= IFORM
      GOTO 10771
10820 CONTINUE
      ITYPE=-1
      GOTO 10771
10830 CONTINUE
      IFORM=INTEG
      IF (IABS(ITYPE).ne.1) ITYPE=ISIGN(IFORM,ITYPE)
      GOTO 10771
10840 CONTINUE
      INFOIN(9)=-1
      CALL T2FTBY(INFOIN,CARDIN,FRTO,0)
      IF (FLAGS(23)) RETURN
      IMAX=NINT(FRTO(4))
      DO 10851 I=1,IMAX
      NUMBER=NUMBER+1
      IF (NUMBER.le.400/2) THEN
      IBUFF(IPOINT)=IBUFF(IPOINT)+1
      TEMP=FRTO(1)+(I-1)*FRTO(3)
      BUFFR(NUMBER)=TEMP
      IBUFF(NUMBER)=ITYPE
      ENDIF
10851 CONTINUE
10852 CONTINUE
      GOTO 10771
10780 GOTO ( 10800,10800,10810,10820,10830,10830,10830,10830,10830,10830
     *,10830,10830,10840,10840,10840,10840,10775),KEYORD
10860 CONTINUE
      NUMBER=NUMBER+1
      IF (NUMBER.le.400/2) THEN
      IBUFF(IPOINT)=IBUFF(IPOINT)+1
      BUFFR(NUMBER)=FLOTNG
      IBUFF(NUMBER)=ITYPE
      ENDIF
      GOTO 10771
10775 CONTINUE
      INFOIN(9)=-1
      GOTO 10772
10771 CALL TOKEN(INFOIN,CARDIN,'LONG:1,SHORT:-1,LABELS,TICKS,FFORMAT:2,G
     *FORMAT:9,EFORMAT:8,YEARS:10,MONTH:11,DAY:12,TIME:13,DATE:14,FROM,T
     *O,BY,N,;')
      GOTO (10772,10780,10860,10860,10775,10775,10775,10780,10775),INTER
     *P
10772 CONTINUE
      IF (IBUFF(IPOINT).eq.0) THEN
      NB=400/2-NUMBER
      IB1=NUMBER+1
      JXYZ=IABS(MOD(IBUFF(IPOINT-1),10))
      CALL T2STCK(NONLIN(JXYZ), XYZLIM(JXYZ,1),XYZLIM(JXYZ,2), NXYZ1(JXY
     *Z),NXYZ2(JXYZ), SCLPRM(1,JXYZ), NB, J,BUFFR(IB1),IBUFF(IB1))
      IBUFF(IPOINT)=J
      NUMBER=NUMBER+J
      ENDIF
      GOTO 10651
10660 GOTO ( 10680,10760,10760,10760,10760,10760,10760,10760,10760,10760
     *,10655),KEYORD
10655 CONTINUE
      INFOIN(9)=-1
      GOTO 10652
10651 CALL TOKEN(INFOIN,CARDIN,'AT,X:121,Y:112,Z:43,BOTTOM:21,LEFT:12,G:
     *41,GENERAL:41,TOP:41,RIGHT:32,;')
      GOTO (10652,10660,10655,10655,10655,10655,10655,10660,10655),INTER
     *P
10652 CONTINUE
      GOTO 10591
10870 CONTINUE
      IF (LTOKEN) THEN
      JTYPE=IOR(INTEG,JTYPE)
      ELSE
      JTYPE=IAND(NOT(INTEG),JTYPE)
      ENDIF
      GOTO 10591
10880 CONTINUE
      LCYCLE=LTOKEN
      GOTO 10591
10890 CONTINUE
      LEXPAN=LTOKEN
      GOTO 10591
10900 CONTINUE
      I7_MAX= 2 147 483 647
      IF (LTOKEN) I7_MAX=1
      GOTO 10591
10910 CONTINUE
      IF (LTOKEN) THEN
      I= 2 147 483 647
      ELSE
      I=1
      ENDIF
      I4_MAX=I
      I5_MAX=I
      I6_MAX=I
      GOTO 10591
10920 CONTINUE
      I4_MAX=1
      IF (LTOKEN) I4_MAX= 2 147 483 647
      GOTO 10591
10930 CONTINUE
      I5_MAX=1
      IF (LTOKEN) I5_MAX= 2 147 483 647
      GOTO 10591
10940 CONTINUE
      I6_MAX=1
      IF (LTOKEN) I6_MAX= 2 147 483 647
      GOTO 10591
10950 CONTINUE
      KTYPE=IOR(1,KTYPE)
      GOTO 10591
10960 CONTINUE
      IXYZ=-1
      GOTO 10591
10970 CONTINUE
      LTABL=.true.
      LF1=.false.
      GOTO 10981
11010 CONTINUE
      CONTINUE
      GOTO 10981
11020 CONTINUE
      TBL_OFFSET=FLOTNG
      LF1=.false.
      GOTO 10981
11030 CONTINUE
      ITBL_OPT=IOR(INTEG,ITBL_OPT)
      GOTO 10981
11040 CONTINUE
      CALL T2CURS(J,XYZ0,XYZ1,XYZ2,LF1,LF2)
      GOTO 10981
10990 GOTO ( 11010,11020,11030,11030,11030,11030,11030,11040,10985),KEYO
     *RD
10985 CONTINUE
      INFOIN(9)=-1
      GOTO 10982
10981 CALL TOKEN(INFOIN,CARDIN,'AT,OFFSET:::0,TOP:1,DATA:2,ABSOLUTE:4,VA
     *LUE:8,,CURSOR,;')
      GOTO (10982,10990,10985,10985,10985,10985,10985,10990,10985),INTER
     *P
10982 CONTINUE
      IF (LF1) THEN
      TBL_OFFSET=XYZ1(2)
      ITBL_OPT=IOR(4,ITBL_OPT)
      ENDIF
      GOTO 10591
11050 CONTINUE
      TDATA=.true.
      GOTO 10591
11060 CONTINUE
      LHIDE=LTOKEN
      GOTO 10591
11070 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 10591
11080 CONTINUE
      LTITLE=LTOKEN
      GOTO 10591
11090 CONTINUE
      KTYPE=IAND(NOT(INTEG),KTYPE)
      IF (.not.LTOKEN) KTYPE=IOR(INTEG,KTYPE)
      GOTO 10591
11100 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 10591
11110 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10591
11120 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10591
11130 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10591
11140 CONTINUE
      IXYZ=INTEG
      KTYPE=IAND(NOT(1),KTYPE)
      GOTO 10591
11150 CONTINUE
      CALL T2BNDA(INFOIN,CARDIN,TLIM)
      GOTO 10591
11160 CONTINUE
      IF (NSTRNG.gt.0) THEN
      SYM=TXSYM(STRNG(1:NSTRNG))
      ELSE
      SYM=NOSYMB
      ENDIF
      GOTO 10591
11170 CONTINUE
      SYSIZ=FLOTNG/REDUCE(3)
      GOTO 10591
11180 CONTINUE
      INTEN=INTEG
      GOTO 10591
11190 CONTINUE
      ICOL=INTEG
      GOTO 10591
11200 CONTINUE
      CALL T2GTEX(ITXTUR)
      GOTO 10591
10591 CALL TOKEN(INFOIN,CARDIN,'OUTLINE,AXIS:1,AXES:1,GRID:2,VECTOR:1:Y,
     *FILL:2:Y,CYCLE:Y,EXPAND:Y,NOSYMBOL:Y,ERRORS:Y,XERROR:Y,YERROR:Y,ZE
     *RROR:Y,NORANDOM,NOSCATTER,COUNTS,TABLE,DATA,HIDE:Y,LIMITED,TITLE:Y
     *,VARIABLE:2:Y,LINES,ROWS,POINTS,COLUMNS,SETS,SELECT:S,RANDOM:::0,S
     *CATTER:::0,SLICES,SYMBOL:T,SIZE:::2,INTENSITY:1:7:2,WIDTH:1:7:2,WH
     *ITE:1,RED:2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,DO:1,DOT:1,DO
     *TS:1,DOTTED:1,DA:2,DASHES:2,DASHED:2,DOT-DASH:3,DOTDASHED:3,SOLID:
     *4,FUNNY:5,PATTERNED:6,DAASHES:7,SPACE:8,BLACK:8,,;')
      GOTO (10592,10597,10595,10595,10595,10595,10591,10597, 10595),INTE
     *RP
10595 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10591
10597 GOTO ( 10620,10630,10630,10630,10870,10870,10880,10890,10900,10910
     *,10920,10930,10940,10950,10950,10960,10970,11050,11060,11070,11080
     *,11090,11100,11100,11110,11110,11120,11130,11140,11140,11150,11160
     *,11170,11180,11180,11190,11190,11190,11190,11190,11190,11190,11200
     *,11200,11200,11200,11200,11200,11200,11200,11200,11200,11200,11200
     *,11200,11200,11200,11190,10595),KEYORD
10592 CONTINUE
      IF (NUMBER.gt.400/2) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Too many ticks'),3)
      RETURN
      ENDIF
      IHIDE=0
      IF (LHIDE) IHIDE=4
      IF (LCYCLE) THEN
      KTYPE=IOR(KTYPE,4)
      LTYPE=IOR(LTYPE,4)
      ENDIF
      IF (.NOT.(FLAGS(23).and.FLAGS(92))) THEN
      IF (LEXPAN) THEN
      NXYLIM(1,1)=N1
      NXYLIM(1,2)=N2
      NXYLIM(2,1)=N3
      NXYLIM(2,2)=N4
      NXYLIM(3,1)=NS1
      NXYLIM(3,2)=NS2
      DO 11211 I=1,2
      DO 11221 J=1,3
      EXYZLIM(J,I)=TLIM(J,I)
11221 CONTINUE
11222 CONTINUE
11211 CONTINUE
11212 CONTINUE
      ENDIF
      IF (N1.eq.0) N1=1
      IF (IBTYPE.eq.2) THEN
      N2=NMESH1-1
      N3=1
      N4=NMESH2-1
      ENDIF
      IF (LAXES.or.LGRID) THEN
      DO 11231 J=1,2
      DO 11241 I=1,3
      TLIM1(I,J)=TLIM(I,J)
11241 CONTINUE
11242 CONTINUE
11231 CONTINUE
11232 CONTINUE
      IF (TLIM1(1,1) .eq. HNONE) TLIM1(1,1)=-1.0E35
      ITEX=8*INTEN+64*IAND(7,IAXTEX/64)+512*ICOL
      CALL T2CWTS(ITEX,IAXSAV)
      IF (NUMBER.eq.0) THEN
      FLAGS(2) = .FALSE.
      FLAGS(3) = .FALSE.
      CALL T2TCKS(IHIDE+1)
      ELSE
      FLAGS(3)=.true.
      IA=3
11251 IF(.NOT.(.NOT.(IA.gt.NUMBER))) GOTO 11252
      DO 11261 I=1,2
      DO 11271 J=1,3
      IF (ABS(TLIM1(J,I)).ge.1.0E35) TLIM1(J,I)=XYZLIM(J,I)
11271 CONTINUE
11272 CONTINUE
11261 CONTINUE
11262 CONTINUE
      I=IBUFF(IA-2)
      JXYZ=IABS(MOD(I,10))
      ILAB1=MOD(I/10,10)
      ILAB2=ILAB1+I/50
      IF (FLAGS(82) .or. FLAGS(56)) THEN
      ILAB2=ILAB1
      ENDIF
      DO 11281 I=1,IBUFF(IA-1)
      K=IA+I-1
      T=BUFFR(K)
      IF (T.lt.TLIM1(JXYZ,1) .or. T.gt.TLIM1(JXYZ,2)) IBUFF(K)=0
11281 CONTINUE
11282 CONTINUE
      DO 11291 I=ILAB1,ILAB2,2
      IAXIS=0
      ITICK=0
      ILABEL=0
      IF (FLAGS(56)) THEN
      IBOT=1
      IAXIS=1
      IF (FLAGS(JXYZ+43)) ITICK=1
      IF (FLAGS(JXYZ+46)) ILABEL=1
      ELSE
      ILABEL=-I
      IF (JXYZ.eq.3)JXYZ=1
      IBOT=I/3+1
      IF (LSCREV(3-JXYZ)) IBOT=3-IBOT
      ILAB=-I
      IF (FLAGS(I+18) .AND. FLAGS(JXYZ+49)) THEN
      IF (FLAGS(82)) IAXIS=1
      IF (FLAGS(JXYZ+43).AND. FLAGS(I+31)) ITICK=1
      IF (FLAGS(JXYZ+46) .AND. FLAGS(I+35)) ILABEL=I
      ENDIF
      ENDIF
      DO 11301 K=1,2
      DO 11311 J=1,3
      XYZ(JXYZ,K)=TLIM1(JXYZ,K)
      IF (J.ne.JXYZ) THEN
      IF (FLAGS(82)) THEN
      XYZ(J,K)=ORAXES(J)
      ELSE
      XYZ(J,K)=TLIM1(J,IBOT)
      ENDIF
      ENDIF
11311 CONTINUE
11312 CONTINUE
11301 CONTINUE
11302 CONTINUE
      IF (IBUFF(IA-1).gt.0.and.LAXES) CALL T2AXIS( XYZ, JXYZ+IHIDE, BUFF
     *R(IA), BUFFR(400/2+1), 1,IBUFF(IA-1), IBUFF(IA), IAXIS,ITICK,ILABE
     *L)
11291 CONTINUE
11292 CONTINUE
      IA=IA+IBUFF(IA-1)+2
      GOTO 11251
11252 CONTINUE
      IF (GRDTYP.ne.0) THEN
      JGRID=400/2+1
      DO 11321 JXYZ=1,3
      IBUFF(400/2+JXYZ)=JGRID
      KGRID=JGRID
      IA=3
11331 IF(.NOT.(.NOT.(IA.gt.NUMBER))) GOTO 11332
      IF (MOD(IBUFF(IA-2),10) .eq. JXYZ) THEN
      DO 11341 I=IA,IA+IBUFF(IA-1)-1
      IF (IBUFF(I).gt.0) THEN
      BUFFR(JGRID)=BUFFR(I)
      JGRID=JGRID+1
      ENDIF
11341 CONTINUE
11342 CONTINUE
      ENDIF
      IA=IA+IBUFF(IA-1)+2
      GOTO 11331
11332 CONTINUE
      IF (KGRID.eq.JGRID) THEN
      IF (FLAGS(82)) THEN
      BUFFR(JGRID)=ORAXES(JXYZ)
      ELSE
      BUFFR(JGRID)=XYZLIM(JXYZ,1)
      ENDIF
      JGRID=JGRID+1
      ENDIF
      IBUFF(400/2+JXYZ+3)=JGRID-1
11321 CONTINUE
11322 CONTINUE
      CALL T2GRID(IBUFF(400/2+1),BUFFR,IHIDE)
      ENDIF
      ENDIF
      CALL T2CWTS(IAXSAV,IDUM)
      FLAGS(82)=FSAVE
      DO 11351 I=1,3
      ORAXES(I)=TSAVE(I)
11351 CONTINUE
11352 CONTINUE
      IF (.not.(LOUTL.or.LTABL.or.LDATA)) RETURN
      ENDIF
      IF (LOUTL) THEN
      ITEX=8*INTEN+64*IAND(7,IAXTEX/64)+512*ICOL
      CALL T2CWTS(ITEX,IAXSAV)
      FLAGS(2)=.false.
      CALL T2AXES
      CALL T2CWTS(ITEX,IAXSAV)
      IF (.not.(LTABL.or.LDATA)) RETURN
      ENDIF
      ITX=8*INTEN+64*ITXTUR+512*ICOL
      DO 11361 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF (FLAGS(23)) RETURN
      IF (LTRAP) RETURN
      IF(NP .lt. N1)GOTO 11361
      I7=MIN(I7,I7_MAX)
      I4=MIN(I4,I4_MAX)
      I5=MIN(I5,I5_MAX)
      I6=MIN(I6,I6_MAX)
      DO 11371 J=1,2
      DO 11381 I=1,3
      TLIM1(I,J)=TLIM(I,J)
11381 CONTINUE
11382 CONTINUE
11371 CONTINUE
11372 CONTINUE
      IF (IBTYPE.eq.1 .or. (.not.FLAGS(56) .and. (MESH2D.eq.MESH1 .or. M
     *ESH2D.eq.MESH2)) ) THEN
      NN3=N3
      NN1=N1
      IF (IBTYPE.eq.2) THEN
      CALL T23LIM(DATBUF(IM),NINCR0,NINCR1,NINCR2)
      IF (MESH2D.eq.MESH2) THEN
      NINCR2=NINCR1*NINCR0
      NINCR1=NINCR0
      I=MESH1
      ELSEIF (MESH2D.eq.MESH1) THEN
      I=N3
      NN3=N1
      NN1=I
      I=NP
      NP=NL
      NL=I
      I1=I2
      I4=I5
      NINCR1=NINCR1*NINCR0
      NINCR2=NINCR0
      I=MESH2
      ENDIF
      IF (TLIM(1,1) .ne. HNONE) THEN
      DO 11391 J=1,2
      TLIM1(1,J)=TLIM(I,J)
      TLIM1(2,J)=TLIM(MESH3,J)
11391 CONTINUE
11392 CONTINUE
      ENDIF
      I2=I3
      I5=I6
      I6=1
      I3=1
      ELSE
      NL=NN3
      ENDIF
      SYMSAV=SYMBOL
      DO 11401 I=NN3,NL
      IF(LTRAP)GOTO 11402
      IF (LCYCLE) THEN
      ICYCLE=ICYCLE+1
      IF (ICYCLE .gt. N_CYCLE) ICYCLE=1
      J=ITX_CYCLE(ICYCLE)
      ITX=8*INTEN+64*ITXTUR+512*ICOL
      IF (ICOL .eq. 0) ITX=ITX+IAND(3584,J)
      IF (ITXTUR .eq. 0) ITX=ITX+IAND(448,J)
      IF (INTEN .eq. 0) ITX=ITX+IAND(56,J)
      IF (SYM_CYCLE(ICYCLE) .ne. 0) SYMBOL=SYM_CYCLE(ICYCLE)
      ENDIF
      IF (SYM .ne. 0)SYMBOL=SYM
      IF (LTABL) THEN
      CALL T2TABL(DATBUF(I1),DATBUF(I2),DATBUF(I3), NP-NN1+1,NINCR1,IOR(
     *ITX,LTYPE),SYSIZ,TLIM1, DATBUF(I4),DATBUF(I5),DATBUF(I6), TBL_OFFS
     *ET,ITBL_OPT, DATBUF(I_NDX),DATBUF(I_NDY),DATBUF(I_NDZ))
      ELSE
      CALL T2PLOT(DATBUF(I1),DATBUF(I2),DATBUF(I3), DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), DATBUF(I7),NP-NN1+1,NINCR1,IOR(ITX,JTYPE),SYSIZ,TLIM
     *1, DATBUF(I_NDX),DATBUF(I_NDY),DATBUF(I_NDZ))
      ENDIF
      I2=I2+NINCR2
      IF (DATBUF(I5) .ne. HNONE) I5=I5+NINCR2
11401 CONTINUE
11402 CONTINUE
      SYMBOL=SYMSAV
      ELSE
      IF (.not.FLAGS(75)) THEN
      IF (MESH2D.eq.0)MESH2D=MESH3
      ENDIF
      NN1=(I1-IM)/NINCR0
      NN3=(I2-IM)/(NINCR0*NINCR1)
      NP=NP-N1+NN1
      NL=NL-N3+NN3
      IF (LEXPAN) THEN
      NXYLIM(1,1)=NN1
      NXYLIM(1,2)=NP
      NXYLIM(2,1)=NN3
      NXYLIM(2,2)=NL
      ENDIF
      CALL T23LIM(DATBUF(IM),NINCR0,NINCR1,NINCR2)
      IF (LTABL) THEN
      CALL T23TBL(DATBUF(IM),NINCR0,NINCR1,NINCR2, NN1,NP,NN3,NL, SYSIZ,
     *IOR(ITX,LTYPE),TLIM,XYZIND)
      ELSE
      IF (SYM .ne. 0)SYMBOL=SYM
      CALL T23PLT(DATBUF(IM),NINCR0,NINCR1,NINCR2,IXYZ, SYM,IOR(ITX,KTYP
     *E),SYSIZ,TLIM,NN1,NP,NN3,NL)
      ENDIF
      ENDIF
      IF (LTITLE) CALL T2_PLOT_TITLE(ISET,.false.)
11361 CONTINUE
11362 CONTINUE
      ENDIF
      END
      SUBROUTINE T2PLOT(XVALS,YVALS,ZVALS,XERRS,YERRS,ZERRS,SYMIN,NP,INC
     *RMT,JTYPE, SYSIZ,TLIM,XNERR,YNERR,ZNERR)
      IMPLICIT NONE
      INTEGER INCRMT,NP,JTYPE
      REAL XVALS(INCRMT,*),YVALS(INCRMT,*),ZVALS(INCRMT,*), XERRS(INCRMT
     *,*),YERRS(INCRMT,*),ZERRS(INCRMT,*), XNERR(INCRMT,*),YNERR(INCRMT,
     **),ZNERR(INCRMT,*), SYMIN(INCRMT,*),SYSIZ,TLIM(3,2)
      LOGICAL XEXIST,YEXIST,ZEXIST,SEXIST
      LOGICAL NDXEXIS,NDYEXIS,NDZEXIS
      LOGICAL DXEXIS,DYEXIS,DZEXIS,LLIMIT,LCYCLE,LVECT,LOKAY,LWRT,LSHADO
     *W
      LOGICAL LFILL,LBAR
      INTEGER I,J,K,N,NS,NERR,ITXSAV,IXYZ,IDUM, NDIM,IXYZ1,IXYZ2,IXYZ3
      INTEGER JERR(3),T2_GET_AXIS_SIDE
      REAL T,TEMP,BAR,BRK,SIZNOW,SIZNEW,ERRP,ERRN,DX,DY,RAD,DIST
      REAL T2_MAGN,T2_DOT
      REAL XUP(3,2)
      REAL XYZV(3),XYZW(3,10),XYZE(3,2),XYZE1(3,2),XYZE2(3,8),XY3(2,8), 
     *XY(2,9)
      REAL SYMBL1,SYMBL,FAC(3),T2_DIST
      CHARACTER*2 SYTITL
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER IAND
      REAL HNONE
      DATA HNONE /-666.666/
      IF (NP.GT.0) THEN
      IF (FLAGS(121)) CALL TXXMT
      LOKAY=.TRUE.
      LVECT=IAND(JTYPE,1) .ne.0
      LFILL=IAND(JTYPE,2) .ne.0
      LLIMIT=TLIM(1,1) .ne. HNONE
      LSHADOW=SHADOWTYP.ne.0 .and. FLAGS(56)
      CALL T2AXES
      IF (.not.FLAGS(75)) RETURN
      FLAGS(28) = .TRUE.
      CALL T2CWTS(JTYPE,ITXSAV)
      CALL TXSDEF
      CALL TXSCIS(2)
      IF(SYSIZ.eq.0) THEN
      SIZNEW=SYMSIZ 
      ELSE
      SIZNEW=SYSIZ
      ENDIF
      SIZNOW=SIZNEW
      XUP(1,1)=HNONE
      IF (FLAGS(56)) THEN
      NDIM=3
      IF (SYDIR(2).ge.0) THEN
      CALL T2GTDR(SIZNOW,SYDIR,XUP)
      ENDIF
      ELSE
      NDIM=2
      ENDIF
      DO 11411 I=1,3
      XYZV(I)=XYZLIM(I,1)
      JERR(I)=1
      DO 11421 J=1,2
      XYZE(I,J)=0
11421 CONTINUE
11422 CONTINUE
11411 CONTINUE
11412 CONTINUE
      SEXIST=SYMIN(1,1).ne.HNONE
      XEXIST=XVALS(1,1).NE.HNONE
      YEXIST=YVALS(1,1).NE.HNONE
      ZEXIST=ZVALS(1,1).NE.HNONE
      DXEXIS=XERRS(1,1).NE.HNONE
      DYEXIS=YERRS(1,1).NE.HNONE
      DZEXIS=ZERRS(1,1).NE.HNONE
      NDXEXIS=XNERR(1,1).NE.HNONE
      NDYEXIS=YNERR(1,1).NE.HNONE
      NDZEXIS=ZNERR(1,1).NE.HNONE
      IF (NDXEXIS) JERR(1)=2
      IF (NDYEXIS) JERR(2)=2
      IF (NDZEXIS) JERR(3)=2
      IF(.not.SEXIST) SYMBL=SYMBOL
      NERR=0
      IF (DXEXIS) NERR=1
      IF (DYEXIS) NERR=2
      IF (DZEXIS .and. FLAGS(56)) NERR=3
      IF ( NERR .eq. 0) THEN
      LVECT=.false.
      ENDIF
      IF (LSHADOW) THEN
      NONLIN(4)=0
      DO 11431 I=1,3
      IF (FLAGS(82)) THEN
      XYZV(I)=ORAXES(I)
      ELSE
      XYZV(I)=XYZLIM(I,T2_GET_AXIS_SIDE(-I))
      ENDIF
11431 CONTINUE
11432 CONTINUE
      CALL T2XFRM(3,1,XYZV,NONLIN,XFRM12,3,XYZW(1,10))
      NONLIN(4)=1
      ENDIF
      DO 11441 N=1,NP
      IF (FLAGS(127)) CALL TXXMT
      IF (LTRAP) GOTO 11450
      IF (SEXIST) THEN
      SYMBL = SYMIN(1,N)
      IF (SYMBL.EQ.NOSYMB) SYMBL=SYMBOL
      ENDIF
      IF (XEXIST) XYZV(1)=XVALS(1,N)
      IF (YEXIST) XYZV(2)=YVALS(1,N)
      IF (ZEXIST) XYZV(3)=ZVALS(1,N)
      IF (DXEXIS) XYZE(1,1)=XERRS(1,N)
      IF (DYEXIS) XYZE(2,1)=YERRS(1,N)
      IF (DZEXIS) XYZE(3,1)=ZERRS(1,N)
      IF (NDXEXIS) XYZE(1,2)=XNERR(1,N)
      IF (NDYEXIS) XYZE(2,2)=YNERR(1,N)
      IF (NDZEXIS) XYZE(3,2)=ZNERR(1,N)
      IF (LLIMIT) THEN
      LOKAY=.TRUE.
      IF (XEXIST) LOKAY= XYZV(1).GE.TLIM(1,1) .and.XYZV(1) .LE.TLIM(1,2)
     *
      IF (LOKAY.and.YEXIST) LOKAY= XYZV(2).GE.TLIM(2,1) .and.XYZV(2) .LE
     *.TLIM(2,2)
      IF (LOKAY.and.ZEXIST) LOKAY= XYZV(3).GE.TLIM(3,1) .and.XYZV(3) .LE
     *.TLIM(3,2)
      IF(.not.LOKAY)GOTO 11441
      ENDIF
      LWRT=.false.
      IF (.not. LVECT) THEN
      DO 11501 IXYZ=1,NERR
      ERRP=ABS(XYZE(IXYZ,1))
      ERRN=ABS(XYZE(IXYZ,JERR(IXYZ)))
      IF (ABS(ERRP)+ABS(ERRN) .GT. 0.30E-37) THEN
      IF(FLAGS(27))THEN
      IF(IXYZ .eq. 1) THEN
      ERRP=MIN(ERRP,3.1415/RADANG)
      ERRN=MIN(ERRN,3.1415/RADANG)
      ELSE IF(IXYZ .eq. 3 .and. FLAGS(91)) THEN
      ERRP=MIN(ERRP,(3.1415/2)/RADANG)
      ERRN=MIN(ERRN,(3.1415/2)/RADANG)
      ENDIF
      ENDIF
      DO 11511 J=1,2
      DO 11521 I=1,3
      XYZE1(I,J)=XYZV(I)
11521 CONTINUE
11522 CONTINUE
11511 CONTINUE
11512 CONTINUE
      CALL T2XFRM(3,1,XYZV,NONLIN,XFRM13,2,XY3(1,7))
      XYZE1(IXYZ,1)=XYZV(IXYZ)+ERRP
      XYZE1(IXYZ,2)=XYZV(IXYZ)-ERRN
      CALL T2XFRM(3,2,XYZE1,NONLIN,XFRM13,2,XY3(1,1))
      BAR=BARSIZ(IXYZ)
      IF (BAR .lt. 0) BAR=BAR*SIZNOW/10
      IF (FLAGS(56) .and. BAR .ne. 0) THEN
      CALL T2XFRM(3,2,XYZE1,NONLIN,XFRM12,3,XYZE2(1,1))
      IF (FLAGS(27)) CALL T2XFRM(3,2,XYZV,NONLIN,XFRM12,3,XYZE2(1,7))
      ELSE
      DO 11531 J=1,2
      DO 11541 I=1,2
      XYZE2(I,J)=XY3(I,J)
11541 CONTINUE
11542 CONTINUE
11531 CONTINUE
11532 CONTINUE
      DO 11551 I=1,2
      XYZE2(I,7)=XY3(I,7)
11551 CONTINUE
11552 CONTINUE
      ENDIF
      BRK=BARBRK(IXYZ)
      IF(BRK .lt. 0)BRK=ABS(BRK*SIZNOW/10)
      IF (BAR .NE. 0) THEN
      DO 11561 I=1,NDIM
      FAC(I)=0
11561 CONTINUE
11562 CONTINUE
      FAC(MAX(1,3-IXYZ))=1
      IF(FLAGS(27)) THEN
      DX=XYZE2(1,7)-XYZE2(1,1)
      DY=XYZE2(2,7)-XYZE2(2,1)
      RAD=SQRT(DX**2+DY**2)
      IF(RAD.ne.0) THEN
      FAC(1)=DY/RAD
      FAC(2)=-DX/RAD
      ENDIF
      ENDIF
      DO 11571 I=1,2
      DO 11581 J=1,NDIM
      XYZE2(J,I+2) = XYZE2(J,1)+BAR*FAC(J)
11581 CONTINUE
11582 CONTINUE
      BAR=-BAR
11571 CONTINUE
11572 CONTINUE
      LBAR=.true.
      IF (FLAGS(131) .AND. SYMBL .NE. NOSYMB ) THEN
      DO 11591 J=1,2
      XY3(J,8)=XY3(J,1)
11591 CONTINUE
11592 CONTINUE
      T=T2_DIST(XY3(1,7),XY3(1,8),2)
      LBAR=T .GE. MAX(BRK,SIZNOW/10)/2
      ENDIF
      IF (LBAR) THEN
      IF (FLAGS(56)) THEN
      CALL T2XFRM(3,2,XYZE2(1,3),LINEAR,XFRM24,2,XY)
      ELSE
      DO 11601 J=3,4
      DO 11611 I=1,2
      XY3(I,J)=XYZE2(I,J)
11611 CONTINUE
11612 CONTINUE
11601 CONTINUE
11602 CONTINUE
      CALL T2XFRM(2,2,XY3(1,3),LINEAR,XFRM34,2,XY)
      ENDIF
      CALL TXLINX(XY,2,LINTEX)
      ENDIF
      ENDIF
      IF ( (BRK .NE. 0 .AND. SYMBL .NE. NOSYMB) .or. FLAGS(27) ) THEN
      DO 11621 I=1,2
      DO 11631 J=1,2
      XY3(J,8)=XY3(J,I)
11631 CONTINUE
11632 CONTINUE
      T=T2_DIST(XY3(1,7),XY3(1,8),2)
      IF(T .eq. 0.0)GOTO 11621
      T=MIN(1.0,MAX(0.0,0.5*BRK/T))
      IF(T .eq. 1.0)GOTO 11621
      IF (SYMBL .EQ. NOSYMB ) T=0
      DO 11641 J=1,2
      XY3(J,I+4) = XY3(J,8)
      XY3(J,7-I) = XY3(J,7)*(1-T)+XY3(J,8)*T
11641 CONTINUE
11642 CONTINUE
      CALL T2XFRM(2,2,XY3(1,5),LINEAR,XFRM34,2,XY)
      CALL TXLINX(XY,2,LINTEX)
      LWRT=.true.
11621 CONTINUE
11622 CONTINUE
      ELSE
      CALL T2XFRM(2,2,XY3,LINEAR,XFRM34,2,XY)
      CALL TXLINX(XY,2,LINTEX)
      LWRT=.true.
      ENDIF
      IF (BAR.NE.0.) THEN
      IF(FLAGS(27)) THEN
      DX=XYZE2(1,7)-XYZE2(1,2)
      DY=XYZE2(2,7)-XYZE2(2,2)
      RAD=SQRT(DX**2+DY**2)
      IF(RAD.ne.0) THEN
      FAC(1)=DY/RAD
      FAC(2)=-DX/RAD
      ENDIF
      ENDIF
      DO 11651 I=1,2
      DO 11661 J=1,NDIM
      XYZE2(J,I+2) = XYZE2(J,2)+BAR*FAC(J)
11661 CONTINUE
11662 CONTINUE
      BAR=-BAR
11651 CONTINUE
11652 CONTINUE
      LBAR=.true.
      IF (FLAGS(131) .AND. SYMBL .NE. NOSYMB ) THEN
      DO 11671 J=1,2
      XY3(J,8)=XY3(J,2)
11671 CONTINUE
11672 CONTINUE
      T=T2_DIST(XY3(1,7),XY3(1,8),2)
      LBAR=T .GE. MAX(BRK,SIZNOW/10)/2
      ENDIF
      IF (LBAR) THEN
      IF (FLAGS(56)) THEN
      CALL T2XFRM(3,2,XYZE2(1,3),LINEAR,XFRM24,2,XY)
      ELSE
      DO 11681 J=3,4
      DO 11691 I=1,2
      XY3(I,J)=XYZE2(I,J)
11691 CONTINUE
11692 CONTINUE
11681 CONTINUE
11682 CONTINUE
      CALL T2XFRM(2,2,XY3(1,3),LINEAR,XFRM34,2,XY)
      ENDIF
      CALL TXLINX(XY,2,LINTEX)
      ENDIF
      ENDIF
      ENDIF
11501 CONTINUE
11502 CONTINUE
      ENDIF
      IF (LVECT .and. T2_MAGN(XYZE,3).gt.0.30E-37) THEN
      DO 11701 J=1,3
      XYZE2(J,1)=XYZV(J)
      XYZE2(J,2)=XYZE(J,1)
11701 CONTINUE
11702 CONTINUE
      IF (FLAGS(27)) THEN
      IF (FLAGS(91)) THEN
      CALL T2SPHCV(XYZE2(1,1),XYZE2(2,1),XYZE(3,1), XYZE2(1,1),XYZE2(2,1
     *),XYZE(3,1), -2,3,.false.,radang)
      ELSE
      CALL T2POLCV(XYZE2(1,1),XYZE2(2,1), XYZE2(1,1),XYZE2(2,1), -2,3,.f
     *alse.,radang)
      ENDIF
      ENDIF
      DO 11711 J=1,3
      XYZE2(J,2)=XYZE2(J,2)+XYZE2(J,1)
11711 CONTINUE
11712 CONTINUE
      IF (FLAGS(27)) THEN
      IF (FLAGS(91)) THEN
      CALL T2SPHCV(XYZE2(1,1),XYZE2(2,1),XYZE(3,1), XYZE2(1,1),XYZE2(2,1
     *),XYZE(3,1), 2,3,.false.,radang)
      ELSE
      CALL T2POLCV(XYZE2(1,1),XYZE2(2,1), XYZE2(1,1),XYZE2(2,1), 2,3,.fa
     *lse.,radang)
      ENDIF
      ENDIF
      IF (BARSIZ(1) .eq. 0) THEN
      NS=2
      CALL T2XFRM(3,2,XYZE2,NONLIN,XFRM14,2,XY)
      ELSE
      NS=8
      IF (.not. FLAGS(56)) NS=5
      BAR=BARSIZ(1)
      IF (BAR .lt. 0) BAR=BAR*SIZNOW
      CALL T2XFRM(3,2,XYZE2,NONLIN,XFRM12,3,XYZW)
      DO 11721 I=1,3
      XYZE1(I,1)=XYZW(I,2)-XYZW(I,1)
11721 CONTINUE
11722 CONTINUE
      TEMP=T2_MAGN(XYZE1,3)
      IF (TEMP .gt. 0.30E-37) THEN
      IF (BAR .lt. 0) BAR=ABS(BAR*TEMP)
      IF (TEMP .lt. .25*BAR) BAR=.25*TEMP
      TEMP=2*BAR/(TEMP)
      DO 11731 I=1,3
      XYZE1(I,1)=TEMP*XYZE1(I,1)
11731 CONTINUE
11732 CONTINUE
      DO 11741 I=3,NS
      DO 11751 J=1,3
      IF (MOD(I-2,3) .ne. 0) THEN
      XYZW(J,I)=XYZW(J,2)-XYZE1(J,1)
      ELSE
      XYZW(J,I)=XYZW(J,2)
      ENDIF
11751 CONTINUE
11752 CONTINUE
11741 CONTINUE
11742 CONTINUE
      K=1
      TEMP=0
      DO 11761 I=1,NS/4
      DO 11771 J=1,3
      XYZE2(I,6)=0
11771 CONTINUE
11772 CONTINUE
      XYZE2(4-I,6)=1
      CALL T2_CROSS(XYZE2(1,6),XYZE1,XYZE2(1,I))
      T=T2_MAGN(XYZE2(1,I),3)
      IF (T .gt. TEMP) THEN
      K=I
      TEMP=T
      ENDIF
11761 CONTINUE
11762 CONTINUE
      IF (FLAGS(56)) CALL T2_CROSS(XYZE2(1,K),XYZE1,XYZE2(1,3-K))
      DO 11781 K=1,NS/4
      T=T2_MAGN(XYZE2(1,K),3)
      T=BAR/T
      DO 11791 I=1,3
      XYZE2(I,K)=XYZE2(I,K)*T
11791 CONTINUE
11792 CONTINUE
      J=K*3
      DO 11801 I=1,3
      XYZW(I,j)= XYZW(I,j) +XYZE2(I,K)
      XYZW(I,j+1)=XYZW(I,j+1)-XYZE2(I,K)
11801 CONTINUE
11802 CONTINUE
11781 CONTINUE
11782 CONTINUE
      ELSE
      NS=2
      ENDIF
      CALL T2XFRM(3,NS,XYZW,LINEAR,XFRM24,2,XY)
      ENDIF
      CALL TXLINX(XY,NS,LINTEX)
      ELSEIF (.not. LWRT) THEN
      CALL T2XFRM(3,1,XYZV,NONLIN,XFRM14,2,XY)
      CALL TXDOT(XY(1,1),XY(2,1))
      ENDIF
      IF (SYMBL.NE.NOSYMB .or. LSHADOW) THEN
      CALL T2XFRM(3,1,XYZV,NONLIN,XFRM12,3,XYZW)
      CALL T2XFRM(3,1,XYZW,LINEAR,XFRM24,2,XY)
      IF (LSHADOW) THEN
      DO 11461 IXYZ1=1,3
      IF (IAND(SHADOWTYP,2**(IXYZ1+3)) .ne. 0) THEN
      DO 11471 I=1,3
      XYZW(I,2)=XYZW(I,1)
11471 CONTINUE
11472 CONTINUE
      XYZW(IXYZ1,2)=XYZW(IXYZ1,10)
      IF (IAND(SHADOWTYP,2**(IXYZ1-1)) .ne. 0) THEN
      CALL T2CWTS(SHADOWTEX,IDUM)
      CALL TXSDEF
      CALL T2XFRM(3,1,XYZW(1,2),LINEAR,XFRM24,2,XY(1,2))
      CALL TXLINX(XY,2,LINTEX)
      CALL T2CWTS(JTYPE,IDUM)
      CALL TXSDEF
      ENDIF
      IF (IAND(SHADOWTYP,8).NE.0) THEN
      DIST=0.
      DO 11481 I=1,3
      DIST=DIST+VUEDIR(I)*(XYZW(I,2)-EYEPNT(I))
11481 CONTINUE
11482 CONTINUE
      SIZNOW=SIZNEW*SCRD/AMAX1(0.0001,ABS(DIST))
      CALL TXTSYM(XY(1,2),XY(2,2),SYMBL,SIZNOW)
      ELSE
      CALL TXDOT(XY(1,2),XY(2,2))
      ENDIF
      ENDIF
11461 CONTINUE
11462 CONTINUE
      ENDIF
      IF (SYMBL.NE.NOSYMB) THEN
      IF (FLAGS(56)) THEN
      DIST=0.
      DO 11491 I=1,3
      DIST=DIST+VUEDIR(I)*(XYZW(I,1)-EYEPNT(I))
11491 CONTINUE
11492 CONTINUE
      SIZNOW=SIZNEW*SCRD/AMAX1(0.0001,ABS(DIST))
      ENDIF
      LWRT=.true.
      IF (XUP(1,1) .ne. HNONE) THEN
      CALL SYMTXT(SYMBL,SYTITL)
      CALL TX3TXT(XYZW,XUP(1,1),XUP(1,2),SYTITL(1:1),SYTITL(2:2),0)
      ELSE
      IF (LFILL) THEN
      CALL TXFILLSYM(XY(1,1),XY(2,1),SYMBL,SIZNOW)
      ELSE
      CALL TXTSYM(XY(1,1),XY(2,1),SYMBL,SIZNOW)
      ENDIF
      ENDIF
      ENDIF
      ENDIF
11441 CONTINUE
11442 CONTINUE
      IF (FLAGS(121)) CALL TXXMT
11450 CONTINUE
      CALL TXSCIS(1)
      CALL T2CWTS(ITXSAV,IDUM)
      ENDIF
      CALL T2TCKS(8)
      END
      REAL FUNCTION T2_DOT(XYZ1,XYZ2,N)
      IMPLICIT NONE
      INTEGER I,N
      REAL XYZ1(N),XYZ2(N),TEMP
      TEMP=0
      DO 11811 I=1,N
      TEMP=TEMP+XYZ1(I)*XYZ2(I)
11811 CONTINUE
11812 CONTINUE
      T2_DOT=TEMP
      END
      REAL FUNCTION T2_DIST(XYZ1,XYZ2,N)
      IMPLICIT NONE
      INTEGER I,N
      REAL XYZ1(N),XYZ2(N),TEMP
      TEMP=0
      DO 11821 I=1,N
      TEMP=TEMP+(XYZ1(I)-XYZ2(I))**2
11821 CONTINUE
11822 CONTINUE
      T2_DIST=SQRT(TEMP)
      END
      SUBROUTINE T2_CROSS(XYZ1,XYZ2,XYZ3)
      IMPLICIT NONE
      INTEGER I,J,K
      REAL XYZ1(3),XYZ2(3),XYZ3(3)
      DO 11831 I=1,3
      J=MOD(I,3)+1
      K=6-I-J
      XYZ3(I)=XYZ1(J)*XYZ2(K)-XYZ2(J)*XYZ1(K)
11831 CONTINUE
11832 CONTINUE
      END
      REAL FUNCTION T2_MAGN(XYZ,N)
      IMPLICIT NONE
      INTEGER I,N
      REAL XYZ(N),TEMP
      TEMP=0
      DO 11841 I=1,N
      TEMP=TEMP+XYZ(I)**2
11841 CONTINUE
11842 CONTINUE
      T2_MAGN=SQRT(TEMP)
      END
      SUBROUTINE T2GTDR(SIZE,SYDIR,XUP)
      IMPLICIT NONE
      REAL XUP(3,2),SYDIR(3),TEMP1,TEMP2,SIZE
      INTEGER I
      REAL RAD
      PARAMETER (RAD=3.14159265/180.)
      XUP(1,1)= COS(SYDIR(3)*RAD)
      XUP(2,1)= SIN(SYDIR(3)*RAD)
      XUP(1,2)=-SIN(SYDIR(3)*RAD)
      XUP(2,2)= COS(SYDIR(3)*RAD)
      DO 11851 I=1,2
      XUP(3,I)=0
11851 CONTINUE
11852 CONTINUE
      IF (SYDIR(2).gt. 0) THEN
      DO 11861 I=1,2
      TEMP1= XUP(1,I)*COS(SYDIR(1)*RAD)+XUP(2,I)*SIN(SYDIR(1)*RAD)
      TEMP2=-XUP(1,I)*SIN(SYDIR(1)*RAD)+XUP(2,I)*COS(SYDIR(1)*RAD)
      XUP(1,I)=-SIN(SYDIR(1)*RAD)*TEMP2
     *         +COS(SYDIR(2)*RAD)*COS(SYDIR(1)*RAD)*TEMP1
      XUP(2,I)= COS(SYDIR(1)*RAD)*TEMP2
     *         +COS(SYDIR(2)*RAD)*SIN(SYDIR(1)*RAD)*TEMP1
      XUP(3,I)=-SIN(SYDIR(2)*RAD)*TEMP1
11861 CONTINUE
11862 CONTINUE
      ENDIF
      DO 11871 I=1,3
      XUP(I,1)=SIZE*XUP(I,1)
11871 CONTINUE
11872 CONTINUE
      END
      SUBROUTINE T2_ARROW(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      LOGICAL LF1,LF2, LFILL, LHIDE
      INTEGER I,J,K,ICOL,INTEN,IFT,IXYZ,ITXTUR
      REAL AROXYZ(3,5),AROD(4),XYZ0(2),XYZ2(2)
      INTEGER AROMOD(5)
      DATA HNONE /-666.666/
      DO 11881 I=1,2
      AROD(I) = 0.
      AROMOD(I) = 0
      AROXYZ(1,I) = HNONE
      AROXYZ(2,I) = HNONE
      AROXYZ(3,I) = 0
11881 CONTINUE
11882 CONTINUE
      AROD(3) = ASIZE
      AROD(4) = AFLARE
      ICOL=0
      ITXTUR=0
      INTEN=0
      IFT=1
      IXYZ=1
      LFILL=.false.
      LHIDE=.false.
      GOTO 11891
11900 CONTINUE
      IF (IXYZ.le.3) THEN
      AROXYZ(IXYZ,IFT)=FLOTNG
      IF (IXYZ.eq.3) AROMOD(IFT)=1
      IXYZ=IXYZ+1
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Extraneous number'),4)
      ENDIF
      GOTO 11891
11930 CONTINUE
      LFILL=LTOKEN
      GOTO 11891
11940 CONTINUE
      LHIDE=LTOKEN
      GOTO 11891
11950 CONTINUE
      CALL T2GTEX(ITXTUR)
      GOTO 11891
11960 CONTINUE
      INTEN=INTEG
      GOTO 11891
11970 CONTINUE
      ICOL=INTEG
      GOTO 11891
11980 CONTINUE
      I = INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      IF (I .eq. 3) FLOTNG=FLOTNG/REDUCE(3)
      AROD(I)=FLOTNG
      ENDIF
      GOTO 11891
12000 CONTINUE
      DO 12011 I=1,3
      AROXYZ(I,IFT)=AROXYZ(I,INTEG)
12011 CONTINUE
12012 CONTINUE
      AROMOD(IFT)=AROMOD(INTEG)
      GOTO 11891
12020 CONTINUE
      NSTJOU=LSTJOU
      CALL T2CURS(J,XYZ0,AROXYZ(1,5),XYZ2,LF1,LF2)
      IF (J.eq.ICHAR(' ')) THEN
      DO 12031 I=1,2
      AROXYZ(I,IFT)=AROXYZ(I,5)
12031 CONTINUE
12032 CONTINUE
      AROMOD(IFT)=0
      I=23
      IF (JOUFIL.ne.0.and. LSTJOU+I.le.LEN(STJOU)) THEN
      WRITE(STJOU(LSTJOU+1:LSTJOU+I), '(1p,2(A,G10.3))',ERR=12040)  ' ',
     *AROXYZ(1,IFT),',',AROXYZ(2,IFT)
      CALL T2SQEZ(STJOU(LSTJOU+2:LSTJOU+I),I)
      NSTJOU=NSTJOU+I+1
12040 CONTINUE
      ENDIF
      ENDIF
      GOTO 11891
12050 CONTINUE
      IFT = INTEG
      IXYZ= 1
      GOTO 11891
12060 CONTINUE
      AROMOD(IFT) = INTEG
      GOTO 11891
12070 CONTINUE
      AROD(IFT) = FLOTNG
      GOTO 11891
11910 GOTO ( 11930,11940,11950,11950,11950,11950,11950,11950,11950,11950
     *,11950,11950,11950,11950,11950,11950,11950,11960,11960,11970,11970
     *,11970,11970,11970,11970,11970,11980,11980,11980,12000,12000,12020
     *,12050,12050,12060,12060,12070,11970,11895),KEYORD
12080 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      RETURN
11891 CALL TOKEN(INFOIN,CARDIN,'FILL:Y,HIDE:Y,DO:1,DOT:1,DOTS:1,DOTTED:1
     *,DA:2,DASHES:2,DASHED:2,DOT-DASH:3,DOTDASHED:3,SOLID:4,FUNNY:5,PAT
     *TERNED:6,DAASHES:7,SPACE:8,,INTENSITY:1:7:2,WIDTH:1:7:2,WHITE:1,RE
     *D:2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,SIZE:3,FLAIR:4,FLARE:
     *4,HEAD:4,TAIL:3,CURSOR,FROM:1,TO:2,DATA:1,TEXT:0,LESS:::0,BLACK:8;
     *')
      GOTO (11892,11910,11900,11900,11895,11895,12080,11910,11895),INTER
     *P
11895 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 11891
11892 CONTINUE
      IF (FLAGS(23) .or. LTRAP) RETURN
      DO 12091 I=1,2
      DO 12101 J=1,2
      IF (AROXYZ(J,I).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Missing FROM or TO values
     *'),4)
      RETURN
      ENDIF
12101 CONTINUE
12102 CONTINUE
12091 CONTINUE
12092 CONTINUE
      ITXTUR=8*INTEN+64*ITXTUR+512*ICOL
      IF (LFILL) ITXTUR=ITXTUR+3
      IF (LHIDE) ITXTUR=ITXTUR+4
      CALL T2ARRO(AROXYZ,AROMOD,AROD,ITXTUR)
      DO 12111 J=1,2
      DO 12121 I=1,3
      AROXYZ(I,J+2)=AROXYZ(I,J)
12121 CONTINUE
12122 CONTINUE
      AROMOD(J+2)=AROMOD(J)
12111 CONTINUE
12112 CONTINUE
      END
      SUBROUTINE T2ARRO(XYZARO,MODARO,DARO,JTYPE)
      REAL XYZARO(3,2),DARO(4)
      INTEGER JTYPE,MODARO(2),NP
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL XYB(6,2),XY(2,2)
      IF (.NOT.FLAGS(73)) CALL TXDEF1
      IF (MODARO(1)+MODARO(2).NE.0) THEN
      IF (.NOT.FLAGS(75)) CALL TXDEF2
      IF (.NOT.FLAGS(75)) RETURN
      ENDIF
      DO 12131 I=1,2
      IF (MODARO(I).NE.0) THEN
      CALL T2XFRM(3,1,XYZARO(1,I),NONLIN,XFRM13,2,XY(1,I))
      ELSE
      XY(1,I)=XYZARO(1,I)
      XY(2,I)=XYZARO(2,I)
      ENDIF
12131 CONTINUE
12132 CONTINUE
      IF (XY(1,2).NE.XY(1,1) .OR. XY(2,2).NE.XY(2,1)) THEN
      DX = XY(1,2)-XY(1,1)
      DY = XY(2,2)-XY(2,1)
      DSQ = DX**2+DY**2
      D = SQRT(DSQ)
      SINE = DY/D
      COSINE = DX/D
      XYB(1,1) = XY(1,1) + COSINE*DARO(1)
      XYB(1,2) = XY(2,1) + SINE*DARO(1)
      XYB(4,1) = XY(1,2) - COSINE*DARO(2)
      XYB(4,2) = XY(2,2) - SINE*DARO(2)
      NP=2
      DR = 0.1*REDUCE(2)*DARO(3)
      IF (DR .ne. 0) THEN
      NP=4
      ENDIF
      DX = COSINE*DR
      DY = SINE*DR
      XYB(2,1) = XYB(4,1) - DX
      XYB(2,2) = XYB(4,2) - DY
      DR = 0.5*DARO(4)
      IF (DR .ne. 0) THEN
      NP=6
      SAVE = DX
      DX = DR*DY
      DY =-DR*SAVE
      XYB(3,1) = XYB(2,1) - DX
      XYB(3,2) = XYB(2,2) - DY
      XYB(5,1) = XYB(2,1) + DX
      XYB(5,2) = XYB(2,2) + DY
      XYB(6,1) = XYB(2,1)
      XYB(6,2) = XYB(2,2)
      ENDIF
      FLAGS(31) = .TRUE.
      CALL T2JOIN(XYB,XYB(1,2),HNONE,JTYPE,1,NP,1)
      FLAGS(31) = .FALSE.
      ENDIF
      IF (FLAGS(121)) CALL TXXMT
      END
      SUBROUTINE T2_BCED(INFOIN,CARDIN)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      CHARACTER*6 CFRTO(3)
      REAL CIRCEN(3,2),CRCLIM(2),XYZ1(2),XYZ0(2),XYZ2(3),T,ROTATE
      INTEGER MODCIR(2)
      LOGICAL LF1,LF2,LSQ, LFILL, LHIDE
      INTEGER ITXTUR,ICOL,INTEN,ICEN,IFRTO,LFRTO(2),I,J
      INTEGER IMIN,IMAX
      real val3
      INTEGER IOR
      DATA HNONE /-666.666/
      DATA CFRTO/' FROM',' TO',' '/
      ITXTUR = 0
      ICOL=0
      INTEN=0
      MODCIR(2) = INTEG
      MODCIR(1) = 0
      LFILL=.false.
      LHIDE=.false.
      LF1=.false.
      LF2=.false.
      LSQ=.false.
      ICEN=0
      IFRTO=1
      LFRTO(1)=0
      LFRTO(2)=0
      CRCLIM(1)=0
      CRCLIM(2)=0
      ROTATE=0
      DO 12141 I=1,2
      DO 12151 J=1,2
      CIRCEN(J,I)=HNONE
      CIRCEN(J,I)=HNONE
12151 CONTINUE
12152 CONTINUE
      CIRCEN(3,I)=0
12141 CONTINUE
12142 CONTINUE
      GOTO 12161
12170 CONTINUE
      IF (LFRTO(IFRTO).eq.0) LFRTO(IFRTO)=1
      ICEN=ICEN+1
      IF (ICEN.le.3) THEN
      CIRCEN(ICEN,IFRTO)=FLOTNG
      IF (ICEN.eq.3) THEN
      MODCIR(1) = IOR(MODCIR(1),1)
      IF (LFRTO(IFRTO).ne.1) MODCIR(1)=3
      ENDIF
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Extraneous number'),4)
      RETURN
      ENDIF
      GOTO 12161
12200 CONTINUE
      IF (ICEN.gt.0.or.MODCIR(1).ne.0) GOTO 12210
      NSTJOU=LSTJOU
      IF (LFRTO(IFRTO).gt.0) THEN
      IMIN=IFRTO
      IMAX=IFRTO
      ELSE
      IMIN=1
      IMAX=2
      ENDIF
      DO 12221 I=IMIN,IMAX
      ICEN=0
      J = 0
      CALL T2CURS(J,XYZ0,XYZ1,XYZ2,LF1,LF2)
      IF (.not.LF1.or.J.ne.ICHAR(' ')) GOTO 12230
      DO 12241 J=1,2
      CIRCEN(J,I)=XYZ1(J)
12241 CONTINUE
12242 CONTINUE
      IF (JOUFIL.ne.0.and. NSTJOU+28.le.LEN(STJOU)) THEN
      J=3
      IF (LFRTO(I).eq.0) J=I
      WRITE(STJOU(NSTJOU+1:NSTJOU+28),'(1p,4(A,G10.3))'  ,ERR=12250)  CF
     *RTO(J),CIRCEN(1,I),' ',CIRCEN(2,I),' '
      CALL T2SQEZ(STJOU(NSTJOU+2:NSTJOU+27),J)
      NSTJOU=NSTJOU+J+1
12250 CONTINUE
      ENDIF
      ICEN=3
      IF (LFRTO(I).eq.0) LFRTO(I)=I+1
12221 CONTINUE
12222 CONTINUE
12230 CONTINUE
      GOTO 12161
12260 CONTINUE
      LFILL=LTOKEN
      GOTO 12161
12270 CONTINUE
      LHIDE=LTOKEN
      GOTO 12161
12280 CONTINUE
      CALL T2GTEX(ITXTUR)
      GOTO 12161
12290 CONTINUE
      INTEN=INTEG
      GOTO 12161
12300 CONTINUE
      ICOL=INTEG
      GOTO 12161
12310 CONTINUE
      LSQ=LTOKEN
      GOTO 12161
12320 CONTINUE
      MODCIR(1) = IOR(MODCIR(1),1)
      IF (LFRTO(IFRTO).ne.1) MODCIR(1)=3 ! modified to correct SIZE for FROM|TO
      IF (LF1) GOTO 12210
      GOTO 12161
12330 CONTINUE
      I=1
      IF (LFRTO(IFRTO) .ne.0)IFRTO=2
      IF (LFRTO(IFRTO).ne.0.or.LFRTO(1).eq.INTEG) THEN
12210 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Conflicting options'),4)
      RETURN
      ELSE
      ICEN=0
      LFRTO(IFRTO)=INTEG
      ENDIF
      GOTO 12161
12340 CONTINUE
      GOTO 12350
12360 CONTINUE
      MODCIR(1) = 3
      IF (LF1) GOTO 12210
12350 CONTINUE
      IF (LFRTO(IFRTO) .ne.0) IFRTO=2
      IF (LFRTO(IFRTO) .ne.0.or.LFRTO(1).eq.4) GOTO 12210
      CIRCEN(1,IFRTO)=FLOTNG
      CIRCEN(2,IFRTO)=FLOTNG
      LFRTO(IFRTO)=4
      ICEN=1
      GOTO 12161
12370 CONTINUE
      ROTATE=FLOTNG
      GOTO 12161
12380 CONTINUE
      VAL3=CRCLIM(1)
      CRCLIM(1)=-360
      CRCLIM(2)=360
      CALL T2FRTO(INFOIN,CARDIN,CRCLIM(1),CRCLIM(2),VAL3)
      GOTO 12161
12180 GOTO ( 12200,12260,12270,12280,12280,12280,12280,12280,12280,12280
     *,12280,12280,12280,12280,12280,12280,12280,12290,12290,12300,12300
     *,12300,12300,12300,12300,12300,12310,12310,12320,12330,12330,12330
     *,12340,12360,12370,12380,12300,12165),KEYORD
12390 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      RETURN
12161 CALL TOKEN(INFOIN,CARDIN,'CURSOR,FILL:Y,HIDE:Y,DO:1,DOT:1,DOTS:1,D
     *OTTED:1,DA:2,DASHES:2,DOT-DASH:3,DOTDASHED:3,SOLID:4,FUNNY:5,PATTE
     *RNED:6,DAASHES:7,SPACE:8,,INTENSITY:1:7:2,WIDTH:1:7:2,WHITE:1,RED:
     *2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,SQUARE:Y,SYMMETRIC:Y,DA
     *TA,AT:1,FROM:2,TO:3,SIZE:::1,DSIZE:::1,ROTATE:-360:360:0,ANGLE,BLA
     *CK:8,;')
      GOTO (12162,12180,12170,12170,12165,12165,12390,12180,12165),INTER
     *P
12165 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 12161
12162 CONTINUE
      IF (LFRTO(2).eq.0.and.LFRTO(1).eq.1) THEN
      LFRTO(2)=4
      I=MODCIR(2)
      DO 12401 J=1,2
      CIRCEN(j,2) = CIRSIZ(J,I)
12401 CONTINUE
12402 CONTINUE
      ENDIF
      DO 12411 I=1,2
      DO 12421 J=1,2
      IF (CIRCEN(J,I).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** X,Y value(s) missing'),4)
     *
      RETURN
      ENDIF
12421 CONTINUE
12422 CONTINUE
12411 CONTINUE
12412 CONTINUE
      IMIN=1
      IF (LFRTO(2).lt.LFRTO(1)) IMIN=2
      IMAX=3-IMIN
      IF (LFRTO(IMIN).eq.1) THEN
      IF (LFRTO(IMAX).ne.4) THEN
      DO 12431 I=1,3
      CIRCEN(I,IMAX)=(CIRCEN(I,IMAX)-CIRCEN(I,IMIN))*2
12431 CONTINUE
12432 CONTINUE
      ENDIF
      ELSE
      DO 12441 I=1,3
      IF (LFRTO(IMAX).eq.4) THEN
      T = CIRCEN(I,IMAX)
      IF (LFRTO(IMAX).eq.3) T=-T
      ELSE
      T =(CIRCEN(I,IMAX)-CIRCEN(I,IMIN))
      ENDIF
      CIRCEN(I,IMIN)=CIRCEN(I,IMIN)+T/2
      CIRCEN(I,IMAX)=T
12441 CONTINUE
12442 CONTINUE
      ENDIF
      IF (LSQ) THEN
      IF (MODCIR(2).eq.3) THEN
      T=SQRT(CIRCEN(1,IMAX)**2+CIRCEN(2,IMAX)**2)
      ELSE
      T=MAX(CIRCEN(1,IMAX),CIRCEN(2,IMAX))
      ENDIF
      DO 12451 I=1,2
      CIRCEN(I,IMAX)=T
12451 CONTINUE
12452 CONTINUE
      ENDIF
      ITXTUR=8*INTEN+64*ITXTUR+512*ICOL
      IF (ABS(CRCLIM(2)-CRCLIM(1)).ge.360.) THEN
      CRCLIM(1)=0
      CRCLIM(2)=0
      ENDIF
      IF (LFILL) ITXTUR=ITXTUR+3
      IF (LHIDE) ITXTUR=ITXTUR+4
      IF (.not.FLAGS(23)) CALL T2CRCL(CIRCEN(1,IMIN) ,MODCIR ,CIRCEN(1,I
     *MAX) ,ITXTUR ,CRCLIM ,ROTATE)
      END
      SUBROUTINE T2CRCL(XYZCRC,MODCRC,SIZCRC,JTYPE,CRCLIM,ROTATE)
      IMPLICIT NONE
      REAL XYZCRC(3),SIZCRC(3),ROTATE
      INTEGER MODCRC(2)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      REAL SINR,COSR,t1,t2
      REAL CRCSIZ(3),CRCLIM(2)
      REAL CRCFCX(27),CRCFCY(27)
      INTEGER CRCPNT(4), CRCLVL(3)
      REAL XYCEN(3),CRCX(20),CRCY(20)
      integer i,j,k,mode,np,jtype
      real dc,temp
      REAL RAD
      PARAMETER (RAD=3.1415926/180.)
      DATA HNONE /-666.666/
      DATA CRCPNT /0,5,10,27/
      DATA CRCLVL /1,1,5/
      DATA CRCFCX /  1.0,-1.0,-1.0, 1.0, 1.0, 1.0, 0.0,-1.0, 0.0, 1.0, 0
     *.0,.3928,.7070,.9240, 1.0,.9240,.7070,.3928, 0.0,-.3928,-.7070,-.9
     *240, -1.0,-.9240,-.7070,-.3928,0.0/
      DATA CRCFCY /  1.0, 1.0,-1.0,-1.0, 1.0, 0.0, 1.0, 0.0,-1.0, 0.0, 1
     *.0,.9240,.7070,.3928, 0.0,-.3928,-.7070,-.9240, -1.0,-.9240,-.7070
     *,-.3928, 0.0,.3928,.7070,.9240,1.0/
      NONLIN(4)=0
      sinr = SIN (rotate*RAD)
      cosr = cos (rotate*RAD)
      CRCSIZ(1) = SIZCRC(1)/2
      CRCSIZ(2) = SIZCRC(2)/2
      CRCSIZ(3) = SIZCRC(3)/2
      IF (MODCRC(1).ne.0 .and. .NOT.FLAGS(75)) THEN
      CALL TXDEF2
      IF (.NOT.FLAGS(75)) RETURN
      ENDIF
      IF (MODCRC(1) .EQ. 0) then
      IF (.NOT.FLAGS(73)) CALL TXDEF1
      XYCEN(1) = XYZCRC(1)
      XYCEN(2) = XYZCRC(2)
      ELSEIF(abs(MODCRC(1)) .EQ. 1) then
      CALL T2XFRM(3,1,XYZCRC,NONLIN,XFRM13,2,XYCEN)
      ELSE
      CRCX(1) = XYZCRC(1)+crcsiz(1)
      CRCX(2) = XYZCRC(2)+crcsiz(2)
      CRCX(3) = XYZCRC(3)+crcsiz(3)
      CALL T2XFRM(3,1,CRCX,NONLIN,XFRM13,2,CRCX(4))
      CRCY(1) = XYZCRC(1)-crcsiz(1)
      CRCY(2) = XYZCRC(2)-crcsiz(2)
      CRCY(3) = XYZCRC(3)-crcsiz(3)
      CALL T2XFRM(3,1,CRCY,NONLIN,XFRM13,2,CRCY(4))
      if(FLAGS(56)) then
      DO 12461 I=-1,1,2
      DO 12471 J=-1,1,2
      DO 12481 K=-1,1,2
      CRCY(1) = XYZCRC(1)+I*crcsiz(1)
      CRCY(2) = XYZCRC(2)+J*crcsiz(2)
      CRCY(3) = XYZCRC(3)+K*crcsiz(3)
      CALL T2XFRM(3,1,CRCY,NONLIN,XFRM13,2,CRCY(6))
      CRCX(4) = MIN(CRCX(4),CRCY(6))
      CRCX(5) = MIN(CRCX(5),CRCY(7))
      CRCY(4) = MAX(CRCY(4),CRCY(6))
      CRCY(5) = MAX(CRCY(5),CRCY(7))
12481 CONTINUE
12482 CONTINUE
12471 CONTINUE
12472 CONTINUE
12461 CONTINUE
12462 CONTINUE
      endif
      CRCSIZ(1)=(CRCX(4)-CRCY(4))/2.
      CRCSIZ(2)=(CRCX(5)-CRCY(5))/2.
      XYCEN(1)=(CRCX(4)+CRCY(4))/2.
      XYCEN(2)=(CRCX(5)+CRCY(5))/2.
      ENDIF
      MODE = MIN(MAX(ABS(MODCRC(2)),1),3)
      J = CRCPNT(MODE)
      NP = CRCPNT(MODE+1) - J
      DC=CRCLIM(2)-CRCLIM(1)
      IF(MODE.eq.3 .and. ABS(DC).gt. 1.E-5) THEN
      NP=MIN(MAX(NINT(20.*DC/360.),5),20)
      DC=DC/(57.29578*(NP-1))
      DO 12491 I=1,NP
      TEMP=DC*(I-1)+(CRCLIM(1)-rotate)/57.29578
      t1 = CRCSIZ(1)*COS(TEMP)
      t2 = CRCSIZ(2)*SIN(TEMP)
      CRCX(I) = XYCEN(1)+cosr*t1 - sinr*t2
      CRCY(I) = XYCEN(2)+cosr*t2 + sinr*t1
12491 CONTINUE
12492 CONTINUE
      ELSE
      DO 12501 I=1,NP
      J = J+1
      t1 = CRCSIZ(1)*CRCFCX(J)
      t2 = CRCSIZ(2)*CRCFCY(J)
      CRCX(I) = XYCEN(1)+cosr*t1 - sinr*t2
      CRCY(I) = XYCEN(2)+cosr*t2 + sinr*t1
12501 CONTINUE
12502 CONTINUE
      ENDIF
      FLAGS(31) = .TRUE.
      CALL T2JOIN(CRCX,CRCY,HNONE,JTYPE,CRCLVL(MODE),NP,1)
      FLAGS(31) = .FALSE.
      NONLIN(4)=1
      IF (FLAGS(121)) CALL TXXMT
      END
      SUBROUTINE T2HIST(XVALS,YVALS,ZVALS,XERRS,YERRS,ZERRS, JTYPE,INLEV
     *L,NP,INCRMT, XNERR,YNERR,ZNERR)
      EQUIVALENCE (XYEX(1),XEXIST),(XYEX(2),YEXIST),(XYEX(3),ZEXIST)
      INTEGER MAXJ
      PARAMETER (MAXJ = 400 - 15)
      INTEGER JTYPE,INLEVL,NP
      REAL XVALS(INCRMT,*),YVALS(INCRMT,*),ZVALS(INCRMT,*), XNERR(INCRMT
     *,*),YNERR(INCRMT,*),ZNERR(INCRMT,*), XERRS(INCRMT,*),YERRS(INCRMT,
     **),ZERRS(INCRMT,*)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LSAVE1, LSAVE2, LFILL 
      REAL XYZ(3), WIDTH(2)
      INTEGER IHIDE,IE(3),INE(3),IV(3)
      LOGICAL XEXIST,YEXIST,ZEXIST,XYEX(3)
      LOGICAL NDXEXIS,NDYEXIS,NDZEXIS
      LOGICAL LIMSET(3)
      INTEGER MONTH 
      REAL DAY 
      REAL DAYMON (12)   
      REAL HNONE
      INTEGER IAND
      DATA DAYMON / .31, .28, .31, .30, .31, .30, .31, .31, .30, .31, .3
     *0, .31 / 
      DATA HNONE /-666.666/
      IF (NP.le.0) RETURN
      DO 12511 I=1,3
      LIMSET(I)=FLAGS(2*I+3)
12511 CONTINUE
12512 CONTINUE
      CALL T2AXES
      IF (.not.FLAGS(75)) RETURN
      FLAGS(28) = .TRUE.
      CALL T2CWTS(JTYPE,ITXSAV)
      CALL TXSDEF
      CALL TXSCIS(2)
      XEXIST=XVALS(1,1).NE.HNONE
      YEXIST=YVALS(1,1).NE.HNONE
      ZEXIST=ZVALS(1,1).NE.HNONE
      IDEP=2
      IF (.not.YEXIST .OR. (FLAGS(56).and.ZEXIST)) THEN
      IDEP=3
      IF(.not.ZEXIST) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Missing Y and Z coor in T2HIST'),
     *3)
      RETURN
      ENDIF
      ENDIF
      I=IAND(INLEVL/8,3)
      IF(I.ne.0) THEN
      IF(XYEX(I)) IDEP=I
      ENDIF
      JMIN=1
      JMAX=NP
      IFIRST=1
      JPTS=JMAX-JMIN+1
      IF (.NOT.(LIMSET(IDEP)) .AND. NONLIN(IDEP).EQ.-1 .AND. XYZLIM(IDEP
     *,1).GT.0. .AND. NXYLIM(1,1).eq.0 ) THEN
      XYZLIM(IDEP,1)=0.
      CALL TXDEF2
      IF (.NOT.FLAGS(75)) RETURN
      ENDIF
      DO 12521 I=1,3
      XYZ(I)=XYZLIM(I,1)
      IV(I)=0
      IE(I)=0
      INE(I)=0
12521 CONTINUE
12522 CONTINUE
      IF (XVALS(1,1).NE.HNONE) IV(1)=1
      IF (YVALS(1,1).NE.HNONE) IV(2)=1
      IF (ZVALS(1,1).NE.HNONE) IV(3)=1
      IF (XERRS(1,1).NE.HNONE) IE(1)=1
      IF (YERRS(1,1).NE.HNONE) IE(2)=1
      IF (ZERRS(1,1).NE.HNONE) IE(3)=1
      IF (XNERR(1,1).NE.HNONE) INE(1)=1
      IF (YNERR(1,1).NE.HNONE) INE(2)=1
      IF (ZNERR(1,1).NE.HNONE) INE(3)=1
      IV(IDEP)=0
      LSAVE1=IDEP.ne.2
      LFILL=IAND(INLEVL,2) .ne. 0
      IHIDE=2
      IF (IAND(INLEVL,4) .ne. 0) IHIDE=6
      IF (IAND(INLEVL,7).EQ.0.and.JPTS.gt.0) THEN
      IF (NONLIN(IDEP).EQ.(-1)) THEN
      XYZ(IDEP)=0.
      ELSE
      XYZ(IDEP)=XYZLIM(IDEP,1)
      ENDIF
      YSTART=XYZ(IDEP)
      JXB=3
      IF (.NOT.FLAGS(56)) THEN
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      ENDIF
      IF (IV(1).NE.0) THEN
      XYZ(1) = 3.*XVALS(1,JMIN) - XVALS(1,JMIN+1)
      IF (IE(1).NE.0) THEN
      IF (INE(1).NE.0) THEN
      IF (XVALS(1,JMIN+1) .gt. XVALS(1,JMIN)) THEN
      DIFF = ABS(XNERR(1,JMIN+1))-ABS(XERRS(1,JMIN))
      ELSE
      DIFF = ABS(XERRS(1,JMIN+1))-ABS(XNERR(1,JMIN))
      ENDIF
      ELSE
      DIFF = ABS(XERRS(1,JMIN+1))-ABS(XERRS(1,JMIN))
      ENDIF
      XYZ(1) = XYZ(1)+DIFF
      ENDIF
      XYZ(1)=0.5*XYZ(1)
      ENDIF
      IF (IV(2).NE.0) THEN
      XYZ(2) = 3.*YVALS(1,JMIN) - YVALS(1,JMIN+1)
      IF (IE(2).NE.0) THEN
      IF (INE(1).NE.0) THEN
      IF (YVALS(1,JMIN+1) .gt. YVALS(1,JMIN)) THEN
      DIFF = ABS(YNERR(1,JMIN+1))-ABS(YERRS(1,JMIN))
      ELSE
      DIFF = ABS(YERRS(1,JMIN+1))-ABS(YNERR(1,JMIN))
      ENDIF
      ELSE
      DIFF = ABS(YERRS(1,JMIN+1))-ABS(YERRS(1,JMIN))
      ENDIF
      XYZ(2) = XYZ(2)+DIFF
      ENDIF
      XYZ(2)=0.5*XYZ(2)
      ENDIF
      IF (IV(3).NE.0) THEN
      XYZ(3) = 3.*ZVALS(1,JMIN) - ZVALS(1,JMIN+1)
      IF (IE(3).NE.0) THEN
      IF (INE(1).NE.0) THEN
      IF (ZVALS(1,JMIN+1) .gt. ZVALS(1,JMIN)) THEN
      DIFF = ABS(ZNERR(1,JMIN+1))-ABS(ZERRS(1,JMIN))
      ELSE
      DIFF = ABS(ZERRS(1,JMIN+1))-ABS(ZNERR(1,JMIN))
      ENDIF
      ELSE
      DIFF = ABS(ZERRS(1,JMIN+1))-ABS(ZERRS(1,JMIN))
      ENDIF
      XYZ(3) = XYZ(3)+DIFF
      ENDIF
      XYZ(3)=0.5*XYZ(3)
      ENDIF
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      YSAVE=YSTART
      IF (JPTS.gt.1) THEN
      IF (IDEP-2) 12530,12540,12550
12530 CONTINUE
      YTEMP=XVALS(1,JMIN)
      GOTO 12560
12540 CONTINUE
      YTEMP=YVALS(1,JMIN)
      GOTO 12560
12550 CONTINUE
      YTEMP=ZVALS(1,JMIN)
12560 CONTINUE
      XYZ(IDEP)=YTEMP
      IF (ABS(YSAVE-YTEMP).gt.ABS(0.0000002*YSAVE)) THEN
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      YSAVE=YTEMP
      ENDIF
      ENDIF
      DO 12571 I=JMIN+1,JMAX
      IF (LTRAP) GOTO 12580
      GOTO (12590,12600,12610) IDEP
12590 CONTINUE
      YTEMP=XVALS(1,I)
      GOTO 12620
12600 CONTINUE
      YTEMP=YVALS(1,I)
      GOTO 12620
12610 CONTINUE
      YTEMP=ZVALS(1,I)
12620 CONTINUE
      LSAVE2=ABS(YSAVE-YTEMP).gt.ABS(0.0000002*YSAVE)
      IF(LSAVE1.or.LSAVE2) THEN
      IF (IV(1).NE.0) THEN
      XYZ(1) = XVALS(1,I-1) + XVALS(1,I)
      IF (IE(1).NE.0) THEN
      IF (INE(1).NE.0) THEN
      IF (XVALS(1,I) .gt. XVALS(1,I-1)) THEN
      DIFF = ABS(XNERR(1,I))-ABS(XERRS(1,I-1))
      ELSE
      DIFF = ABS(XERRS(1,I))-ABS(XNERR(1,I-1))
      ENDIF
      ELSE
      DIFF = ABS(XERRS(1,I))-ABS(XERRS(1,I-1))
      ENDIF
      IF (XVALS(1,I).LE.XVALS(1,I-1)) THEN
      XYZ(1)=XYZ(1)+DIFF
      ELSE
      XYZ(1)=XYZ(1)-DIFF
      ENDIF
      ENDIF
      XYZ(1)=XYZ(1)*0.5
      ENDIF
      IF (IV(2).NE.0) THEN
      XYZ(2) = YVALS(1,I-1) + YVALS(1,I)
      IF (IE(2).NE.0) THEN
      IF (INE(1).NE.0) THEN
      IF (YVALS(1,I) .gt. YVALS(1,I-1)) THEN
      DIFF = ABS(YNERR(1,I))-ABS(YERRS(1,I-1))
      ELSE
      DIFF = ABS(YERRS(1,I))-ABS(YNERR(1,I-1))
      ENDIF
      ELSE
      DIFF = ABS(YERRS(1,I))-ABS(YERRS(1,I-1))
      ENDIF
      IF (YVALS(1,I).LE.YVALS(1,I-1)) THEN
      XYZ(2)=XYZ(2)+DIFF
      ELSE
      XYZ(2)=XYZ(2)-DIFF
      ENDIF
      ENDIF
      XYZ(2)=XYZ(2)*0.5
      ENDIF
      IF (IV(3).NE.0) THEN
      XYZ(3) = ZVALS(1,I-1) + ZVALS(1,I)
      IF (IE(3).NE.0) THEN
      IF (INE(1).NE.0) THEN
      IF (ZVALS(1,I) .gt. ZVALS(1,I-1)) THEN
      DIFF = ABS(ZNERR(1,I))-ABS(ZERRS(1,I-1))
      ELSE
      DIFF = ABS(ZERRS(1,I))-ABS(ZNERR(1,I-1))
      ENDIF
      ELSE
      DIFF = ABS(ZERRS(1,I))-ABS(ZERRS(1,I-1))
      ENDIF
      IF (ZVALS(1,I).LE.ZVALS(1,I-1)) THEN
      XYZ(3)=XYZ(3)+DIFF
      ELSE
      XYZ(3)=XYZ(3)-DIFF
      ENDIF
      ENDIF
      XYZ(3)=XYZ(3)*0.5
      ENDIF
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      ENDIF
      IF(LSAVE2) THEN
      XYZ(IDEP)=YTEMP
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      YSAVE=XYZ(IDEP)
      ENDIF
      IF (JXB.GE.MAXJ) THEN
      JXB=(JXB-3)/3
      CALL T2XFRM(3,JXB,BUFFER(4),NONLIN,XFRM14,2,BUFFER)
      CALL TXLINX(BUFFER,IFIRST*JXB,LINTEX)
      IFIRST=-1
      JXB=3
      DO 12631 JJ=1,2
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
12631 CONTINUE
12632 CONTINUE
      ENDIF
12571 CONTINUE
12572 CONTINUE
      IF (IV(1).NE.0)THEN
      XYZ(1) = 2*XVALS(1,JMAX) -XYZ(1)
      ENDIF
      IF (IV(2).NE.0) THEN
      XYZ(2) = 2*YVALS(1,JMAX) -XYZ(2)
      ENDIF
      IF (IV(3).NE.0) THEN
      XYZ(3) = 2*ZVALS(1,JMAX) -XYZ(3)
      ENDIF
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      XYZ(IDEP) = YSTART
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      IF (.NOT.FLAGS(56)) THEN
      XYZ(1) = XYZLIM(1,2)
      BUFFER(JXB+1)=XYZ(1)
      BUFFER(JXB+2)=XYZ(2)
      BUFFER(JXB+3)=XYZ(3)
      JXB=JXB+3
      ENDIF
      JXB=(JXB-3)/3
      CALL T2XFRM(3,JXB,BUFFER(4),NONLIN,XFRM14,2,BUFFER)
      CALL TXLINX(BUFFER,IFIRST*JXB,LINTEX)
      ELSE
      JXB=4
      IF (IAND(INLEVL,1) .eq. 0) JXB=3
      J=0
      MAJOR=0
      DO 12641 I=1,3
      IF (IV(I).NE.0) THEN
      J=I
      IF (IE(I).NE.0) MAJOR=I
      ENDIF
12641 CONTINUE
12642 CONTINUE
      IF (MAJOR.EQ.0) MAJOR=J
      IF (MAJOR.EQ.0) RETURN
      MINOR=6-IDEP-MAJOR
      YSTART = AMAX1(0.,XYZLIM(IDEP,1))
      IF (.NOT.(FLAGS(56))) THEN
      IF ((SIGN(1.,XYZLIM(IDEP,1)-YSTART).EQ.SIGN(1.,YSTART-XYZLIM(IDEP,
     *2)) .OR.XYZLIM(IDEP,1).eq.YSTART.OR.XYZLIM(IDEP,2).eq.YSTART)) THE
     *N
      SAV1 = XYZLIM(IDEP,1)
      SAV2 = XYZLIM(IDEP,2)
      XYZLIM(IDEP,1) = YSTART
      XYZLIM(IDEP,2) = YSTART
      CALL T2XFRM(3,2,XYZLIM,NONLIN,XFRM14,2,BUFFER)
      XYZLIM(IDEP,1) = SAV1
      XYZLIM(IDEP,2) = SAV2
      CALL TXLINX(BUFFER,2,LINTEX)
      ENDIF
      ENDIF
      WIDDF=0
      IF (JMAX .gt. 1) WIDDF=1.0E35
      IF (MAJOR.EQ.1) THEN
      DO 12651 I=JMIN+1,JMAX
      W=XVALS(1,I)-XVALS(1,I-1)
      IF (W.NE.0.) WIDDF=AMIN1(WIDDF,ABS(W))
12651 CONTINUE
12652 CONTINUE
      ENDIF
      IF (MAJOR.EQ.2) THEN
      DO 12661 I=JMIN+1,JMAX
      W = YVALS(1,I)-YVALS(1,I-1)
      IF (W.NE.0.) WIDDF=AMIN1(WIDDF,ABS(W))
12661 CONTINUE
12662 CONTINUE
      ENDIF
      IF (MAJOR.EQ.3) THEN
      DO 12671 I=JMIN+1,JMAX
      W = ZVALS(1,I)-ZVALS(1,I-1)
      IF (W.NE.0.) WIDDF=AMIN1(WIDDF,ABS(W))
12671 CONTINUE
12672 CONTINUE
      ENDIF
      IF (NONLIN(MAJOR).EQ.-4 .OR. NONLIN(MAJOR).EQ.-5) WIDDF = AMIN1(WI
     *DDF,0.05)
      IF (IAND(INLEVL,1) .ne. 0) THEN
      WIDDF=0.3333*WIDDF
      ELSE
      WIDDF=0.5*WIDDF
      ENDIF
      WIDTH(1)=WIDDF
      WIDTH(2)=WIDDF
      DO 12681 I=1,3
      BUFFER(I+3)=XYZLIM(I,1)
      IF (SIGN(1.,XYZLIM(I,1)) .NE. SIGN(1.,XYZLIM(I,2)) ) BUFFER(I+3)=0
     *.
12681 CONTINUE
12682 CONTINUE
      BUFFER(IDEP+9)=BUFFER(IDEP+3)
      BUFFER(IDEP)=BUFFER(IDEP+3)
      DO 12691 I=JMIN,JMAX
      IF (LTRAP) GOTO 12580
      IF (IE(MAJOR).NE.0) THEN
      WIDTH(1)=0.
      GOTO (12700,12710,12720) MAJOR
12700 CONTINUE
      WIDTH(1)=ABS(XERRS(1,I))
      GOTO 12730
12710 CONTINUE
      WIDTH(1)=ABS(YERRS(1,I))
      GOTO 12730
12720 CONTINUE
      WIDTH(1)=ABS(ZERRS(1,I))
12730 CONTINUE
      IF (WIDTH(1).EQ.0.) WIDTH(1)=WIDDF
      ENDIF
      IF (INE(MAJOR).NE.0) THEN
      WIDTH(2)=0.
      GOTO (12740,12750,12760) MAJOR
12740 CONTINUE
      WIDTH(2)=ABS(XNERR(1,I))
      GOTO 12770
12750 CONTINUE
      WIDTH(2)=ABS(YNERR(1,I))
      GOTO 12770
12760 CONTINUE
      WIDTH(2)=ABS(ZNERR(1,I))
12770 CONTINUE
      IF (WIDTH(2).EQ.0.) WIDTH(2)=WIDDF
      ENDIF
      IF (XEXIST) BUFFER(4)=XVALS(1,I)
      IF (YEXIST) BUFFER(5)=YVALS(1,I)
      IF (ZEXIST) BUFFER(6)=ZVALS(1,I)
      DO 12781 J=1,3
      IF(NONLIN(J).NE.-4 .AND. NONLIN(J).NE.-5)GOTO 12781
      IF (ABS( BUFFER(J+3)-AINT(BUFFER(J+3)) ).LT.0.002) BUFFER(J+3)=BUF
     *FER(J+3)+0.16
12781 CONTINUE
12782 CONTINUE
      BUFFER(MAJOR+6)=BUFFER(MAJOR+3)+WIDTH(1)
      BUFFER(MAJOR+9)=BUFFER(MAJOR+6)
      BUFFER(MAJOR+3)=BUFFER(MAJOR+3)-WIDTH(INE(MAJOR)+1)
      IF ( NONLIN(MAJOR).EQ.-4 .OR. NONLIN(MAJOR).EQ.-4) THEN 
      MONTH = BUFFER(MAJOR+3) 
      DAY = BUFFER(MAJOR+3) - MONTH 
      IF ( DAY .GT. .50 ) THEN 
      BUFFER(MAJOR+3) = BUFFER(MAJOR+3) - 1. +  DAYMON ( 1 + MOD ( MONTH
     *-1 , 12 ) ) 
      IF ( MONTH.EQ.2 .AND. MOD ( (MONTH-1)/12 , 4 ).EQ.3 ) BUFFER(MAJOR
     *+3) = BUFFER(MAJOR+3) + 1 
      ENDIF 
      ENDIF 
      BUFFER(MAJOR)=BUFFER(MAJOR+3)
      BUFFER(IDEP+6)=BUFFER(IDEP+3)
      BUFFER(MINOR)=BUFFER(MINOR+3)
      BUFFER(MINOR+6)=BUFFER(MINOR+3)
      BUFFER(MINOR+9)=BUFFER(MINOR+3)
      CALL T2XFRM(3,4,BUFFER,NONLIN,XFRM14,2,BUFFER(13))
      DO 12791 J=0,1
      BUFFER(J+21)=BUFFER(J+13)
12791 CONTINUE
12792 CONTINUE
      IF (LFILL)                                ! ______
     *CALL TXFILL(BUFFER(13),BUFFER(14),HNONE,2,4,NONLIN,IHIDE)
      IF (JXB .eq. 3) THEN
      DO 12801 J=0,1
      T=BUFFER(J+23)
      BUFFER(J+23)=BUFFER(J+17)
      IF (I .ne. JMIN) THEN
      BUFFER(J+13)=T
      ENDIF
12801 CONTINUE
12802 CONTINUE
      IF (I .eq. JMAX) JXB=4
      ENDIF
      CALL T2_MESH_DRAW(BUFFER(13),JXB,IHIDE)
      IF (IHIDE .eq. 6) THEN
      DO 12811 J=0,1
      BUFFER(J+13)=BUFFER(J+21)
12811 CONTINUE
12812 CONTINUE
      CALL T2_MESH_DRAW(BUFFER(13),5,5)
      ENDIF
12691 CONTINUE
12692 CONTINUE
      IF (IHIDE .eq. 6) CALL T2_MESH_FLUSH
      ENDIF
12580 CONTINUE
      IF (FLAGS(121)) CALL TXXMT
      CALL T2_MESH_FLUSH
      CALL T2CWTS(ITXSAV,IDUM)
      CALL TXSCIS(1)
      CALL T2TCKS(8)
      END
      SUBROUTINE T2JOIN(XVALS,YVALS,ZVALS,JTYPE,INLEVL,NP,INCRMT)
      IMPLICIT NONE
      INTEGER JSETS,JTYPE,INLEVL,NP,INCRMT
      REAL XVALS(INCRMT,*),YVALS(INCRMT,*),ZVALS(INCRMT,*)
      REAL TWOPI
      PARAMETER (TWOPI=6.2831 85307 18 D0 )
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER FIRST,FIRSTJ,OVERLP,LAST,NDIM,ISC(4)
      INTEGER I,J,K,L,N,ITXSAV,JMIN,JMAX
      INTEGER LEVEL,IXB,LP1,JJTYPE,NBUFF
      INTEGER IYB,IXP,IXPP,IXPPP,ILX,ILY,MINX,MAXX,MINY,MAXY,IXMONO,IXB1
     *,IYB1
      INTEGER ILX1,ILY1,JJX,JJY,MAXM1,MAXPNT,IMIN,IMAX
      INTEGER IDUM,NJ,IHIDE,NHIDE
      REAL X,Y,XY(2),XYZ(3),XFRM(12),DXX,XP,XPP,XPPP,DX,TEMP1,TEMP2
      LOGICAL CLOSED
      LOGICAL XEXIST,YEXIST,ZEXIST
      INTEGER IAND
      REAL HNONE
      DATA HNONE /-666.666/
      IF (NP.LE.1) RETURN
      IXB= 1
      IYB=IXB+1
      XEXIST=XVALS(1,1).NE.HNONE
      YEXIST=YVALS(1,1).NE.HNONE
      ZEXIST=ZVALS(1,1).NE.HNONE
      IF (FLAGS(31)) THEN
      DO 12821 I=1,3
      XYZ(I)=0
12821 CONTINUE
12822 CONTINUE
      IF (.NOT.FLAGS(73)) CALL TXDEF1
      NDIM=2
      DO 12831 I=1,3
      ISC(I)=LINEAR(I)
      XFRM(I)=XFRM34(I)
      XFRM(I+3)=XFRM34(I+3)
12831 CONTINUE
12832 CONTINUE
      ISC(4)=LINEAR(4)
      ELSE
      DO 12841 I=1,3
      XYZ(I)=XYZLIM(I,1)
12841 CONTINUE
12842 CONTINUE
      CALL T2AXES
      IF (.not.FLAGS(75)) RETURN
      CALL TXSCIS(2)
      NDIM=3
      DO 12851 I=1,4
      ISC(I)=NONLIN(I)
12851 CONTINUE
12852 CONTINUE
      DO 12861 I=1,12
      XFRM(I)=XFRM14(I)
12861 CONTINUE
12862 CONTINUE
      ENDIF
      FLAGS(28)= .TRUE.
      CALL T2CWTS(JTYPE,ITXSAV)
      CALL TXSDEF
      JMIN=1
      JMAX=NP
      LEVEL=ABS(INLEVL)
      IF (JMAX.LE.2 .and. LEVEL.eq.0) LEVEL=1
      IF (FLAGS(56) .AND. LEVEL.EQ.0) LEVEL=1
      IF (FLAGS(56) .AND. FLAGS(120) .and. LEVEL.eq.1 .and. IAND(JTYPE,7
     *) .eq.0) THEN
      CALL TXLINZ(XVALS,YVALS,ZVALS,INCRMT,JMAX,.TRUE.)
      GOTO 12870
      ENDIF
      IF (LEVEL.LE.0 .OR. LEVEL.GT.20) THEN
      IF (FLAGS(31)) THEN
      LEVEL=1
      ELSE
      I=SQRT(FLOAT(JMAX)-.5)+1
      LEVEL=MAX(1,10-I)
      ENDIF
      ENDIF
      JJTYPE= MOD(JTYPE,4)
      IF (JJTYPE .eq.3 ) THEN
      LEVEL=1
      ELSEIF (LEVEL.EQ.1 .or. JJTYPE.EQ.0) THEN
      JJTYPE=2
      ENDIF
      LP1= LEVEL + 1
      IHIDE=2
      IF (IAND(JTYPE,4) .ne.0 ) IHIDE=6
12880 CONTINUE
      IF (JJTYPE.EQ.1) THEN
      IF (JMAX.LT.4) THEN
      CALL T2ERR(0,' ',('*** WARNING *** Spline fit needs 4 points. Gene
     *ral fit used.'),3)
      GOTO 12890
      ENDIF
      NBUFF= (400 - 2*LP1-2)/5
      IF (NBUFF .lt. JMAX) THEN
      IXB=0
      CALL T2_GET_MEMORY(BUFFER,5*JMAX+2*LP1+2,IXB)
      IF (IXB .eq. 0) THEN
      IXB=1
      WRITE(OUTSTR,12900)JMAX,NBUFF
      CALL T2ERR(0,' ',OUTSTR,-3)
12900 FORMAT ('*** WARNING ***',I6,' points exceeds maximum (',I3, ') fo
     *r spline fit. General fit used.')
      GOTO 12890
      ENDIF
      IYB=IXB+1
      NBUFF=JMAX
      ENDIF
      IXP=IXB+2*JMAX
      IXPP=IXP+JMAX
      IXPPP=IXPP+JMAX
      ILX=IXPPP+JMAX+2
      ILY=ILX+1
      MINX=IXB
      DO 12911 I=JMIN,JMAX
      IF (XEXIST) XYZ(1)=XVALS(1,I)
      IF (YEXIST) XYZ(2)=YVALS(1,I)
      IF (ZEXIST) XYZ(3)=ZVALS(1,I)
      CALL T2XFRM(NDIM,1,XYZ,ISC,XFRM,2,BUFFER(MINX))
      MINX=MINX+2
12911 CONTINUE
12912 CONTINUE
      MINX=IXB
      MAXX=IXB+2*(JMAX-2)
      MINY=IYB
      MAXY=IYB+2*(JMAX-2)
12920 CONTINUE
12921 CONTINUE
      DO 12931 I=MINX,MAXX,2
      IF (BUFFER(I+2).LE.BUFFER(I)) THEN
      DO 12941 J=MINX,MAXX,2
      IF (BUFFER(J+2).GE.BUFFER(J)) THEN
      DO 12951 K=MINY,MAXY,2
      IF (BUFFER(K+2).LE.BUFFER(K)) THEN
      DO 12961 L=MINY,MAXY,2
      IF (BUFFER(L+2).GE.BUFFER(L)) THEN
      WRITE(OUTSTR,12970)
      CALL T2ERR(0,' ',OUTSTR,-3)
12970 FORMAT ('*** WARNING *** Spline fit needs ', 'monotonic points.  '
     *  ,'General fit used.')
      GOTO 12890
      ENDIF
12961 CONTINUE
12962 CONTINUE
      IXMONO=0
      GOTO 12922
      ENDIF
12951 CONTINUE
12952 CONTINUE
      IXMONO=0
      GOTO 12922
      ENDIF
12941 CONTINUE
12942 CONTINUE
      IXMONO=1
      GOTO 12922
      ENDIF
12931 CONTINUE
12932 CONTINUE
      IXMONO=1
12922 CONTINUE
      IF (IXMONO.EQ.1) THEN
      IXB1=IXB
      IYB1=IYB
      ILX1=ILX
      ILY1=ILY
      ELSE
      IXB1=IYB
      IYB1=IXB
      ILX1=ILY
      ILY1=ILX
      ENDIF
      CALL T2SPLN(2,JMAX,BUFFER(IXB1),BUFFER(IYB1),1,BUFFER(IXP), BUFFER
     *(IXPP),BUFFER(IXPPP))
      DO 12981 I=1,JMAX-1
      IF (LTRAP) GOTO 12870
      X=BUFFER(IXB1)
      IXB1=IXB1+2
      DXX=(BUFFER(IXB1)-X)/FLOAT(LEVEL)
      Y=BUFFER(IYB1)
      IYB1=IYB1+2
      XP=BUFFER(IXP)
      IXP=IXP+1
      XPP=BUFFER(IXPP)
      IXPP=IXPP+1
      XPPP=BUFFER (IXPPP)
      IXPPP=IXPPP+1
      JJX=ILX1
      JJY=ILY1
      BUFFER(JJX)= X
      BUFFER(JJY)= Y
      JJX=JJX+2
      JJY=JJY+2
      DO 12991 J=2,LEVEL
      DX=(J-1)*DXX
      BUFFER(JJY)=Y + DX*(XP+DX*(XPP+DX*XPPP))
      BUFFER(JJX)=X + DX
      JJX=JJX+2
      JJY=JJY+2
12991 CONTINUE
12992 CONTINUE
      BUFFER(JJX)= BUFFER(IXB1)
      BUFFER(JJY)= BUFFER(IYB1)
      IF (LTRAP) GOTO 12870
      CALL T2_MESH_DRAW(BUFFER(ILX),LP1,IHIDE)
12981 CONTINUE
12982 CONTINUE
      ELSE
12890 CONTINUE
      CLOSED=JMAX.GT.2 .and. LEVEL.gt.1
      IF (XEXIST) THEN
      TEMP1=XVALS(1,JMIN)
      TEMP2=XVALS(1,JMAX)
      IF (FLAGS(27)) THEN
      TEMP1=MOD(TEMP1*RADANG,TWOPI)
      TEMP2=MOD(TEMP2*RADANG,TWOPI)
      IF(TEMP1.lt.0) TEMP1=TEMP1+TWOPI
      IF(TEMP2.lt.0) TEMP2=TEMP2+TWOPI
      ENDIF
      IF (ABS(TEMP1-TEMP2) .gt. 0.0000002*(ABS(TEMP1)+ABS(TEMP2)))CLOSED
     *=.FALSE.
      ENDIF
      IF (YEXIST) THEN
      TEMP1=YVALS(1,JMIN)
      TEMP2=YVALS(1,JMAX)
      IF (ABS(TEMP1-TEMP2) .gt. 0.0000002*(ABS(TEMP1)+ABS(TEMP2)))CLOSED
     *=.FALSE.
      ENDIF
      IF (ZEXIST) THEN
      TEMP1=ZVALS(1,JMIN)
      TEMP2=ZVALS(1,JMAX)
      IF (FLAGS(27).AND.FLAGS(91)) THEN
      TEMP1=MOD(TEMP1*RADANG,TWOPI)
      TEMP2=MOD(TEMP2*RADANG,TWOPI)
      IF(TEMP1.lt.0) TEMP1=TEMP1+TWOPI
      IF(TEMP2.lt.0) TEMP2=TEMP2+TWOPI
      ENDIF
      IF (ABS(TEMP1-TEMP2) .gt. 0.0000002*(ABS(TEMP1)+ABS(TEMP2)))CLOSED
     *=.FALSE.
      ENDIF
      OVERLP= 2
      NBUFF= 400/2
      MAXM1=(NBUFF-1)/LEVEL
      IF (CLOSED) THEN
      FIRST=JMAX-OVERLP
      JMAX=JMAX-1
      LAST=2*JMAX+OVERLP+1
      FIRSTJ=OVERLP*LEVEL
      ELSE
      FIRST=JMIN
      LAST=JMAX
      FIRSTJ=0
      ENDIF
      MAXPNT=MAXM1-2*OVERLP
      DO 13001 IMIN=FIRST,LAST,MAXPNT
      IXB1=IXB
      IMAX=MIN(LAST,IMIN+MAXM1-1)
      DO 13011 I=IMIN,IMAX
      J=MOD(I-JMIN,JMAX)+JMIN
      IF (XEXIST) XYZ(1)=XVALS(1,J)
      IF (YEXIST) XYZ(2)=YVALS(1,J)
      IF (ZEXIST) XYZ(3)=ZVALS(1,J)
      CALL T2XFRM(NDIM,1,XYZ,ISC,XFRM,2,BUFFER(IXB1))
      IXB1=IXB1+2
13011 CONTINUE
13012 CONTINUE
      N=IMAX-IMIN+1
      NJ=(N-1)*LEVEL+1
      IF (LEVEL .gt. 1) CALL T2CFIT(2,N,BUFFER(IXB),BUFFER(IYB), LEVEL,N
     *J,BUFFER(IXB),BUFFER(IYB))
      IF (IMAX .LT. LAST .OR. CLOSED) NJ=NJ-OVERLP*LEVEL
      NJ=NJ-FIRSTJ
      IXB1=IXB+2*FIRSTJ
      IF (LTRAP) GOTO 12870
      CALL T2_MESH_DRAW(BUFFER(IXB1),NJ,IHIDE)
      FIRSTJ=OVERLP*LEVEL-1
      IF(IMAX .ge. LAST)GOTO 13002
13001 CONTINUE
13002 CONTINUE
      IF (JJTYPE .eq. 3) THEN
      CALL T2_MESH_FLUSH
      IF (LEVEL .gt. 1) THEN
      CALL TXFILL(BUFFER(IXB1),BUFFER(IXB1+1),HNONE,2,NJ,ISC,IHIDE)
      ELSE                                             ! ^^^^
      CALL TXFILL(XVALS,YVALS,ZVALS,INCRMT,-JMAX,ISC,IHIDE)
      ENDIF                                    ! ^^^
      ENDIF
      ENDIF
      IF (IHIDE .eq. 6) THEN
      CALL T2_MESH_FLUSH
      IHIDE=5
      IF (JJTYPE .eq. 3) JJTYPE=2
      GOTO 12880
      ENDIF
12870 CONTINUE
      IF (IXB .ne. 1) CALL T2_FREE_MEMORY(BUFFER,IXP,5*JMAX+2*LP1+2)
      IF (FLAGS(121)) CALL TXXMT
      CALL T2_MESH_FLUSH
      CALL T2CWTS(ITXSAV,IDUM)
      IF (.NOT.FLAGS(31)) THEN
      CALL TXSCIS(1)
      CALL T2TCKS(8)
      ENDIF
      END
      SUBROUTINE T2_PLOT_TITLE(ISET,LFIRST)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL LFIRST
      INTEGER ISET
      CHARACTER*15 LOCATION(4)
      INTEGER I,J,K,T2BTRIM,ISIZ
      LOGICAL TDTEXT,DMMY
      DATA HNONE /-666.666/
      DATA LOCATION/'TOP NEXT','X CENTER NEXT','Y CENTER NEXT',
     *'Z CENTER NEXT'/
      CALL T2GDSET(ISET,1,1,1,1,ISETD,HNONE,'*')
      CALL T2_GET_SET_NAME(IBGDAT,OUTSTR)
      ISIZ=T2BTRIM(OUTSTR)
      IF (OUTSTR(:ISIZ) .eq. ' ') RETURN
      K=0
      DO 13021 I=1,4
      J=K+1
      IF(J .gt. ISIZ)GOTO 13022
      K=INDEX(OUTSTR(J:),';')+J-1
      IF (K .lt. J) K=ISIZ+1
      IF (K .gt. J) THEN
C     CALL TDTEXT(LOCATION(I),OUTSTR(J:K-1),' ')
      DMMY=TDTEXT(LOCATION(I),OUTSTR(J:K-1),' ')	! for unix-fortran
      ENDIF
13021 CONTINUE
13022 CONTINUE
      END
      SUBROUTINE T2CFIT(LL,L,X,Y,M,N,U,V)
      INTEGER L,M,N
      REAL X(LL,L),Y(LL,L)
      REAL U(LL,*),V(LL,*)
      M0=MAX0(M,1)
      L0=MAX0(L,1)
      N0=(L0-1)*M0+1
      MM1=M0-1
      N=N0
      IF (M0 .eq. 1) RETURN
      RM=1./FLOAT(M0)
      K2=N0+M0
      I=L0+1
      DO 13031 J=1,L0
      K2=K2-M0
      I=I-1
      U(1,K2)=X(1,I)
      V(1,K2)=Y(1,I)
13031 CONTINUE
13032 CONTINUE
      IF (N0.EQ.1 .OR. MM1.EQ.0) RETURN
      K2=1
      K5=1
      X3=U(1,1)
      Y3=V(1,1)
13041 CONTINUE
      K5=K5+M0
      X4=U(1,K5)
      Y4=V(1,K5)
      A3=X4-X3
      B3=Y4-Y3
      IF(.NOT.(A3.NE.0.0 .OR. B3.NE.0.0. OR. K5.EQ.N0))GOTO 13041
13042 CONTINUE
      IF (K5.NE.N0) K5=K5+M0
13051 CONTINUE
      X5=U(1,K5)
      Y5=V(1,K5)
      A4=X5-X4
      B4=Y5-Y4
      IF(A4.NE.0.0 .OR. B4.NE.0.0. OR. K5.EQ.N0)GOTO 13052
      K5=K5+M0
      GOTO 13051
13052 CONTINUE
      A2=A3+A3-A4
      B2=B3+B3-B4
      A1=A2+A2-A3
      B1=B2+B2-B3
      R23=SQRT(A2**2+B2**2)
      R34=SQRT(A3**2+B3**2)
      IRTRN=0
      GOTO 13060
13070 CONTINUE
      IRTRN=1
13081 CONTINUE
      X2=X3
      X3=X4
      X4=X5
      Y2=Y3
      Y3=Y4
      Y4=Y5
      A1=A2
      A2=A3
      A3=A4
      B1=B2
      B2=B3
      B3=B4
      COS2=COS3
      SIN2=SIN3
      R12=R23
      R23=R34
13091 CONTINUE
      IF (K5.EQ.N0) THEN
      B4=B3+B3-B2
      GOTO 13092
      ENDIF
      K5=K5+M0
      X5=U(1,K5)
      Y5=V(1,K5)
      A4=X5-X4
      B4=Y5-Y4
      IF(.NOT.(.NOT.(A4.EQ.0.0 .AND. B4.EQ.0.0)))GOTO 13091
13092 CONTINUE
13101 CONTINUE
      J=K2+M0
      IF(X2.NE.U(1,J).OR.Y2.NE.V(1,J))GOTO 13102
      DO 13111 J=1,MM1
      K2=K2+1
      U(1,K2)=X2
      V(1,K2)=Y2
13111 CONTINUE
13112 CONTINUE
      K2=K2+1
      IF(K2.GE.N0) RETURN
      GOTO 13101
13102 CONTINUE
13060 CONTINUE
      W2=ABS(A3*B4-A4*B3)
      W3=ABS(A1*B2-B1*A2)
      IF ((W3+W2).EQ.0.0) THEN
      W2=SQRT(A3**2+B3**2)
      W3=SQRT(A2**2+B2**2)
      ENDIF
      COS3=W2*A2+W3*A3
      SIN3=W2*B2+W3*B3
      R3=COS3**2+SIN3**2
      IF (R3.NE.0.0) THEN
      R3=SQRT(R3)
      COS3=COS3/R3
      SIN3=SIN3/R3
      ENDIF
      IF (IRTRN.EQ.0) GOTO 13070
      R34=SQRT(A3**2+B3**2)
      IF (R12.EQ.0.0 .OR. R23.EQ.0.0 .OR. R34.EQ.0.0) THEN
      T2=R23
      T3=R23
      ELSE
      CT2 = (A2*COS2+B2*SIN2)/R23
      CT3 = (A2*COS3+B2*SIN3)/R23
      DOT2 = A1*A2+B1*B2
      DOT3 = A2*A3+B2*B3
      R3 = 2.0*R23
      IF (DOT2.LT.0.0) R3=R3*(1.0+DOT2/(R12*R23))
      IF (DOT3.LT.0.0) R3=R3*(1.0+DOT3/(R23*R34))
      T2=R3/(1.0+0.667*CT3+0.333*CT2)
      T3=R3/(1.0+0.667*CT2+0.333*CT3)
      ENDIF
      P1=T2*COS2
      P2=3.0*A2-2.0*P1-T3*COS3
      P3=A2-P1-P2
      Q1=T2*SIN2
      Q2=3.0*B2-2.0*Q1-T3*SIN3
      Q3=B2-Q1-Q2
      R=0.0
      DO 13121 J=1,MM1
      K2=K2+1
      R=R+RM
      U(1,K2)=X2+R*(P1+R*(P2+R*P3))
      V(1,K2)=Y2+R*(Q1+R*(Q2+R*Q3))
13121 CONTINUE
13122 CONTINUE
      K2=K2+1
      IF(.NOT.(K2.GE.N0))GOTO 13081
13082 CONTINUE
      END
C SPLINE FITTER FROM FXB$CG.  I THINK THIS IS FROM THE STANFORD
C SPSS PACKAGE.
      SUBROUTINE  T2SPLN (NN, N, X, Y, NN2, B, C, D)
      INTEGER  N,NN
      REAL  X(NN,N), Y(NN,N), B(NN2,N), C(NN2,N), D(NN2,N)
C
C  THE COEFFICIENTS B(I), C(I), AND D(I), I=1,2,...,N-1 ARE COMPUTED
C  FOR THE NATURAL CUBIC INTERPOLATING SPLINE
C
C     Y(1,X) = Y(1,I) + B(I)*(X-X(I)) + C(I)*(X-X(I))**2 + D(I)*(X-X(I))**3
C
C  FOR X(I) .LE. X .LE. X(I+1) .
C
C  INPUT..
C
C     N  THE NUMBER OF DATA POINTS OR KNOTS  (N.GE.4)
C     X  THE ABSCISSAS OF THE KNOTS IN STRICTLY INCREASING ORDER
C     Y  THE ORDINATES OF THE KNOTS
C
C  OUTPUT..
C
C     B, C, D  ARRAYS OF SPLINE COEFFICIENTS AS DEFINED ABOVE.
C     B(N)  HAS THE APPROPRIATE VALUE TO DEFINE
C     THE SPLINE FOR  X .GT. X(N) .
C
C  USING  P  TO DENOTE DIFFERENTIATION,
C
C     Y(1,I) = S(X(1,I))
C     B(I) = SP(X(1,I))
C     C(I) = SPP(X(1,I))/2
C     D(I) = SPPP(X(1,I))/6
C
      INTEGER  NM1, NM2, IB, I
      REAL T
      NM1 = N-1
      NM2 = N-2
C
C  SET UP TRIDIAGONAL SYSTEM
C
C  B = DIAGONAL, D = OFFDIAGONAL, C = RIGHT HAND SIDE.
C
      D(1,1) = X(1,2) - X(1,1)
      C(1,2) = (Y(1,2) - Y(1,1))/D(1,1)
      DO 10 I = 2,NM1
        D(1,I) = X(1,I+1) - X(1,I)
        B(1,I) = 2.*(D(1,I-1) + D(1,I))
        C(1,I+1)= (Y(1,I+1) - Y(1,I))/D(1,I)
        C(1,I) = C(1,I+1) - C(1,I)
 10   CONTINUE
C
C  NATURAL SPLINE END CONDITIONS
C
      C(1,1) = 0.
      C(1,N) = 0.
C
C  FORWARD ELIMINATION
C
      DO 20 I = 3,NM1
        T = D(1,I-1)/B(1,I-1)
        B(1,I) = B(1,I) - T*D(1,I-1)
        C(1,I) = C(1,I) - T*C(1,I-1)
 20   CONTINUE
C
C  BACK SUBSTITUTION
C
      C(1,NM1) = C(1,NM1)/B(1,NM1)
      DO 30 IB = 2,NM2
        I = N-IB
        C(1,I) = (C(1,I) - D(1,I)*C(1,I+1))/B(1,I)
 30   CONTINUE
C
C  C(I) IS NOW THE SIGMA(I) OF THE TEXT
C
C  COMPUTE POLYNOMIAL COEFFICIENTS
C
      B(1,N) = (Y(1,N) - Y(1,NM1))/D(1,NM1) + D(1,NM1)*C(1,NM1)
      DO 40 I = 1,NM1
        B(1,I) = (Y(1,I+1) - Y(1,I))/D(1,I)
     *- D(1,I)*(C(1,I+1) + 2.*C(1,I))
        D(1,I) = (C(1,I+1) - C(1,I))/D(1,I)
        C(1,I) = 3.*C(1,I)
 40   CONTINUE
      RETURN
      END
