C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
C                       N O T I C E                                    
C                                                                      
C This  program and  associated  documentation,  and  the              
C material and  data contained  therein,  were  developed              
C under the sponsorship of the U. S. government.  Neither              
C the U.S.  nor the U.S.D.O.E.,   nor the Leland Stanford              
C Junior  University,  nor  their  employees,  nor  their              
C respective  contractors,   subcontractors,    or  their              
C employees, even unto the seventh generation,  makes any              
C warranty, express or implied,  or assumes any liability              
C or  responsibility   for  accuracy,    completeness  or              
C usefulness of any information,   apparatus,  product or              
C process disclosed,  or represents that its use will not              
C infringe  privately-owned  rights.     Mention  of  any              
C product, its manufacturer, or suppliers shall not,  nor              
C is it  intended to,  imply approval,   disapproval,  or              
C fitness for any particular use.   A royalty-free,  non-              
C exclusive right  to use  and disseminate  same for  any              
C purpose whatsoever  is expressly  reserved to  the U.S.              
C and the University.                                                  
      SUBROUTINE T2MAIN(IARGUE,STRIN)
      CHARACTER*(*) STRIN
      EXTERNAL T2SETC
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      CHARACTER*80 PRMP1, PRMP2
      INTEGER NPRMP1, NPRMP2
      COMMON /T2PRMP/NPRMP1, PRMP1, NPRMP2, PRMP2
      REAL HNONE
      CHARACTER*512 CARD ,REPSTR(MAXREP) ,CARSAV(MAXREP)
      INTEGER INFO(10),REPCNT(MAXREP),INFSAV(10,MAXREP),REPSIZ(MAXREP)
      LOGICAL INTRAC,FERSAV,LASERR,IFSTAK(10)
      LOGICAL LTEST,LTEST1,LTEST2,FSAVE
      LOGICAL ISTAT ,T2_SET_ENV ,T2_GET_ENV , LNOT 
      INTEGER IFLEVL,T2BTRIM
      REAL SYMSAV
      REAL VALSTR
      EQUIVALENCE (VALSTR,OUTSTR)
      CHARACTER TKSTR*700
      LOGICAL TDSHOW,DMMY
      DATA HNONE /-666.666/
      DATA CARD/' '/
      DATA INFO/10*0/
      DATA IFLEVL/0/
      NSTJOU=0
      LSTJOU=0
      FERSAV=FLAGS(23)
      IARGUE=0
      IF (LEN(STRIN).gt.0.and.STRIN.ne. ' ') THEN
      DO 10011 I=1,10
      INFO(I)=0
10011 CONTINUE
10012 CONTINUE
      IMAX=1
      DO 10021 I=1,LEN(STRIN)
      IF (STRIN(I:I) .ne. ' ') IMAX=I
10021 CONTINUE
10022 CONTINUE
      IF (IMAX .gt. LEN(CARD)) THEN
      CALL T2ERR(0,' ','*** ERROR *** Input string too long in T2MAIN',3
     *)
      ENDIF
      INFO(1)=MIN(LEN(CARD),IMAX)
      INFO(2)=-2
      CARD=STRIN(1:IMAX)
      GOTO 10030
      ELSE
      INFO(1)=MAX(0,INFO(1))
      INFO(2)=0
      ENDIF
10041 CONTINUE
      FLAGS(31) = .FALSE.
C     IF ((INPFIL.eq.9 .and. INTRAC(0).and.FLAGS(54)).or.FLAGS(29))
      IF ((INPFIL.eq.9                .and.FLAGS(54)).or.FLAGS(29))  ! for pipe
     * CALL TXVOID
      CALL TOKRED(INFO,CARD,LENCRD,INPFIL,INPFMT)
10030 CONTINUE
      LASERR=FLAGS(23)
      FERSAV=FERSAV .or. FLAGS(23)
      FLAGS(23)=.FALSE.
      IF ((INFO(1).LT.0)) THEN
      IARGUE=0
      IF (INFO(2).ge.0) THEN
      CALL TXVOID
      IF (INTRAC(I).and..not.FLAGS(100)) THEN
      INFO(1)=0
      GOTO 10041
      ENDIF
      IARGUE=1
      ENDIF
      GOTO 10050
      ENDIF
      IF (IFLEVL.gt.0) THEN
      IF (.NOT.IFSTAK(IFLEVL)) THEN
      GOTO 10061
10090 CONTINUE
      IF (IFLEVL.lt.10) THEN
      IFLEVL=IFLEVL+1
      IFSTAK(IFLEVL)=IFSTAK(IFLEVL-1)
      ELSE
      CALL T2ERR(INFO,CARD,('*** ERROR *** Too many nested IFs'),4)
      ENDIF
      GOTO 10062
10100 CONTINUE
      CONTINUE
      GOTO 10062
10110 CONTINUE
      IFLEVL=IFLEVL-1
      GOTO 10062
10120 CONTINUE
      IFSTAK(IFLEVL)=.NOT.IFSTAK(IFLEVL)
      IF (IFLEVL.gt.1) IFSTAK(IFLEVL)=IFSTAK(IFLEVL).AND.IFSTAK(IFLEVL-1
     *)
      GOTO 10062
10070 GOTO ( 10090,10090,10100,10100,10110,10120,10065),KEYORD
10065 CONTINUE
      GOTO 10130
10061 CALL TOKEN(INFO,CARD,'IF,IFNOT,EN,END,ENDIF,ELSE,;')
      GOTO (10065,10070,10065,10065,10065,10065,10065,10070,10065),INTER
     *P
10062 CONTINUE
      ENDIF
      IF (IFLEVL.gt.0) THEN
      IF (.NOT.IFSTAK(IFLEVL)) GOTO 10130
      ENDIF
      ENDIF
      IF (LTRAP) THEN
      IF (INPFIL.ne.9 .or. .not. INTRAC(0)) THEN
      GOTO 10141
10170 CONTINUE
      INFO(9)=-1
      GOTO 10142
10150 GOTO ( 10170,10170,10170,10170,10170,10170,10170,10170,10170,10145
     *),KEYORD
10145 CONTINUE
      GOTO 10130
10141 CALL TOKEN(INFO,CARD,'NEWPLOT:0,NEWFRAME:0,NEW:0,RETURN,STOP,EXIT,
     *QUIT,HALT,END,;')
      GOTO (10145,10150,10145,10145,10145,10145,10145,10150,10145),INTER
     *P
10142 CONTINUE
      ENDIF
      INFO(6)= 2 147 483 647
      LTRAP=.false.
      LSYERR=.false.
      ENDIF
10180 CONTINUE
      IF (OUTFIL.gt.0) CALL T2ERR(INFO,CARD,' ',6)
      DO 10191 I=1,3
      ICPOIN(I)=0
10191 CONTINUE
10192 CONTINUE
      IPATRN=1
      LAPPEN=FLAGS(106)
      LCHECK=FLAGS(105)
      LLOG=FLAGS(95)
      LCONF=FLAGS(104)
      LMONITOR=FLAGS(107)
      NS1=1
      NS2=NDSETS
      N_SELECT=1
      C_SELECT(1:1)='*'
      N1=1
      N2= 2 147 483 647
      N3=1
      N4= 2 147 483 647
      TLIM(1,1)=HNONE
      GOTO 10201
10210 CONTINUE
10220 CONTINUE
      INFO(9)=1
      NSTJOU=0
      CALL TOKRED(INFO,CARD,LENCRD,INPFIL,INPFMT)
      CALL T2_READ_POINTS(INFO,CARD)
      GOTO 10130
10230 CONTINUE
      GOTO 10202
10260 CONTINUE
      CALL T2_ARROW(INFO,CARD)
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
10280 CONTINUE
      CALL T2_BCED(INFO,CARD)
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
10290 CONTINUE
      CALL T2ERR(INFO,CARD,('*** ERROR *** CASE  must follow TEXT or MOR
     *E'),4)
      IF (FLAGS(92)) GOTO 10270
      GOTO 10202
10300 CONTINUE
      CALL T2_ERASE(INFO,CARD)
      GOTO 10202
10310 CONTINUE
      CALL T2CNTR(INFO,CARD)
      GOTO 10202
10320 CONTINUE
      CALL T2_CONVOLUTE(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10330 CONTINUE
      CALL TOKEN(INFO,CARD,'MESH,;')
      IF(INTERP.NE.2)THEN
      INFO(9)=-1
      ENDIF
      CALL T2_CREATE_MESH(INFO,CARD)
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
10350 CONTINUE
      C_NAME(:1)=' '
      N_NAME=1
      GOTO 10361
10390 CONTINUE
      GOTO 10361
10400 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 10361
10361 CALL TOKEN(INFO,CARD,'SET,NAME:S,;')
      GOTO (10362,10367,10365,10365,10365,10365,10361,10367, 10365),INTE
     *RP
10365 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 10361
10367 GOTO ( 10390,10400,10365),KEYORD
10362 CONTINUE
      CALL T2NEWS(0,C_NAME(:N_NAME))
      IF (FLAGS(95)) WRITE(6,*) '  Set=',NDSETS,' Name=',C_NAME(:N_NAME)
     *
      GOTO 10202
10410 CONTINUE
      GOTO 10421
10450 CONTINUE
      IF (NSTRNG.gt.0) THEN
      C_SELECT='TD_C_'//STRNG(1:NSTRNG)
      CALL T2SQEZ(C_SELECT(1:NSTRNG+5),I)
      CALL TOKEN(INFO,CARD,';')
      IF(INTERP.NE.5)THEN
      CALL T2ERR(INFO,CARD,' ',5)
      ELSE
      IF (NSTRNG.gt.0) THEN
      ISTAT=T2_SET_ENV(C_SELECT(1:I),STRNG(1:NSTRNG))
      IF (.not. ISTAT) THEN
      CALL T2ERR(INFO,CARD,'*** ERROR *** Command not defined',4)
      ELSEIF (LLOG) THEN
      WRITE (6,*) '  COMMAND ', C_SELECT(6:I),'="'//strng(1:NSTRNG)//'"'
     *
      ENDIF
      ENDIF
      ENDIF
      ENDIF
      GOTO 10422
10470 CONTINUE
      CALL T2_DEFINE_HIST(INFO,CARD)
      GOTO 10422
10480 CONTINUE
      ITEMP=INFO(3)+1
10491 CONTINUE
      CALL TOKEN(INFO,CARD,';')
      IF(.NOT.(INTERP.eq.1))GOTO 10491
10492 CONTINUE
      IF (INFO(3).gt.ITEMP) CALL DEFKEY('DEFINE /KEY '//CARD(ITEMP:INFO(
     *3)))
      GOTO 10422
10500 CONTINUE
      IF (NSTRNG.gt.0) THEN
      C_SELECT='TD_V_'//STRNG(1:NSTRNG)
      CALL T2SQEZ(C_SELECT(1:NSTRNG+5),I)
      LTEST=.false.
      LTEST1=.false.
      GOTO 10511
10520 CONTINUE
      VALSTR=FLOTNG
      LTEST=.TRUE.
      GOTO 10511
10550 CONTINUE
      LLOG=LTOKEN
      GOTO 10511
10560 CONTINUE
      LTEST1=LTOKEN
      GOTO 10511
10530 GOTO ( 10550,10560,10515),KEYORD
10511 CALL TOKEN(INFO,CARD,'LOG:Y,FAST:Y,;')
      GOTO (10512,10530,10520,10520,10515,10515,10515,10530,10515),INTER
     *P
10515 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 10511
10512 CONTINUE
      IF (.not.FLAGS(23).and.LTEST) THEN
C     J=5
C     VALSTR=FLOTNG
C     OUTSTR(5:5)=CHAR(127)
      IF (.not.LTEST1) THEN
C     J=20
C     WRITE(OUTSTR(6:20),'(1p,G15.7)') FLOTNG
      WRITE(OUTSTR(1:20),*) FLOTNG
      J=T2BTRIM(OUTSTR(1:20))
      ENDIF
      ISTAT=T2_SET_ENV(C_SELECT(1:I),OUTSTR(1:J))
      IF (.not.ISTAT) THEN
      CALL T2ERR(INFO,CARD,('*** ERROR *** Value not defined'),4)
      ELSEIF (LLOG) THEN
C     CALL TDSHOW('LEXICAL '//C_SELECT(4:I))
      DMMY=TDSHOW('LEXICAL '//C_SELECT(4:I))	! for unix-fortran
      ENDIF
      ELSEIF (.not.LTEST) THEN
      CALL T2ERR(INFO,CARD,'*** ERROR *** Missing value',4)
      ENDIF
      ENDIF
      GOTO 10422
10570 CONTINUE
      IF (NSTRNG.gt.0) THEN
      C_SELECT='TD_S_'//STRNG(1:NSTRNG)
      CALL T2SQEZ(C_SELECT(1:NSTRNG+5),I)
      CALL TOKEN(INFO,CARD,';')
      IF(INTERP.NE.5)THEN
      CALL T2ERR(INFO,CARD,' ',5)
      ELSE
      J=MAX(1,NSTRNG)
      ISTAT=T2_SET_ENV(C_SELECT(1:I),STRNG(1:J))
      IF (.not.ISTAT) THEN
      CALL T2ERR(INFO,CARD,('*** ERROR *** String Not defined'),4)
      ELSEIF (LLOG) THEN
C     CALL TDSHOW('LEXICAL '//C_SELECT(4:I))
      DMMY=TDSHOW('LEXICAL '//C_SELECT(4:I))	! for unix-fortran
      ENDIF
      ENDIF
      ENDIF
      GOTO 10422
10421 CALL TOKEN(INFO,CARD,'COMMAND:T,HISTOGRAMS,KEYPAD,VALUE:T,STRING:T
     *,;')
      GOTO (10425,10427,10425,10425,10425,10425,10422,10427, 10425),INTE
     *RP
10425 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 10422
10427 GOTO ( 10450,10470,10480,10500,10570,10425),KEYORD
10422 CONTINUE
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
10590 CONTINUE
      GOTO 10601
10630 CONTINUE
      CALL T2_DELETE_HIST(INFO,CARD)
      GOTO 10602
10640 CONTINUE
      CALL T2_DELETE_DATA(INFO,CARD)
      GOTO 10602
10610 GOTO ( 10630,10640,10605),KEYORD
10605 CONTINUE
      INFO(9)=-1
      CALL T2_DELETE_DATA(INFO,CARD)
      GOTO 10602
10601 CALL TOKEN(INFO,CARD,'HISTOGRAMS,DATA,;')
      GOTO (10605,10610,10605,10605,10605,10605,10605,10610,10605),INTER
     *P
10602 CONTINUE
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
10650 CONTINUE
      CALL T2_MDIV(INFO,CARD)
      GOTO 10202
10660 CONTINUE
      IARGUE=1
      CALL TXVOID
      GOTO 10671
10680 CONTINUE
      IF (NSTRNG.gt.0) WRITE(6,*,ERR=10050) STRNG(1:NSTRNG)
      GOTO 10671
10671 CALL TOKEN(INFO,CARD,';')
      GOTO (10672,10675,10675,10675,10680,10675,10675,10675,10675),INTER
     *P
10675 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 10671
10672 CONTINUE
      GOTO 10050
10690 CONTINUE
      IF (IFLEVL.gt.0) THEN
      IFSTAK(IFLEVL)=.NOT.IFSTAK(IFLEVL)
      IF (IFSTAK(IFLEVL)) GOTO 10180
      ELSE
      CALL T2ERR(INFO,CARD,('*** ERROR *** Missing preceding IF'),4)
      ENDIF
      GOTO 10202
10700 CONTINUE
      IF (IFLEVL.gt.0) THEN
      IFLEVL=IFLEVL-1
      IF (IFLEVL.gt.0) THEN
      IF (IFSTAK(IFLEVL)) GOTO 10180
      ENDIF
      ELSE
      CALL T2ERR(INFO,CARD,('*** ERROR *** Missing preceding IF'),4)
      ENDIF
      GOTO 10202
10710 CONTINUE
      GOTO 10721
10730 CONTINUE
      IF (NSTRNG.gt.0) WRITE(6,*,ERR=10050) STRNG(1:NSTRNG)
      GOTO 10721
10721 CALL TOKEN(INFO,CARD,';')
      GOTO (10722,10725,10725,10725,10730,10725,10725,10725,10725),INTER
     *P
10725 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 10721
10722 CONTINUE
      IF(INPFIL.ne.9) THEN
      CLOSE(UNIT=INPFIL)
      INPFIL=INPFIL-1
      ELSE
      IARGUE=1
      CALL TXVOID
      GOTO 10050
      ENDIF
      GOTO 10202
10740 CONTINUE
      CALL T2_FREQUENCY(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10750 CONTINUE
      CALL T2FFT(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10760 CONTINUE
      CALL T2_FIT(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10770 CONTINUE
      CALL T2_FILL(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10780 CONTINUE
      CALL TXVOID
      GOTO 10202
10790 CONTINUE
      CALL T2_JOIN(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10800 CONTINUE
      GOTO 10811
10840 CONTINUE
      CALL T2_LIST_FIT(INFO,CARD)
      GOTO 10812
10850 CONTINUE
      CALL T2_PRINT_HIST(INFO,CARD)
      GOTO 10812
10860 CONTINUE
      CALL T2_LIST(INFO,CARD)
      GOTO 10812
10820 GOTO ( 10840,10850,10860,10815),KEYORD
10815 CONTINUE
      INFO(9)=-1
      CALL T2_LIST(INFO,CARD)
      GOTO 10812
10811 CALL TOKEN(INFO,CARD,'FIT,HISTOGRAMS,DATA,;')
      GOTO (10815,10820,10815,10815,10815,10815,10815,10820,10815),INTER
     *P
10812 CONTINUE
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10870 CONTINUE
      CALL T2_PLOT(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
10880 CONTINUE
      ITEMP=INFO(3)+1
10891 CONTINUE
      CALL TOKEN(INFO,CARD,';')
      IF(.NOT.(INTERP.eq.1))GOTO 10891
10892 CONTINUE
      IF (INTRAC(I)) THEN
      IF (ITEMP .le. INFO(3)) THEN
C     CALL HELP('TOPDRAWER '//CARD(ITEMP:INFO(3)))
      CALL HELP(              CARD(ITEMP:INFO(3)))
      ELSE
C     CALL HELP('TOPDRAWER')
      CALL HELP(' '        )
      ENDIF
      ENDIF
      IF (FLAGS(92)) GOTO 10270
      GOTO 10202
10900 CONTINUE
      ITEMP=INFO(3)+1
10911 CONTINUE
      CALL TOKEN(INFO,CARD,';')
      IF(.NOT.(INTERP.eq.1))GOTO 10911
10912 CONTINUE
C     IF (INTRAC(I)) THEN
      IF (ITEMP.lt.INFO(3)) THEN
      call spawn(CARD(ITEMP:INFO(3)))
      ELSE 
      call spawn(' ')
      ENDIF
      IF (FLAGS(92)) GOTO 10270
C     ENDIF
      GOTO 10202
10920 CONTINUE
      CALL T2_HISTOGRAM(INFO,CARD)
      IF (FLAGS(23) .and. FLAGS(92)) GOTO 10270
      GOTO 10202
10930 CONTINUE
      LTEST=.TRUE.
      IF (INTEG.eq.0) LTEST=.FALSE.
      LTEST1=.TRUE.
      T1=HNONE
      T2=HNONE
      IOP=0
      LNOT=.false.
      GOTO 10941
10970 CONTINUE
      IOP=INTEG
      GOTO 10941
10980 CONTINUE
      LNOT=.not. LNOT
      GOTO 10941
10990 CONTINUE
11000 GOTO (11010,11020,11030,11040,11050),INTEG
11010 CONTINUE
      LTEST2=FLAGS(56)
      GOTO 11002
11020 CONTINUE
      LTEST2=IBLKTP.EQ.2
      GOTO 11002
11030 CONTINUE
      LTEST2=NPOINT+NMESH1.gt.0
      GOTO 11002
11040 CONTINUE
      LTEST2=LASERR
      GOTO 11002
11050 CONTINUE
      LTEST2=INTRAC(I)
      GOTO 11002
11002 CONTINUE
11060 CONTINUE
      IF (LNOT) THEN
      LTEST2=.not. LTEST2
      LNOT=.false.
      ENDIF
      IF (IOP.eq.0) THEN
      LTEST1=LTEST1.and.LTEST2
      ELSE
      LTEST1=LTEST1.or. LTEST2
      ENDIF
      IOP=0
      GOTO 10941
11070 CONTINUE
      IF (IFLEVL.lt.10) THEN
      IFLEVL=IFLEVL+1
      IFSTAK(IFLEVL)= (LTEST.AND.LTEST1) .OR. (.NOT.LTEST.and..NOT.LTEST
     *1)
      ELSE
      CALL T2ERR(INFO,CARD,('*** ERROR *** Too many nested IFs'),4)
      ENDIF
      GOTO 10941
10950 GOTO ( 10970,10970,10970,10980,10980,10990,10990,10990,10990,10990
     *,10990,11070,10945),KEYORD
11080 CONTINUE
      T1=FLOTNG
      GOTO 11091
11120 CONTINUE
      IREL=INTEG
      CALL TOKEN(INFO,CARD,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFO,CARD,' ',5)
      ELSE
      T2=FLOTNG
11140 GOTO (11150,11160,11170,11180,11190,11200),IREL
11150 CONTINUE
      LTEST2=T1.EQ.T2
      GOTO 11142
11180 CONTINUE
      LTEST2=T1.NE.T2
      GOTO 11142
11190 CONTINUE
      LTEST2=T1.LT.T2
      GOTO 11142
11200 CONTINUE
      LTEST2=T1.LE.T2
      GOTO 11142
11160 CONTINUE
      LTEST2=T1.GT.T2
      GOTO 11142
11170 CONTINUE
      LTEST2=T1.GE.T2
      GOTO 11142
11142 CONTINUE
      GOTO 11060
      ENDIF
      GOTO 11092
11091 CALL TOKEN(INFO,CARD,'.EQ.:1,.GT.:2,.GE.:3,.NE.:4,.LT.:5,.LE.:6,;'
     *)
      GOTO (11095,11097,11095,11095,11095,11095,11092,11097, 11095),INTE
     *RP
11095 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11092
11097 GOTO ( 11120,11120,11120,11120,11120,11120,11095),KEYORD
11092 CONTINUE
      GOTO 10941
10945 CONTINUE
      INFO(9)=-1
      GOTO 10942
10941 CALL TOKEN(INFO,CARD,'.AND.:0,.OR.:1,,.NOT.,,THREE:1,3D:1,MESH:2,D
     *ATA:3,ERROR:4,INTERACTIVE:5,THEN,;')
      GOTO (10942,10950,11080,11080,10945,10945,10945,10950,10945),INTER
     *P
10942 CONTINUE
      IF ((LTEST.AND.LTEST1) .OR. (.NOT.LTEST.and..NOT.LTEST1)) GOTO 101
     *80
11211 CONTINUE
      CALL TOKEN(INFO,CARD,';')
      IF(.NOT.(INTERP.eq.1))GOTO 11211
11212 CONTINUE
      GOTO 10202
11220 CONTINUE
      CALL T2_SPLINE(INFO,CARD)
      GOTO 10202
11230 CONTINUE
      CALL T2_MERGE(INFO,CARD)
      GOTO 10202
11240 CONTINUE
      GOTO 11251
11280 CONTINUE
      CALL T2_MONITOR_HIST(INFO,CARD)
      GOTO 11252
11251 CALL TOKEN(INFO,CARD,'HISTOGRAMS,;')
      GOTO (11255,11257,11255,11255,11255,11255,11252,11257, 11255),INTE
     *RP
11255 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11252
11257 GOTO ( 11280,11255),KEYORD
11252 CONTINUE
      GOTO 10202
11290 CONTINUE
      IF ((.NOT.FLAGS(28).AND.NPOINT.NE.0).and.FLAGS(97)) THEN
      DO 11301 ISET=1,NDSETS
      CALL T2GDSET(ISET,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,'*
     *')
      IF (ISETD(1).eq.1) THEN
      CALL T2PLOT(DATBUF(I1),DATBUF(I2), DATBUF(I3),DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), DATBUF(I7),NP,NINCR0,0,0.0,HNONE,HNONE,HNONE,HNONE)
      ENDIF
11301 CONTINUE
11302 CONTINUE
      ENDIF
      CALL TXVOID
      PXNAME=' '
      GOTO 11311
11320 CONTINUE
      IF (NSTRNG.gt.0) WRITE(6,*,ERR=11330) STRNG(1:NSTRNG)
11330 CONTINUE
      GOTO 11311
11360 CONTINUE
      CALL TDREST
      GOTO 11311
11370 CONTINUE
      CONTINUE
      GOTO 11311
11380 CONTINUE
      IF (NSTRNG.gt.0) THEN
      IMAX=NSTRNG
      IF (IMAX.gt.8) THEN
      CALL T2ERR(INFO,CARD,('*** WARNING *** Alias too long (max 8 chars
     *), truncated'),4)
      IMAX=8
      ENDIF
      IF (IMAX.gt.0)PXNAME=STRNG(1:IMAX)
      ELSE
      WRITE(PXNAME,'(A,I4.4)')  'Plot',MOD(ABS(NPLOTS),10000)
      ENDIF
      GOTO 11311
11340 GOTO ( 11360,11370,11370,11380,11315),KEYORD
11311 CALL TOKEN(INFO,CARD,'RESET,PLOT,FRAME,ALIAS:T,;')
      GOTO (11312,11340,11315,11315,11320,11315,11315,11340,11315),INTER
     *P
11315 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11311
11312 CONTINUE
      IARGUE=2
      IF (FLAGS(59).and.LEVREP.eq.0) GOTO 10050
      IF (FLAGS(58) .and. ERRFIL.eq.86) THEN
      IF(6.gt.0) THEN
      WRITE(6,11390)
      IF(6.le.NINMAX)NINP(6)=NINP(6)+1
      ENDIF
11390 FORMAT (' ===> Error messages')
      REWIND 86
      IF (FLAGS(53)) THEN
      LTEST=.false.
      CALL T2WAIT(PRMP2(1:NPRMP2),LTEST)
      IF(.not.LTEST) goto 11400
      ENDIF
C     CALL TDSHOW('ERRORS')
      DMMY=TDSHOW('ERRORS')	! for unix-fortran
      IF(6.gt.0) THEN
      WRITE(6,11410)
      IF(6.le.NINMAX)NINP(6)=NINP(6)+1
      ENDIF
11410 FORMAT (' ===> End of error messages')
      IF (FLAGS(53)) THEN
      LTEST=.false.
      CALL T2WAIT(PRMP2(1:NPRMP2),LTEST)
      ENDIF
11400 CONTINUE
      ENDIF
      IF (.not.FLAGS(53)) THEN
      IF(6.gt.0) THEN
      WRITE(6,11420)NPLOTS
      IF(6.le.NINMAX)NINP(6)=NINP(6)+1
      ENDIF
11420 FORMAT (' Plot',I3,' Done.')
      ELSE
      IF(.not. FLAGS(99) .or. LEVREP.ne.0) THEN
      LTEST=.true.
      CALL T2WAIT(PRMP2(1:NPRMP2),LTEST)
      IF(.not.LTEST) THEN
      DO 11431 I=INPFIL,9+1,-1
      CLOSE(UNIT=I)
11431 CONTINUE
11432 CONTINUE
      INPFIL=9
      IFLEVL=0
      IF (LEVREP.gt.0) THEN
      DO 11441 I=1,10
      INFO(I)=INFSAV(I,1)
11441 CONTINUE
11442 CONTINUE
      CARD=CARSAV(1)
      LEVREP=0
      ENDIF
      INFO(3)=LEN(CARD)
      ENDIF
      ENDIF
      ENDIF
      IF (FLAGS(58)) THEN
      REWIND 86
      FLAGS(58)=.false.
      ENDIF
      CALL TXNEXT
      CALL T2REST
      GOTO 10202
11450 CONTINUE
      CALL TXVOID
      LTEST=.true.
      I=0
      GOTO 11461
11490 CONTINUE
      TIME=FLOTNG
      LTEST=.false.
      GOTO 11461
11470 GOTO ( 11490,11465),KEYORD
11500 CONTINUE
      I=I+1
      IF (NSTRNG.gt.0) WRITE(6,*,ERR=11510) STRNG(1:NSTRNG)
11510 CONTINUE
      GOTO 11461
11461 CALL TOKEN(INFO,CARD,'FOR:0:200:10,;')
      GOTO (11462,11470,11465,11465,11500,11465,11465,11470,11465),INTER
     *P
11465 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11461
11462 CONTINUE
      IF (INTRAC(I)) THEN
      IF (LTEST) THEN
      IF (I.eq.0)WRITE(6,*,ERR=11520) ' User requested wait'
11520 CONTINUE
      CALL T2WAIT(PRMP2(1:NPRMP2),LTEST)
      IF(.not.LTEST) THEN
      DO 11531 I=INPFIL,9+1,-1
      CLOSE(UNIT=I)
11531 CONTINUE
11532 CONTINUE
      INPFIL=9
      IFLEVL=0
      IF (LEVREP.gt.0) THEN
      DO 11541 I=1,10
      INFO(I)=INFSAV(I,1)
11541 CONTINUE
11542 CONTINUE
      CARD=CARSAV(1)
      LEVREP=0
      ENDIF
      INFO(3)=LEN(CARD)
      ENDIF
      ELSEIF(.not.LTRAP) THEN
      CALL T2_WAIT(TIME)
      ENDIF
      ENDIF
      IF (FLAGS(92)) GOTO 10270
      GOTO 10202
11550 CONTINUE
      CALL T2_PROJECT(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
11560 CONTINUE
      GOTO 11571
11600 CONTINUE
      CALL T2_READ_MESH(INFO,CARD)
      GOTO 11572
11610 CONTINUE
      GOTO 11621
11650 CONTINUE
      FLAGS(28)=.false.
      GOTO 11621
11660 CONTINUE
      CALL T2NEWS(0,' ')
      ISET=MIN(INTEG,NDSETS)
      GOTO 11621
11630 GOTO ( 11650,11660,11625),KEYORD
11625 CONTINUE
      INFO(9)=-1
      GOTO 11622
11621 CALL TOKEN(INFO,CARD,'APPEND,SET:0::9999,;')
      GOTO (11622,11630,11625,11625,11625,11625,11625,11630,11625),INTER
     *P
11622 CONTINUE
      CALL T2_READ_POINTS(INFO,CARD)
      GOTO 11572
11571 CALL TOKEN(INFO,CARD,'MESH,POINTS,;')
      GOTO (11575,11577,11575,11575,11575,11575,11572,11577, 11575),INTE
     *RP
11575 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11572
11577 GOTO ( 11600,11610,11575),KEYORD
11572 CONTINUE
      GOTO 10202
11670 CONTINUE
      GOTO 11681
11710 CONTINUE
      CALL T2_SAVE_HIST(INFO,CARD,.false.)
      GOTO 11682
11720 CONTINUE
      CALL T2_RESTORE_DATA(INFO,CARD)
      GOTO 11682
11730 CONTINUE
      CALL T2_SAVE_FIT(INFO,CARD,.true.)
      GOTO 11682
11681 CALL TOKEN(INFO,CARD,'HISTOGRAMS,DATA,FIT,;')
      GOTO (11685,11687,11685,11685,11685,11685,11682,11687, 11685),INTE
     *RP
11685 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11682
11687 GOTO ( 11710,11720,11730,11685),KEYORD
11682 CONTINUE
      GOTO 10202
11740 CONTINUE
      IARGUE=0
      GOTO 11751
11760 CONTINUE
      IF (NSTRNG.gt.0) WRITE(6,*,ERR=11770) STRNG(1:NSTRNG)
11770 CONTINUE
      GOTO 11751
11780 CONTINUE
      IARGUE=INTEG
      GOTO 11751
11751 CALL TOKEN(INFO,CARD,';')
      GOTO (11752,11755,11780,11780,11760,11755,11755,11755,11755),INTER
     *P
11755 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11751
11752 CONTINUE
      GOTO 10050
11790 CONTINUE
      IF (LEVREP.gt.0) REPCNT(LEVREP)=0
      GOTO 10050
11800 CONTINUE
      IF (LEVREP.lt.MAXREP) THEN
      REPSIZ(LEVREP+1)=0
      REPCNT(LEVREP+1)=9999
      LTEST=.true.
      IF (NSTJOU.gt.0) THEN
      STJOU(1:7)='(REPEAT'
      NSTJOU=7
      ENDIF
      GOTO 11811
11820 CONTINUE
      REPSTR(LEVREP+1)=STRNG(1:NSTRNG)
      IF (REPSIZ(LEVREP+1) .gt.0) CALL T2ERR(INFO,CARD,'*** ERROR *** Mu
     *ltiple commands',4)
      REPSIZ(LEVREP+1)=MIN(LEN(CARD),NSTRNG)
      GOTO 11811
11830 CONTINUE
      REPCNT(LEVREP+1)=INTEG
      GOTO 11811
11860 CONTINUE
      LTEST=LTOKEN
      GOTO 11811
11840 GOTO ( 11860,11815),KEYORD
11811 CALL TOKEN(INFO,CARD,'FAST:Y,;')
      GOTO (11812,11840,11830,11830,11820,11815,11815,11840,11815),INTER
     *P
11815 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11811
11812 CONTINUE
      IF (REPSIZ(LEVREP+1) .eq.0) CALL T2ERR(INFO,CARD,'*** ERROR *** Mi
     *ssing command',4)
      IF (.not. FLAGS(23)) THEN
      IREPCT(LEVREP+1)=0
      IF (REPCNT(LEVREP+1).gt.0) THEN
      LEVREP=LEVREP+1
      IREPCT(LEVREP)=IREPCT(LEVREP)+1
      CARSAV(LEVREP)=CARD
      DO 11871 I=1,10
      INFSAV(I,LEVREP)=INFO(I)
      INFO(I)=0
11871 CONTINUE
11872 CONTINUE
      INFO(1)=REPSIZ(LEVREP)
      IF (INFSAV(2,LEVREP).ge.0) INFO(2)=-1
      IF (LTEST) INFO(2)=-2
      IF (INFO(2).lt.-1.and.NSTJOU.gt.0) STJOU(1:1)=' '
      CALL T2JOUR
      CARD=REPSTR(LEVREP)
      GOTO 10030
      ENDIF
      ENDIF
      ELSE
      CALL T2ERR(INFO,CARD,'*** ERROR *** Max repeat nesting exceeded',4
     *)
      ENDIF
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
11880 CONTINUE
      GOTO 11891
11920 CONTINUE
      CALL T2_SAVE_HIST(INFO,CARD,.true.)
      GOTO 11892
11930 CONTINUE
      CALL T2_SAVE_DATA(INFO,CARD)
      GOTO 11892
11940 CONTINUE
      CALL T2_SAVE_FIT(INFO,CARD,.false.)
      GOTO 11892
11891 CALL TOKEN(INFO,CARD,'HISTOGRAMS,DATA,FIT,;')
      GOTO (11895,11897,11895,11895,11895,11895,11892,11897, 11895),INTE
     *RP
11895 CALL T2ERR(INFO,CARD,' ',5)
      GOTO 11892
11897 GOTO ( 11920,11930,11940,11895),KEYORD
11892 CONTINUE
      GOTO 10202
11950 CONTINUE
      CALL T2SET(INFO,CARD)
      GOTO 10202
11960 CONTINUE
      CALL T2SHOW(INFO,CARD)
      IF (FLAGS(92).and.FLAGS(23)) GOTO 10270
      GOTO 10202
11970 CONTINUE
      CALL T2_SMOOTH(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
11980 CONTINUE
      CALL T2_SORT(INFO,CARD)
      GOTO 10202
11990 CONTINUE
      CALL T2_SWAP(INFO,CARD)
      GOTO 10202
12000 CONTINUE
      I=INTEG
      CALL T2TTXT(INFO,CARD,I,' ',' ')
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10130
12010 CONTINUE
      CALL T2_VALUE(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
12020 CONTINUE
      CALL T2TRNS(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
12030 CONTINUE
      CALL T2_SYMBOL(INFO,CARD)
      IF (FLAGS(23).and.FLAGS(92))GOTO 10270
      GOTO 10202
12040 CONTINUE
      CALL T2_TYPE(INFO,CARD)
      GOTO 10202
12050 CONTINUE
      ITEMP=INFO(3)+1
12061 CONTINUE
      CALL TOKEN(INFO,CARD,';')
      IF(.NOT.(INTERP.eq.1))GOTO 12061
12062 CONTINUE
      IF (ITEMP.lt.INFO(3)) THEN
      call TDUSER(CARD(ITEMP:INFO(3)))
      ELSE 
      call TDUSER(' ')
      ENDIF
      IF (FLAGS(92)) GOTO 10270
      GOTO 10202
10240 GOTO ( 10260,10280,10280,10280,10280,10290,10300,10300,10310,10320
     *,10330,10350,10410,10590,10650,10650,10650,10650,10660,10660,10660
     *,10660,10660,10690,10700,10710,10740,10740,10750,10760,10770,10780
     *,10790,10800,10870,10880,10900,10920,10920,10930,10930,11220,11230
     *,11240,11290,11290,11290,11450,11450,11550,11560,11670,11740,11790
     *,11800,11880,11950,11960,11970,11980,11990,12000,12000,12010,12010
     *,12010,12010,12010,12010,12010,12010,12010,12010,12010,12010,12010
     *,12010,12010,12010,12010,12010,12010,12010,12010,12010,12010,12010
     *,12010,12010,12010,12020,12030,12040,12050,12000,10205),KEYORD
10205 CONTINUE
      N_SELECT=0
      ISTAT=T2_GET_ENV('TD_C_'//STRNG(1:NSTRNG),C_SELECT,N_SELECT)
      IF (ISTAT.and.N_SELECT.gt.0) THEN
      IF(INFO(6).lt.MAX_SUBST) THEN
      INFO(6)=INFO(6)+1
      IF (INFO(5) .eq. 1) INFO(6)=INFO(6)+MAX_SUBST/3
      IF (INFO(3) .lt. INFO(1)) THEN
C     C_SELECT(N_SELECT+1:LEN(C_SELECT))=CARD(INFO(3)+1:LEN(CARD))
C     INFO(1)=INFO(1)+N_SELECT-INFO(3)
      CALL SET_COMMAND_ARGS(C_SELECT,N_SELECT,
     *                      CARD(INFO(3)+1:INFO(1)),INFO(1))
      ELSE
      C_SELECT(N_SELECT+1:LEN(C_SELECT))=' '
      INFO(1)=N_SELECT
      ENDIF
      IF (INFO(1) .gt. LEN(CARD)) THEN
      CALL T2ERR(INFO,CARD,('*** ERROR *** Command truncated'),4)
      INFO(1)=LEN(CARD)
      ENDIF
      NSTJOU=0
      LSTJOU=0
      CARD=C_SELECT
      DO 12071 I=3,5
      INFO(I)=0
12071 CONTINUE
12072 CONTINUE
      INFO(8)=0
      GOTO 10030
      ELSE
      CALL T2ERR(INFO,CARD,'*** ERROR *** Too many command substitutions
     *:' //C_SELECT(:N_SELECT),4)
      ENDIF
      ENDIF
      CALL T2ERR(INFO,CARD,' ',5)
      IF (FLAGS(92))GOTO 10270
      GOTO 10202
C0201 CALL TOKEN(INFO,CARD,'ARROW,BOX:1,CIRCLE:3,ELLIPSE:3,DIAMOND:2,CAS
C    *E,CLEAR,ERASE,CONTOUR,CONVOLUTE,CREATE,DATA,DEFINE,DELETE,ADD:3,DI
C    *VIDE:2,MULTIPLY:1,SUBTRACT:4,END,EXIT,HALT,QUIT,STOP,ELSE,ENDIF,EN
C    *DFILE,BIN,FREQUENCY,FFT,FIT,FILL,FLUSH,JOIN,LIST,PLOT,HELP,SPAWN,H
C    *ISTOGRAM,BARGRAPH:1,IF:1,IFNOT,INTERPOLATE,MERGE,MONITOR,NEW:0,NEW
C    *FRAME:0,NEWPLOT:0,PAUSE,WAIT,PROJECT,READ,RESTORE,RETURN,ENDREPEAT
C    *,REPEAT,SAVE,SET,SHOW,SMOOTH,SORT,SWAP,TITLE:1,TEXT:2,X:2,DX:3,Y:4
C    *,DY:5,Z:6,DZ:7,NDX:8,NDY:9,NDZ:10,U:11,DU:12,NDU:13,V:14,DV:15,NDV
C    *:16,W:17,DW:18,NDW:19,THETA:102,DTHETA:103,RADIUS:104,DRADIUS:105,
C    *PHI:206,DPHI:207,NDTHETA:108,NDRADIUS:109,NDPHI:210,TRANSFORM,SYMB
C    *OL,TYPE,USER,;')
10201 TKSTR(:330)=         'ARROW,BOX:1,CIRCLE:3,ELLIPSE:3,DIAMOND:2,CAS
     *E,CLEAR,ERASE,CONTOUR,CONVOLUTE,CREATE,DATA,DEFINE,DELETE,ADD:3,DI
     *VIDE:2,MULTIPLY:1,SUBTRACT:4,END,EXIT,HALT,QUIT,STOP,ELSE,ENDIF,EN
     *DFILE,BIN,FREQUENCY,FFT,FIT,FILL,FLUSH,JOIN,LIST,PLOT,HELP,SPAWN,H
     *ISTOGRAM,BARGRAPH:1,IF:1,IFNOT,INTERPOLATE,MERGE,MONITOR,NEW:0,NEW
     *FRAME:0,NEWPLOT:0,PAUS'
      TKSTR(331:)=         'E,WAIT,PROJECT,READ,RESTORE,RETURN,ENDREPEAT
     *,REPEAT,SAVE,SET,SHOW,SMOOTH,SORT,SWAP,TITLE:1,TEXT:2,X:2,DX:3,Y:4
     *,DY:5,Z:6,DZ:7,NDX:8,NDY:9,NDZ:10,U:11,DU:12,NDU:13,V:14,DV:15,NDV
     *:16,W:17,DW:18,NDW:19,THETA:102,DTHETA:103,RADIUS:104,DRADIUS:105,
     *PHI:206,DPHI:207,NDTHETA:108,NDRADIUS:109,NDPHI:210,TRANSFORM,SYMB
     *OL,TYPE,USER,LEGEND:1,;'
      CALL TOKEN(INFO,CARD,TKSTR)
      GOTO (10230,10240,10220,10220,10210,10205,10205,10240,10205),INTER
     *P
10202 CONTINUE
      IF (.not.FLAGS(23).and..not.LTRAP.and.INFO(9).ne.1) THEN
      GOTO 12081
12085 CONTINUE
      CALL T2ERR(INFO,CARD,('*** WARNING *** Extraneous options on line'
     *),4)
      GOTO 12082
12090 CONTINUE
      CONTINUE
      GOTO 12082
12081 CALL TOKEN(INFO,CARD,';')
      GOTO (12090,12085,12085,12085,12085,12085,12085,12085,12085),INTER
     *P
12082 CONTINUE
      ENDIF
10130 CONTINUE
      CALL T2JOUR
10270 CONTINUE
      NSTJOU=0
      LSTJOU=0
      IF (LSYERR) THEN
      CALL T2TERR
      CALL T2ERR(INFO,CARD,' ',4)
      LSYERR=.false.
      ENDIF
      GOTO 10041
10042 CONTINUE
10050 CONTINUE
      IF (LEVREP.gt.0) THEN
      IF (LTRAP.or.LSYERR) THEN
      LEVREP=1
      REPCNT(LEVREP)=0
      ENDIF
      REPCNT(LEVREP)=REPCNT(LEVREP)-1
      IF (REPCNT(LEVREP).gt.0) THEN
      IREPCT(LEVREP)=IREPCT(LEVREP)+1
      DO 12101 I=3,10
      INFO(I)=0
12101 CONTINUE
12102 CONTINUE
      INFO(1)=REPSIZ(LEVREP)
      CARD=REPSTR(LEVREP)
      ELSE
      DO 12111 I=1,10
      INFO(I)=INFSAV(I,LEVREP)
12111 CONTINUE
12112 CONTINUE
      CARD=CARSAV(LEVREP)
      LEVREP=LEVREP-1
      ENDIF
      GOTO 10030
      ENDIF
      IF ((.NOT.FLAGS(28).AND.NPOINT.NE.0).and.FLAGS(97).and.STRIN.eq.' 
     *') THEN
      DO 12121 ISET=1,NDSETS
      CALL T2GDSET(ISET,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,'*
     *')
      IF (ISETD(1).eq.1) THEN
      CALL T2PLOT(DATBUF(I1),DATBUF(I2), DATBUF(I3),DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), DATBUF(I7),NP,NINCR0,0,0.0,HNONE,HNONE,HNONE,HNONE)
      ENDIF
12121 CONTINUE
12122 CONTINUE
      ENDIF
      IF (IARGUE.ne.1) CALL T2JOUR
      FLAGS(23)=FERSAV
      CALL TXVOID
      RETURN
      END
      SUBROUTINE T2_ERASE(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      LOGICAL LF1,LF2
      INTEGER I,J,K,IFT,IXYZ
      REAL XYZ(3,2),XYZ0(2),XYZ2(2),XY(2,4),t
      INTEGER MODTXT(2)
      DATA HNONE /-666.666/
      XY(1,1)=HNONE
      DO 12131 I=1,2
      MODTXT(I) = 0
      XYZ(1,I) = HNONE
      XYZ(2,I) = HNONE
      XYZ(3,I) = 0
12131 CONTINUE
12132 CONTINUE
      IFT=0
      IXYZ=0
      GOTO 12141
12150 CONTINUE
      IFT=MAX(1,IFT)
      IXYZ=IXYZ+1
      IF (IXYZ.le.3) THEN
      XYZ(IXYZ,IFT)=FLOTNG
      IF (IXYZ.eq.3) MODTXT(IFT)=1
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Extraneous number'),4)
      ENDIF
      GOTO 12141
12180 CONTINUE
      IFT=MAX(1,IFT)
      NSTJOU=LSTJOU
      CALL T2CURS(J,XYZ0,XYZ(1,IFT),XYZ2,LF1,LF2)
      IF (J.eq.ICHAR(' ')) THEN
      MODTXT(IFT)=0
      I=23
      IF (JOUFIL.ne.0.and. LSTJOU+I.le.LEN(STJOU)) THEN
      WRITE(STJOU(LSTJOU+1:LSTJOU+I), '(1p,2(A,G10.3))',ERR=12190)  ' ',
     *XYZ(1,IFT),',',XYZ(2,IFT)
      CALL T2SQEZ(STJOU(LSTJOU+2:LSTJOU+I),I)
      NSTJOU=NSTJOU+I+1
12190 CONTINUE
      ENDIF
      ENDIF
      GOTO 12141
12200 CONTINUE
      IFT = INTEG
      IXYZ= 0
      GOTO 12141
12210 CONTINUE
      MODTXT(MAX(1,IFT)) = INTEG
      IF (IFT.eq.0) THEN
      MODTXT(2)=INTEG
      IF(FLAGS(75)) THEN
      DO 12221 J=1,3
      T=XYZLIM(J,2)-XYZLIM(J,1)/1000
      DO 12231 I=1,2
      XYZ(J,I)=XYZLIM(J,I)+T
      T=-T
12231 CONTINUE
12232 CONTINUE
12221 CONTINUE
12222 CONTINUE
      ENDIF
      ENDIF
      GOTO 12141
12160 GOTO ( 12180,12200,12200,12210,12210,12145),KEYORD
12240 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      RETURN
12141 CALL TOKEN(INFOIN,CARDIN,'CURSOR,FROM:1,TO:2,DATA:1,TEXT,;')
      GOTO (12142,12160,12150,12150,12145,12145,12240,12160,12145),INTER
     *P
12145 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 12141
12142 CONTINUE
      IF (FLAGS(23) .or. LTRAP) RETURN
      IF (IXYZ+IFT+MODTXT(1).le.0) THEN
      CALL TXNEXT
      ELSE
      DO 12251 I=1,2
      DO 12261 J=1,2
      IF (XYZ(J,I).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Missing FROM or TO values
     *'),4)
      RETURN
      ENDIF
12261 CONTINUE
12262 CONTINUE
      IF (MODTXT(I).NE.0) THEN
      CALL T2XFRM(3,1,XYZ(1,I),NONLIN,XFRM13,2,XY(1,I+2))
      ELSE
      XY(1,I+2)=XYZ(1,I)
      XY(2,I+2)=XYZ(2,I)
      ENDIF
      CALL T2XFRM(2,2,XY(1,I+2),LINEAR,XFRM34,2,XY(1,I))
12251 CONTINUE
12252 CONTINUE
      CALL TXXERA(XY)
      ENDIF
      END
      SUBROUTINE TDUSER
      END
      SUBROUTINE T2TERR
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER IXYZS(6),IXYZC(6),I,J,K,L,IC,IP,IM,IMAX,ISET
      INTEGER NINCR0,NINCR1,NINCR2,M1,M2,M3,T2BTRIM
      CHARACTER*8 CXYZ(12),CORD
      DATA CXYZ/  ' X=',' Dx=', ' Y=',' Dy=', ' Z=',' Dz=', ' Theta=',' 
     *Dtheta=', ' Radius=',' Drad=', ' Phi=',' Dphi='/
      DATA HNONE /-666.666/
      DO 12271 I=1,6
      IXYZC(I)=I
12271 CONTINUE
12272 CONTINUE
      IF (FLAGS(27).or.FLAGS(91)) THEN
      IMAX=4
      IF (FLAGS(91)) IMAX=6
      DO 12281 I=1,6
      IXYZC(I)=I+6
12281 CONTINUE
12282 CONTINUE
      ENDIF
      DO 12291 I=1,3
      IP=ICPOIN(I)
      IF (IP.ne.0) THEN
      L=IVRPTR(14)
      DO 12301 ISET=1,NDSETS
      IF (DATBUF(L).lt.1.0E35) THEN
      WRITE(6,*)'*** Error in data set structure'
      RETURN
      ENDIF
      IF(IP .ge. L .and. IP .lt. L+DATBUF(L+2))GOTO 12302
      L=L+NINT(DATBUF(L+2))
12301 CONTINUE
12302 CONTINUE
      IM=NINT(DATBUF(L+1))+L
      WRITE(OUTSTR,'(A,I10)')' Set=',ISET
      IF (DATBUF(L) .eq. 2.0E35) THEN
      IM=IM-3
      NINCR0=NINT(DATBUF(IM))
      IM=IM+1
      NINCR1=NINT(DATBUF(IM))*NINCR0
      IM=IM+1
      NINCR2=NINT(DATBUF(IM))
      IM=IM+1
      K=NINT(DATBUF(IM))
      M1=MOD(K,4)
      M2=K/4
      M3=6-MESH1-MESH2
      DO 12311 K=1,6
      IXYZS(K)=0
12311 CONTINUE
12312 CONTINUE
      IP=MAX(0,IP-IM)
      IP=NINCR0*(IP/NINCR0)
      IF (IP.ge.NINCR1*NINCR2) IP=0
      IXYZS(2*M1-1)=MOD(IP,NINCR1)
      IXYZS(2*M2-1)=NINCR1*(IP/NINCR1)
      IF (IXYZS(2*M1-1).ne.0 .and. IXYZS(2*M2-1).ne.0) IXYZS(2*M3-1)=IP
      IF (NINCR0 .eq. 2) THEN
      DO 12321 J=1,6,2
      IXYZS(J+1)=IXYZS(J)+1
12321 CONTINUE
12322 CONTINUE
      ENDIF
      DO 12331 J=1,6
      IF (IXYZS(J).gt.0)IXYZS(J)=IXYZS(J)+IM
12331 CONTINUE
12332 CONTINUE
      K=T2BTRIM(OUTSTR)+1
      OUTSTR(K:)=' Mesh'
      K=T2BTRIM(OUTSTR)+1
      L=MOD(IP,NINCR1)/NINCR0
      IF (L .gt. 0) WRITE(OUTSTR(K:),'(A,1P,I10)')' Column=',L
      K=T2BTRIM(OUTSTR)+1
      L=IP/NINCR1
      IF (L .gt. 0) WRITE(OUTSTR(K:),'(A,1P,I10)')' Row=',L
      ELSE
      IC=MOD(IP-IM,NINCR)+1
      IC=IVARBL(IC)
      CALL T2GVNM(IC,CORD)
      IP=MAX(IP-IM,0)/NINCR
      K=T2BTRIM(OUTSTR)+1
      WRITE(OUTSTR(K:),'(A,I10,A,1P,G15.3)')' Point=',IP+1, CORD,DATBUF(
     *ICPOIN(I))
      DO 12341 K=1,6
      L=IVRPTR(K+1)
      IF (DATBUF(L) .ne. HNONE) THEN
      IXYZS(K)=L+IP*NINCR
      ELSE
      IXYZS(K)=0
      ENDIF
12341 CONTINUE
12342 CONTINUE
      ENDIF
      DO 12351 J=1,6
      CALL T2SQEZ(OUTSTR,K)
      L=IXYZS(J)
      IF (L.gt.0) THEN
      K=T2BTRIM(OUTSTR)+1
      WRITE (OUTSTR(K:),'(A,1P,G15.3)')CXYZ(IXYZC(J)),DATBUF(L)
      ENDIF
12351 CONTINUE
12352 CONTINUE
      CALL T2SQEZ(OUTSTR,K)
      CALL T2ERR(0,' ',OUTSTR(:K),3)
      ENDIF
12291 CONTINUE
12292 CONTINUE
      END
      LOGICAL FUNCTION T2_MATCHC(STR1,STR2,L)
      IMPLICIT NONE
      CHARACTER*(*) STR1,STR2
      CHARACTER*512 TSTR1,TSTR2
      LOGICAL L
      LOGICAL MATCHC
      INTEGER I1,I2
      T2_MATCHC=.true.
      IF (STR2 .eq. '*') RETURN
      IF (L) THEN
      T2_MATCHC=MATCHC(STR1,STR2)
      ELSE
      TSTR1=STR1
      TSTR2=STR2
      I1=MIN(LEN(STR1),LEN(TSTR1))
      I2=MIN(LEN(STR2),LEN(TSTR2))
      CALL T2DNCS(TSTR1(:I1))
      CALL T2DNCS(TSTR2(:I2))
      T2_MATCHC=MATCHC(TSTR1(:I1),TSTR2(:I2))
      ENDIF
      END
      SUBROUTINE T2PNTS(INFOIN,CARDIN,N1,N2)
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      INTEGER N1,N2
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL VAL1,VAL2,VAL3
      VAL3=NCCOL
      VAL1=1
      VAL2= 2 147 483 647
      CALL T2FRTO(INFOIN,CARDIN,VAL1,VAL2,VAL3)
      IF (VAL1 .ge.  2 147 483 647/2)THEN
      N1= 2 147 483 647/2
      ELSE
      N1=NINT(AMIN1(VAL1,VAL2))
      ENDIF
      IF (VAL2 .ge.  2 147 483 647/2)THEN
      N2= 2 147 483 647/2
      ELSE
      N2=NINT(AMAX1(VAL1,VAL2))
      ENDIF
      NCCOL=N1
      END
      SUBROUTINE T2ROWS(INFOIN,CARDIN,N1,N2)
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      INTEGER N1,N2
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL VAL1,VAL2,VAL3
      VAL3=NCROW
      VAL1=1
      VAL2= 2 147 483 647
      CALL T2FRTO(INFOIN,CARDIN,VAL1,VAL2,VAL3)
      IF (VAL1 .ge.  2 147 483 647/2)THEN
      N1= 2 147 483 647/2
      ELSE
      N1=NINT(AMIN1(VAL1,VAL2))
      ENDIF
      IF (VAL2 .ge.  2 147 483 647/2)THEN
      N2= 2 147 483 647/2
      ELSE
      N2=NINT(AMAX1(VAL1,VAL2))
      ENDIF
      NCCOL=N1
      END
      SUBROUTINE T2FRTO(INFOIN,CARDIN,VAL1,VAL2,VAL3)
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      REAL T
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INDEX=0
      TEMP1=VAL1
      TEMP2=VAL2
      TEMP3=VAL3
      GOTO 12361
12390 CONTINUE
      INDEX=1
      GOTO 12361
12400 CONTINUE
      INDEX=2
      GOTO 12361
12410 CONTINUE
      T=VAL1
      GOTO 12420
12430 CONTINUE
      T=VAL2
      GOTO 12420
12440 CONTINUE
      T=TEMP3+FLOTNG
      GOTO 12420
12370 GOTO ( 12390,12400,12410,12430,12440,12440,12440,12365),KEYORD
12450 CONTINUE
      T=FLOTNG
12420 CONTINUE
      IF (T.ge.VAL1 .and. T.le.VAL2) THEN
      TEMP3=T
      IF (INDEX.eq.0) THEN
      TEMP1=T
      TEMP2=T
      INDEX=1
      ENDIF
      IF (INDEX.eq.1) TEMP1=T
      IF (INDEX.eq.2) TEMP2=T
      IF (INDEX.ge.3) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Extra numbers'),4)
      ENDIF
      ELSE
      WRITE(OUTSTR,12460)VAL1,VAL2
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,4)
12460 FORMAT ('*** ERROR *** Number out of range (',1p,G10.3,'-',G10.3,'
     *)')
      ENDIF
      INDEX=INDEX+1
      GOTO 12361
12365 CONTINUE
      INFOIN(9)=-1
      GOTO 12362
12361 CALL TOKEN(INFOIN,CARDIN,'FROM,TO,FIRST,LAST,CURRENT:0,PREVIOUS:-1
     *,NEXT:1,;')
      GOTO (12362,12370,12450,12450,12365,12365,12365,12370,12365),INTER
     *P
12362 CONTINUE
      VAL1=TEMP1
      VAL2=TEMP2
      END
      SUBROUTINE T2_GET_SET_NAME(IBGDAT,STRING)
      IMPLICIT NONE
      INTEGER IBGDAT
      CHARACTER*(*) STRING
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER I,J,IMAX,IMIN
      STRING=' '
      IF ( IBGDAT .le. 1 .or. IBGDAT .ge. IVRPTR(12)) RETURN
      IF (DATBUF(IBGDAT).lt.1.0E35) RETURN
      I=IBGDAT+3
      IMIN=I+1
      IMAX=NINT(DATBUF(I))
      IMAX=MIN(IMAX,100)
      IMAX=MIN(IMAX,LEN(STRING)/4)
      IMAX=IMAX+I
      WRITE(STRING,12470)(DATBUF(I),I=IMIN,IMAX)
12470 FORMAT(100A4)
      END
      SUBROUTINE T2GDSET(ISET,N1,N2,N3,N4,NVEC,TLIM,STRING)
      IMPLICIT NONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      LOGICAL T2_MATCHC
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      CHARACTER*(*) STRING
      INTEGER N1,N2,N3,N4,I,J,K,L,ISET,NVEC(NSETD),JLIM,IMIN,IMAX,JMIN,T
     *2BTRIM
      REAL TLIM(3,2),TEMP,DVEC(19)
      INTEGER NN1,NN2,NN3,NN4,NN5,NN6,NN7,NN8,IPNT
      DATA HNONE /-666.666/
      DO 12481 I=1,8
      IVRPTR(I)=1
12481 CONTINUE
12482 CONTINUE
      DO 12491 I=1,19
      NVEC(I+NSDATA-1)=1
12491 CONTINUE
12492 CONTINUE
      IVRPTR(15)=1
      I=IVRPTR(14)
      IF (ISET.gt.NDSETS.or.ISET.le.0) THEN
      DO 12501 I=1,4
      NVEC(I)=0
12501 CONTINUE
12502 CONTINUE
      NVEC(NPDATA)=N1-1
      NVEC(NLDATA)=0
      NVEC(NMDATA)=1
      RETURN
      ENDIF
      DO 12511 J=1,ISET
      L=I
      IF (DATBUF(I).lt.1.0E35) THEN
      CALL T2ERR(0,' ','*** ERROR *** Error in data set structure',3)
      NDSETS=J-1
      IVRPTR(12)=I
      NVEC(NPDATA)=N1-1
      RETURN
      ELSE
      I=I+NINT(DATBUF(I+2))
      ENDIF
12511 CONTINUE
12512 CONTINUE
      IF (STRING .ne. '*') THEN
      CALL T2_GET_SET_NAME(L,OUTSTR)
      IF (.not. T2_MATCHC(OUTSTR(:T2BTRIM(OUTSTR)),STRING,FLAGS(130))) T
     *HEN
      NVEC(NPDATA)=N1-1
      RETURN
      ENDIF
      ENDIF
      IBLKTP=1
      IF (DATBUF(L) .eq. 2.0E35) IBLKTP=2
      NVEC(NBTYPE)=IBLKTP
      NVEC(NBGDAT)=L
      IVRPTR(15)=L
      NVEC(NENDAT)=I-1
      IVRPTR(13)=I-1
      L=L+DATBUF(L+1)
      IF (IBLKTP.eq.2) THEN
      IDIMNS=3
      L=L-3
      NVEC(NINDAT)=NINT(DATBUF(L))
      NMESH0=NVEC(NINDAT)
      L=L+1
      NVEC(NINDAT+1)=NINT(DATBUF(L))
      NMESH1=NVEC(NINDAT+1)
      L=L+1
      NVEC(NINDAT+2)=NINT(DATBUF(L))
      NMESH2=NVEC(NINDAT+2)
      L=L+1
      NVEC(NMDATA)=L
      IVRPTR(8)=NVEC(NMDATA)
      I=NINT(DATBUF(NVEC(NMDATA)))
      MESH1=MOD(I,4)
      MESH2=I/4
      MESH3=6-MESH1-MESH2
      NVEC(NSDATA)=1
      IF (N1 .ge.  2 147 483 647/2) THEN
      NN1=NMESH1-1
      ELSE
      NN1=N1
      ENDIF
      IF (N3 .ge.  2 147 483 647/2) THEN
      NN3=NMESH2-1
      ELSE
      NN3=N3
      ENDIF
      NVEC(NXDATA) =NVEC(NMDATA)+NMESH0*NN1
      NVEC(NYDATA) =NVEC(NMDATA)+NMESH0*NMESH1*NN3
      NVEC(NZDATA) =NVEC(NYDATA)+NMESH0*NN1
      IVRPTR(2)=NVEC(NMDATA)+NMESH0
      IVRPTR(4)=NVEC(NMDATA)+NMESH0*NMESH1
      IVRPTR(6)=IVRPTR(4)+NMESH0
      IF (N2.ge.0) THEN
      NVEC(NPDATA)=MIN(N2,NMESH1-1)-NN1
      ELSE
      NVEC(NPDATA)=NMESH1+N2-NN1
      ENDIF
      IF (N4.ge.0) THEN
      NVEC(NLDATA)=MIN(N4,NMESH2-1)-NN3
      ELSE
      NVEC(NLDATA)=NMESH2-1-NN3
      ENDIF
      IF (TLIM(1,1).ne.HNONE) THEN
      IMIN=NN1
      NN1=NMESH1
      NN2=0
      IPNT=IVRPTR(8)
      DO 12521 I=IMIN,NVEC(NPDATA)+IMIN
      TEMP=DATBUF(IPNT+I*NMESH0)
      IF (TEMP.ge.TLIM(MESH1,1).and. TEMP.le.TLIM(MESH1,2)) THEN
      NN1=MIN(I,NN1)
      NN2=MAX(I,NN2)
      ENDIF
12521 CONTINUE
12522 CONTINUE
      IMIN=NN3
      NN3=NMESH2
      NN4=0
      DO 12531 I=IMIN,NVEC(NLDATA)+IMIN
      TEMP=DATBUF(IPNT+I*NMESH0*NMESH1)
      IF (TEMP.ge.TLIM(MESH2,1).and. TEMP.le.TLIM(MESH2,2)) THEN
      NN3=MIN(I,NN3)
      NN4=MAX(I,NN4)
      ENDIF
12531 CONTINUE
12532 CONTINUE
      NN7=0
      NN8=0
      NN5=NMESH1
      NN6=NMESH2
      DO 12541 I=NN3,NN4
      DO 12551 J=NN1,NN2
      TEMP=DATBUF(IPNT+(I*NMESH1+J)*NMESH0)
      IF (TEMP.ge.TLIM(MESH3,1) .and. TEMP.le.TLIM(MESH3,2)) THEN
      NN7=MAX(NN7,J)
      NN8=MAX(NN8,I)
      NN5=MIN(NN5,J)
      NN6=MIN(NN6,I)
      ENDIF
12551 CONTINUE
12552 CONTINUE
12541 CONTINUE
12542 CONTINUE
      NVEC(NXDATA) =NVEC(NMDATA)+NMESH0*NN5
      NVEC(NPDATA)=NN7-NN5
      NVEC(NYDATA) =NVEC(NMDATA)+NMESH0*NMESH1*NN6
      NVEC(NLDATA)=NN8-NN6
      NVEC(NZDATA)=NVEC(NYDATA)+NMESH0*NN5
      ENDIF
      IF (NMESH0 .eq. 2) THEN
      DO 12561 I=0,2
      NVEC(NCSIZE*I+NDXDATA)=NVEC(NCSIZE*I+NXDATA)+1
      IVRPTR(2*I+3)=IVRPTR(2*I+2)+1
12561 CONTINUE
12562 CONTINUE
      ENDIF
      ELSE
      DO 12571 J=1,3
      MESHN(J)=J
12571 CONTINUE
12572 CONTINUE
      IDIMNS=NDIMNS(3)
      NMESH0=NINCR
      NMESH1=0
      NMESH2=0
      NVEC(NINDAT)=NINCR
      NVEC(NINDAT+1)=NINCR
      NVEC(NINDAT+2)=0
      IF (N1 .ge.  2 147 483 647/2) THEN
      NN1=(I-L)/NINCR
      ELSE
      NN1=N1
      ENDIF
      IF (N2.ge.0) THEN
      NVEC(NPDATA)=MIN(N2,(I-L)/NINCR)-NN1
      ELSE
      NVEC(NPDATA)=(I-L)/NINCR+N2-NN1
      ENDIF

      NN2 = NVEC(NPDATA) + NN1

      NVEC(NLDATA)=0
      NVEC(NMDATA)=L
      IVRPTR(8)=NVEC(NMDATA)
      NN3=0
      J=MAX(NN1-1,0)*NINCR
      DO 12581 I=1,NINCR
      K=I_VORDER(IVARBL(I),2)
      IF(K .lt. 8) IVRPTR(K)=L+I-1
12581 CONTINUE
12582 CONTINUE
      IF (TLIM(1,1).ne.HNONE) THEN
      IMAX=NVEC(NPDATA)+NN1
      IMIN=MAX(1,NN1)
      NN1=NN2+1
      NN2=-1
      IPNT=L+(IMIN-1)*NINCR
      JLIM=2
      IF (IVRPTR(2).ne.1) JLIM=3
      DO 12591 I=IMIN,IMAX
      DO 12601 J=1,NINCR
      DVEC(IVARBL(J))=DATBUF(IPNT)
      IPNT=IPNT+1
12601 CONTINUE
12602 CONTINUE
      DO 12611 K=1,JLIM
      TEMP=DVEC(NCSIZE*(K-1)+N_XDATA)
      IF (TEMP.lt.TLIM(K,1) .or. TEMP.gt.TLIM(K,2)) GOTO 12620
12611 CONTINUE
12612 CONTINUE
      NN1=MIN(NN1,I)
      NN2=I
12620 CONTINUE
12591 CONTINUE
12592 CONTINUE
      J=(NN1-1)*NINCR
      NVEC(NPDATA)=NN2-NN1
      ENDIF
      DO 12631 I=1,NINCR
      NVEC(NSDATA-1+IVARBL(I))=L+I-1+J
12631 CONTINUE
12632 CONTINUE
      NVEC(NMDATA)=L+J
      ENDIF
      IF(.not.FLAGS(75)) THEN
      FLAGS(56)=NDIMNS(1).eq.3 .or.  (IDIMNS.eq.3 .and. NDIMNS(1).ne.2)
      ENDIF
      NVEC(NPDATA)=NVEC(NPDATA)+N1
      NVEC(NLDATA)=NVEC(NLDATA)+N3
      END
      SUBROUTINE T2NSET(INFOIN,CARDIN,NS1,NS2)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      INTEGER N1,N2,NS1,NS2,I,J
      REAL VAL1,VAL2,VAL3
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      NS1= 1
      NS2=0
      VAL3=NCSETS
      VAL1=-NDSETS
      VAL2=NDSETS
      CALL T2FRTO(INFOIN,CARDIN,VAL1,VAL2,VAL3)
      IF (FLAGS(23)) RETURN
      If (VAL1.le.0) VAL1=VAL1+NDSETS
      If (VAL2.le.0) VAL2=VAL2+NDSETS
      NS1=MAX(1,NINT(AMIN1(VAL1,VAL2)))
      NS2=MAX(1,NINT(AMAX1(VAL1,VAL2)))
      NCSETS=NS1
      END
      SUBROUTINE T2_READ_POINTS(INFOIN,CARDIN)
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      REAL HNONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL LMAXP,LSYM,LNEW
      REAL TXSYM
      EXTERNAL TXSYM
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      LOGICAL T2_VIRT,DMMY
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER IBUFV(19)
      DATA HNONE /-666.666/
      CALL T2GDSET(NDSETS,1,1,1,1,ISETD,HNONE,'*')
      IF ((IBTYPE.EQ.2.and. revlev.lt.3) .or.FLAGS(28)) CALL T2PNTR
      IPRNT=1
      IF (FLAGS(57)) IPRNT=MXECHO+1
      MX=NFIELD+2
      DO 12641 IFLD=1,MX
      BUFFER(IFLD)=0.
      IBUFFR(IFLD)=0
12641 CONTINUE
12642 CONTINUE
      DO 12651 IPOS=1,NINCR
      IVAL=IVARBL(IPOS)
      IBUFV(IPOS)=IFIELD(IVAL)
12651 CONTINUE
12652 CONTINUE
      IV=IFIELD(1)
      IBUFFR(IV+2)=-1
      BUFFER(IV+2)=SYMBOL
      DO 12661 I=2,15
      IV=IFIELD(I)
      IBUFFR(IV+2)=1
12661 CONTINUE
12662 CONTINUE
      LMAXP = .TRUE.
      LNEW=.false.
      CALL T2GDSET(NDSETS,1,1,1,1,ISETD,HNONE,'*')
      IF (ISETD(1).eq.2 .or. IVRPTR(12).eq.IVRPTR(14)) CALL T2NEWS(0,' '
     *)
      CALL T2GDSET(NDSETS,1,1,1,1,ISETD,HNONE,'*')
      IVRPTR(9)=IBGDAT+2
12671 CONTINUE
      IF (IPRNT.LE.MXECHO.and.OUTFIL.gt.0) THEN
      IF (OUTFIL.gt.0) CALL T2ERR(INFOIN,CARDIN,' ',6)
      IF (IPRNT.EQ.MXECHO) THEN
      IF(OUTFIL.gt.0) THEN
      WRITE(OUTFIL,12680)MXECHO
      IF(OUTFIL.le.NINMAX)NINP(OUTFIL)=NINP(OUTFIL)+1
      ENDIF
12680 FORMAT ('  Printing suppressed after',i6,' points.', '  (plot cont
     *inues.)')
      ENDIF
      IPRNT=IPRNT+1
      ENDIF
      LSYM=.false.
12690 CONTINUE
      DO 12691 IFLD=1,NFIELD
      IF (IBUFFR(IFLD+2)) 12700,12710,12720
12720 CONTINUE
      GOTO 12731
12740 CONTINUE
      GOTO 12692
12750 CONTINUE
      BUFFER(IFLD+2)=FLOTNG
      GOTO 12732
12760 CONTINUE
      GOTO 12770
12735 CONTINUE
      IF (IFLD.EQ.1) GOTO 12780
12770 CONTINUE
      IF (LSYM) THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 12790
      ENDIF
      INFOIN(9)=-1
      GOTO 12732
12731 CALL TOKEN(INFOIN,CARDIN,';')
      GOTO (12740,12735,12750,12750,12760,12735,12735,12735,12735),INTER
     *P
12732 CONTINUE
      GOTO 12691
12700 CONTINUE
      GOTO 12801
12810 CONTINUE
      GOTO 12692
12805 CONTINUE
      IF (LSYM .or. NSTRNG.gt.4) THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 12790
      ELSEIF (NSTRNG.gt.0) THEN
      BUFFER(IFLD+2)=TXSYM(STRNG(1:NSTRNG))
      ELSE
      BUFFER(IFLD+2)=NOSYMB
      ENDIF
      LSYM=.true.
      GOTO 12802
12801 CALL TOKEN(INFOIN,CARDIN,';')
      GOTO (12810,12805,12805,12805,12805,12805,12805,12805,12805),INTER
     *P
12802 CONTINUE
      GOTO 12691
12710 CONTINUE
      GOTO 12821
12830 CONTINUE
      GOTO 12692
12840 CONTINUE
      GOTO 12822
12825 CONTINUE
      IF (IFLD.EQ.1) GOTO 12780
      GOTO 12822
12821 CALL TOKEN(INFOIN,CARDIN,';')
      GOTO (12830,12825,12840,12840,12825,12825,12825,12825,12825),INTER
     *P
12822 CONTINUE
12691 CONTINUE
12692 CONTINUE
      IF (IFLD.EQ.1) GOTO 12790
      LNEW=.false.
C     IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) CALL T2_VIRT(500*NINCR)
C     IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) CALL T2_VIRT(100*NINCR)
C     IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) CALL T2_VIRT(512)
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) DMMY=T2_VIRT(500*NINCR)
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) DMMY=T2_VIRT(100*NINCR)
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) DMMY=T2_VIRT(512)
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) THEN
      IF (LMAXP) THEN
      LMAXP=.FALSE.
      WRITE(OUTSTR,12850)NPOINT
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,4)
12850 FORMAT ('*** WARNING *** Point buffer size (', i5,') reached. subs
     *equent points ignored.')
      ENDIF
      ELSE
      IFIRST=IVRPTR(12)-1
      DO 12861 IPOS=1,NINCR
      IFLD=IBUFV(IPOS)
      K=IPOS+IFIRST
      IVAL = IVARBL(IPOS)
      DATBUF(K)=BUFFER(IFLD+2)*FACTXY(IVAL)
      IF ( FLAGS(RELFLAG-1+IVAL) ) THEN
      IVAL=MOD(IVAL-N_XDATA,NCSIZE)
      DATBUF(K)=ABS(DATBUF(K-IVAL))*DATBUF(K)
      ENDIF
12861 CONTINUE
12862 CONTINUE
      DATDAT(1,1)=HNONE
      NPOINT=NPOINT+1
      ICPOIN(1)=IVRPTR(12)
      IVRPTR(12)=IVRPTR(12)+NINCR
      IVRPTR(13)=IVRPTR(13)+NINCR
      DATBUF(IVRPTR(9))=DATBUF(IVRPTR(9))+NINCR
      ENDIF
      CALL T2JOUR
      if (FLAGS(12)) GOTO 12671
      CALL TOKRED(INFOIN,CARDIN,LENCRD,INPFIL,INPFMT)
      LNEW=.true.
      IF ((INFOIN(1).LT.0)) GOTO 12780
      GOTO 12671
12672 CONTINUE
12780 CONTINUE
      IF (LNEW) THEN
      INFOIN(9)=1
      NSTJOU=0
      ELSE
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ENDIF
12790 CONTINUE
      END
      SUBROUTINE T2TTXT(INFOIN,CARDIN,ITMODE,TITLE1,CASE1)
      CHARACTER*(*) CARDIN
      INTEGER INFOIN(10)
      INTEGER ITMODE
      CHARACTER*(*) CASE1,TITLE1
      LOGICAL T2_GET_ENV, ISTAT 
      CHARACTER*512 CASE,TITLE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      CHARACTER*20 CVALUE
      REAL TCON(5),TANGDF(6),XY(2),XYZ(6),XYZ0(3),XYZ1(3),XYZ2(3), XYZWR
     *L(3,2),XYZLAB(3),ALONG(3),UPDIR(3)
      INTEGER IXYZFG(3),IAX1,IAX2,IAX3,IAX(4) 
      LOGICAL LFIT 
      CHARACTER*1 BLANK ,ESCAPE ,PLUS ,MINUS ,AMPRSN ,ZERO
      LOGICAL ERRSAV,TDGETV,LNEXT
      LOGICAL LDATA,LF1,LF2
      INTEGER JCHTR(6)
      INTEGER NCASE,NTITLE
      REAL RAD
      PARAMETER (RAD=3.14159265/180.)
      DATA HNONE /-666.666/
      DATA JCHTR/2,1,4,3,5,6/
      DATA TANGDF /90.,0.,-90.,0.,0.,0./
      DATA IAX/2,3,1,2/
      DATA BLANK /' '/  ,ESCAPE/'@'/  ,PLUS/'+'/  ,MINUS/'-'/  ,A
     *MPRSN/'&'/  ,ZERO/'0'/
      DATA LDATA/.false./
      ERRSAV=FLAGS(23)
      FLAGS(23)=.FALSE.
      IF (FLAGS(127)) CALL TXXMT
      CALL T2CWTS(TITEX,ITXSAV)
      ICOL=0
      INTEN=0
      LDATA=.FALSE.
      JCHAR = 6
      MAXTIT=LEN(TITLE)
      MAXCAS=LEN(CASE)
      NTITLE=0
      IF (ITMODE .eq. 3) THEN
      CASE=CASE1
      NCASE=MIN(MAXCAS,LEN(CASE1))
      CALL T2_PARSE_TITLE(TITLE1  ,TITLE,NTITLE ,CASE,NCASE)
      ELSE
      CASE=' '
      NCASE=0
      NTITLE=0
      ENDIF
      DO 12871 I=1,3
      IXYZFG(I)=0
12871 CONTINUE
12872 CONTINUE
      IPSET=0
      ICNTR=-1
      TITCON(5)=1.
      DO 12881 I=1,5
      TCON(I) = HNONE
12881 CONTINUE
12882 CONTINUE
      IF (.NOT.FLAGS(73)) CALL TXDEF1
      IDIGIT=ISIGFG
      IF (IDIGIT.eq.0) IDIGIT=4
      IHIDE=0
      LNEXT=.false.
      GOTO 12891
12900 CONTINUE
      IF (JCHAR.eq.6) JCHAR=5
      IPSET=IPSET+1
      IF (IPSET .eq. 1) THEN
      TITX = FLOTNG
      ELSEIF (IPSET .eq. 2) THEN
      TITY = FLOTNG
      ELSEIF (IPSET .eq. 3) THEN
      IF (FLAGS(56)) THEN
      DO 12911 I=1,3
      IXYZFG(I)=1
12911 CONTINUE
12912 CONTINUE
      ENDIF
      TITZ = FLOTNG
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Too many coordinates'),4)
     *
      ENDIF
      GOTO 12891
12920 CONTINUE
12930 CONTINUE
      IF (NSTRNG.gt.0) THEN
      CALL T2_PARSE_TITLE(STRNG(1:NSTRNG)  ,TITLE,NTITLE ,CASE,NCASE)
      ENDIF
      GOTO 12891
12960 CONTINUE
      CALL DATE(STRNG)
      CALL TDTIME(STRNG(11:20))
      CALL T2SQEZ(STRNG(1:20),NSTRNG)
      NSTRNG=MIN(MAXTIT-NTITLE,NSTRNG)
      GOTO 12930
12970 CONTINUE
      NSTJOU=LSTJOU
      CALL T2CURS(J,XYZ0,XYZ1,XYZ2,LF1,LF2)
      IF (J.eq.ICHAR(' ')) THEN
      I=23
      IF (JOUFIL.ne.0.and. LSTJOU+I.le.LEN(STJOU)) THEN
      WRITE(STJOU(LSTJOU+1:LSTJOU+I),'(1p,2(A,G10.3))'  ,ERR=12980)  ' '
     *,XYZ1(1),',',XYZ1(2)
      CALL T2SQEZ(STJOU(LSTJOU+2:LSTJOU+I),I)
      NSTJOU=NSTJOU+I+1
12980 CONTINUE
      ENDIF
      IF (JCHAR.eq.6) JCHAR=5
      IPSET=3
      TITX = XYZ1(1)
      TITY = XYZ1(2)
      ENDIF
      GOTO 12891
12990 CONTINUE
      JCHAR=INTEG
      IF (.NOT.FLAGS(74)) THEN
      CALL TXDEFW
      IF (.NOT. FLAGS(56)) FLAGS(74)=.FALSE.
      ENDIF
      IF (FLAGS(56)) THEN
      LDATA=.TRUE.
      DO 13001 I=1,3
      IXYZFG(I)=1
13001 CONTINUE
13002 CONTINUE
      ELSE
      IF (ICNTR.eq.-1) ICNTR = 1
      DO 13011 I=1,3
      IXYZFG(I)=0
13011 CONTINUE
13012 CONTINUE
      ENDIF
      GOTO 12891
13020 CONTINUE
      INTEN=INTEG
      GOTO 12891
13030 CONTINUE
      ICOL=INTEG
      GOTO 12891
13040 CONTINUE
      JCHAR=INTEG
      IF (ICNTR.eq.-1) ICNTR = 1
      IF (.NOT.FLAGS(74)) THEN
      CALL TXDEFW
      FLAGS(74)=.FALSE.
      ENDIF
      DO 13051 I=1,3
      IXYZFG(I)=0
13051 CONTINUE
13052 CONTINUE
      GOTO 12891
13060 CONTINUE
      IF (NSTRNG.gt.0) THEN
      IF (NSTRNG+NCASE.gt.MAXCAS) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** String too long'),4)
      NSTRNG=MAXCAS
      ENDIF
      CALL T2UPCS(STRNG(1:NSTRNG))
      CASE(NCASE+1:LEN(CASE))=STRNG(1:NSTRNG)
      NCASE=NTITLE
      ENDIF
      GOTO 12891
13070 CONTINUE
      LNEXT=.true.
      GOTO 12891
13080 CONTINUE
      IHIDE=0
      IF (LTOKEN) IHIDE=INTEG
      GOTO 12891
13090 CONTINUE
      IDIGIT=INTEG
      GOTO 12891
13100 CONTINUE
      DO 13111 I=1,3
      IXYZFG(I)=INTEG
13111 CONTINUE
13112 CONTINUE
      GOTO 12891
13120 CONTINUE
      IXYZFG(INTEG)=1
      GOTO 12891
13130 CONTINUE
      ICNTR=INTEG
      ITCNTR=INTEG
      GOTO 12891
13140 CONTINUE
      I=INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      IF (I.eq.1) FLOTNG=FLOTNG/REDUCE(2)
      TCON(I)=FLOTNG
      ENDIF
      GOTO 12891
12940 GOTO ( 12960,12970,12990,12990,12990,13020,13020,13030,13030,13030
     *,13030,13030,13030,13030,13040,13040,13040,13040,13040,13040,13060
     *,13070,13080,13090,13100,13100,13120,13120,13120,13130,13130,13130
     *,13140,13140,13140,13140,13140,13030,12895),KEYORD
12895 CONTINUE
      IF (STRNG(1:2).ne.'T_') THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 13160
      ENDIF
      CVALUE=STRNG(1:NSTRNG)
      ISTRNG=NSTRNG
      CVALUE(1:1)='V'
      IF (TDGETV(CVALUE(1:NSTRNG),VALUE) ) THEN
      J=MIN(15,MAXTIT-NTITLE)
      CALL T2TLAB(9,VALUE,SCLPRM,IDIGIT,1,TITLE(NTITLE+1:NTITLE+J),J, CA
     *SE(NTITLE+1:NTITLE+J),K,IFIR)
      NTITLE=NTITLE+J
      NCASE=NTITLE
      ELSE
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 13160
      ENDIF
      GOTO 12891
12891 CALL TOKEN(INFOIN,CARDIN,'TIME,CURSOR,X:1,Y:2,Z:3,INTENSITY:1:9:2,
     *WIDTH:1:9:2,WHITE:1,RED:2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7
     *,BOTTOM:1,LEFT:2,G:3,GENERAL:3,TOP:3,RIGHT:4,CASE:S,NEXT,HIDE:4:Y,
     *DIGITS:1:7:4,TEXT:0,DATA:1,XDATA:1,YDATA:2,ZDATA:3,LJUSTIFY:0,CENT
     *ER:1,RJUSTIFY:2,SIZE:1,ANGLE:2,SPACES:3,INDEX:4,LINES:5,BLACK:8,;'
     *)
      GOTO (12892,12940,12900,12900,12920,12895,12895,12940,12895),INTER
     *P
12892 CONTINUE
      IF (LTRAP.or.FLAGS(23)) GOTO 13160
      IF (LNEXT .and. JCHAR .lt. 6) TCON(5)=N_LINES(JCHAR)
      N_LINES(JCHAR)=N_LINES(JCHAR)-1
      IF (ICOL.gt.0) LINCOL=ICOL
      IF (INTEN .gt. 0) LINWID=INTEN
      CALL TXSDEF
      JCH=JCHTR(JCHAR)
      ICNTR=MAX(ICNTR,0)
      IF (JCHAR.eq.6) THEN
      ICNTR=ITCNTR
      LDATA=LTDATA
      DO 13171 I=1,3
      IXYZFG(I)=ITITDT(I)
13171 CONTINUE
13172 CONTINUE
      ELSE
      LTDATA=LDATA
      ITCNTR=ICNTR
      TITCON(2) = TANGDF(JCH)
      TITCON(1) = TITSIZ
      IF (JCH.le.4) TITCON(1) = TITFAC(JCH)*TITSIZ
      TITCON(4) = TITINX
      DO 13181 I=1,3
      ITITDT(I)=IXYZFG(I)
13181 CONTINUE
13182 CONTINUE
      ENDIF
      LFIT=JCHAR.le.4
      COFF=(1-ICNTR)*HSPACE/2
      FACR=FLOAT(ICNTR)/2
      FACL=1-FACR
      DO 13191 I=1,5
      IF (TCON(I).NE.HNONE) THEN
      TITCON(I)=TCON(I)
      IF (I.lt.4) LFIT=.false.
      ENDIF
13191 CONTINUE
13192 CONTINUE
      HSPACE = 0.1*REDUCE(2)*ABS(TITCON(1))
      VSPACE = TITCON(4)*HSPACE
      IF (LTDATA) THEN
      IF (.NOT.FLAGS(75)) CALL TXDEF2
      IF (JCHAR.ge.1 .and. JCHAR.le.3) THEN
      DO 13201 I=1,3
      IF (LSCREV(I)) THEN
      XYZ(I)=XYZLIM(I,2)
      XYZ(I+3)=XYZLIM(I,1)
      ELSE
      XYZ(I)=XYZLIM(I,1)
      XYZ(I+3)=XYZLIM(I,2)
      ENDIF
      IF (FLAGS(82).and.I.ne.JCHAR)XYZ(I)=ORAXES(I)
13201 CONTINUE
13202 CONTINUE
      IAX1=JCHAR
      IF (ABS(AXANG(IAX1)) .le. 360.) THEN
      IAX2=IAX(IAX1)
      IAX3=IAX(IAX1+1)
      COSTX=COS(AXANG(IAX1)*RAD)
      SINTX=SIN(AXANG(IAX1)*RAD)
      ELSE
      COSTX=1.0
      SINTX=0.0
      CALL T2XFRM(3,2,XYZ,NONLIN,XFRM12,3,XYZWRL)
      CALL T2AXST(XYZWRL,IAX1,IAX2,IAX3,COSTX)
      ENDIF
      XYZ(IAX1)=FACL*XYZ(IAX1)+FACR*XYZ(IAX1+3)
      CALL T2XFRM(3,1,XYZ,NONLIN,XFRM12,3,XYZWRL)
      XYZWRL(IAX2,1)=XYZWRL(IAX2,1)  -COSTX*(TIKFAC*ABS(TIKSIZ(1))+.2*AB
     *S(LBLSIZ)+0.7*VSPACE)
      XYZWRL(IAX3,1)=XYZWRL(IAX3,1)  -SINTX*(TIKFAC*ABS(TIKSIZ(1))+.2*AB
     *S(LBLSIZ)+0.7*VSPACE)
      ELSE
      IF (IAX1.eq.0) THEN
      IAX1=1
      IAX2=1
      IAX3=3
      ENDIF
      ENDIF
      IF (IPSET.ne.0) THEN
      XYZ(1)=TITX
      IF (IPSET.ge.2)XYZ(2)=TITY
      IF (IPSET.ge.3)XYZ(3)=TITZ
      CALL T2XFRM(3,1,XYZ,NONLIN,XFRM12,3,XYZWRL)
      ENDIF
      COST=COSTX*VSPACE
      SINT=SINTX*VSPACE
      IF (JCHAR.eq.6) THEN
      XYZWRL(IAX2,1)=TITX1-COST/2
      XYZWRL(IAX3,1)=TITY1-SINT/2
      XYZWRL(IAX1,1)=TITZ
      ENDIF
      XYZWRL(IAX2,1)=XYZWRL(IAX2,1)-COST*(TITCON(5)-1)
      XYZWRL(IAX3,1)=XYZWRL(IAX3,1)-SINT*(TITCON(5)-1)
      XYZLAB(IAX2)=XYZWRL(IAX2,1)
      XYZLAB(IAX3)=XYZWRL(IAX3,1)
      XYZLAB(IAX1)=XYZWRL(IAX1,1)
      DO 13211 I=1,3
      ALONG(I)=0.
      UPDIR(I)=0.
13211 CONTINUE
13212 CONTINUE
      ALONG(IAX1)=ABS(TITCON(1))
      UPDIR(IAX2)=1.*ABS(COST)
      UPDIR(IAX3)=1.*ABS(SINT)
      ELSE
      IF (IPSET.ne.0) XYZ(1)=TITX
      IF (IPSET.ge.2) XYZ(2)=TITY
      IF (JCH.le.4) THEN
      TITOFF = (TITCON(5)-1.5)*VSPACE
      TEMP = ABS(TITLOC(JCH)) + TITOFF
      ENDIF
13220 GOTO (13230,13240,13250,13260,13270,13280),JCHAR
13230 CONTINUE
      TITY = TEMP
      TITX = FACL*WINDOW(1)+FACR*WINDOW(3)+COFF
      TITMAX=WINDOW(3)-WINDOW(1)
      GOTO 13222
13240 CONTINUE
      TITX = ABS(TITLOC(JCH)) - TITOFF
      TITY = FACL*WINDOW(2)+FACR*WINDOW(4)+COFF
      TITMAX=WINDOW(4)-WINDOW(2)
      GOTO 13222
13250 CONTINUE
      TITX = FACL*WINDOW(1)+FACR*WINDOW(3)+COFF
      TITY = TEMP
      TITMAX=WINDOW(3)-WINDOW(1)
      GOTO 13222
13260 CONTINUE
      TITX = TEMP
      TITY = FACL*WINDOW(2)+FACR*WINDOW(4)+COFF
      TITMAX=WINDOW(4)-WINDOW(2)
      GOTO 13222
13280 CONTINUE
      TITX = TITX1 + VSPACE*SIN(TITCON(2)*RAD)/2
      TITY = TITY1 - VSPACE*COS(TITCON(2)*RAD)/2
      GOTO 13222
13270 CONTINUE
      GOTO 13222
13222 CONTINUE
      IF (IPSET.ne.0) TITX=XYZ(1)
      IF (IPSET.ge.2) TITY=XYZ(2)
      IF (ITITDT(1)+ITITDT(2)+ITITDT(3).NE.0) THEN
      IF (.NOT.FLAGS(75)) CALL TXDEF2
      IF (FLAGS(75)) THEN
      DO 13291 I=1,3
      IF (LSCREV(I)) THEN
      XYZ(I)=XYZLIM(I,2)
      ELSE
      XYZ(I)=XYZLIM(I,1)
      ENDIF
13291 CONTINUE
13292 CONTINUE
      IF (ITITDT(1).NE.0) XYZ(1)=TITX
      IF (ITITDT(2).NE.0) XYZ(2)=TITY
      IF (ITITDT(3).NE.0) XYZ(3)=TITZ
      CALL T2XFRM(3,1,XYZ,NONLIN,XFRM13,2,XY)
      IF (ITITDT(1).NE.0) TITX=XY(1)
      IF (ITITDT(2).NE.0) TITY=XY(2)
      DO 13301 I=1,3
      ITITDT(I)=0
13301 CONTINUE
13302 CONTINUE
      ELSE
      NTITLE=0
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Data coordinate system no
     *t set.'),4)
      ENDIF
      ENDIF
      ENDIF
      CALL TXSCIS(1)
      IF (ITMODE.ne.2) THEN
      IF (ITMODE.eq.1) THEN
13311 CONTINUE
      CALL T2JOUR
      CALL TOKRED(INFOIN,CARDIN,LENCRD,INPFIL,INPFMT)
      IF((INFOIN(1).LT.0))GOTO 13312
      IF (OUTFIL.gt.0) CALL T2ERR(INFOIN,CARDIN,' ',6)
      IUSED=0
      GOTO 13321
13350 CONTINUE
      IF(IUSED.eq.0)GOTO 13322
      IDIGIT=INTEG
      GOTO 13321
13360 CONTINUE
      IF(IUSED.eq.0)GOTO 13322
      CALL DATE(STRNG)
      CALL TDTIME(STRNG(11:20))
      CALL T2SQEZ(STRNG(1:20),NSTRNG)
      NSTRNG=MIN(MAXTIT-NTITLE,NSTRNG)
      GOTO 13370
13380 CONTINUE
      IUSED=1
      GOTO 13321
13390 CONTINUE
      IUSED=1
      IF (NSTRNG.gt.0) THEN
      IF (NSTRNG+NCASE.gt.MAXCAS) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** String too long'),4)
      NSTRNG=MAXCAS-NCASE
      ENDIF
      CALL T2UPCS(STRNG(1:NSTRNG))
      CASE(NCASE+1:NCASE+NSTRNG)=STRNG(1:NSTRNG)
      NCASE=NCASE+NSTRNG
      ENDIF
      GOTO 13321
13330 GOTO ( 13350,13360,13380,13390,13325),KEYORD
13400 CONTINUE
      IF(IUSED.eq.0)GOTO 13322
13370 CONTINUE
      IUSED=1
      IF (NSTRNG.gt.0) THEN
      CALL T2_PARSE_TITLE(STRNG(1:NSTRNG)  ,TITLE,NTITLE ,CASE,NCASE)
      ENDIF
      GOTO 13321
13325 CONTINUE
      IF (STRNG(1:2).eq.'T_') THEN
      CVALUE=STRNG(1:NSTRNG)
      ISTRNG=NSTRNG
      CVALUE(1:1)='V'
      IF (TDGETV(CVALUE(1:NSTRNG),VALUE) ) THEN
      J=MIN(15,MAXTIT-NTITLE)
      CALL T2TLAB(9,VALUE,SCLPRM,IDIGIT,1, TITLE(NTITLE+1:NTITLE+J),J, C
     *ASE(NTITLE+1:NTITLE+J),K,IFIR)
      NTITLE=NTITLE+J
      NCASE=NTITLE
      ELSE
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 13160
      ENDIF
      ELSEIF (IUSED.eq.0) THEN
      N_SELECT=0
      ISTAT=T2_GET_ENV('TD_C_'//STRNG(1:NSTRNG)  ,C_SELECT,N_SELECT)
      IF (ISTAT.and.N_SELECT.gt.0) THEN
      IF(INFOIN(6).lt.MAX_SUBST) THEN
      INFOIN(6)=INFOIN(6)+1
      IF (INFOIN(5) .eq. 1) INFOIN(6)=INFOIN(6)+MAX_SUBST/3
      IF (INFOIN(3) .lt. INFOIN(1)) THEN
C     C_SELECT(N_SELECT+1:LEN(C_SELECT))=CARDIN(INFOIN(3)+1:LEN(CARDIN))
C     INFOIN(1)=INFOIN(1)+N_SELECT-INFOIN(3)
      CALL SET_COMMAND_ARGS(C_SELECT,N_SELECT,
     *                      CARDIN(INFOIN(3)+1:INFOIN(1)),INFOIN(1))
      ELSE
      C_SELECT(N_SELECT+1:LEN(C_SELECT))=' '
      INFOIN(1)=N_SELECT
      ENDIF
      IF (INFOIN(1) .gt. LEN(CARDIN)) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Command truncated'),4)
      INFOIN(1)=LEN(CARDIN)
      ENDIF
      NSTJOU=0
      LSTJOU=0
      CARDIN=C_SELECT
      DO 13411 I=3,5
      INFOIN(I)=0
13411 CONTINUE
13412 CONTINUE
      INFOIN(8)=0
      ELSE
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Too many command substitut
     *ions:' //C_SELECT(:N_SELECT),4)
      RETURN
      ENDIF
      ELSE
      GOTO 13322
      ENDIF
      ELSE
      GOTO 13322
      ENDIF
      GOTO 13321
13321 CALL TOKEN(INFOIN,CARDIN,'DIGIT:1:7:4,TIME,MORE,CASE:S,;')
      GOTO (13322,13330,13325,13325,13400,13325,13325,13330,13325),INTER
     *P
13322 CONTINUE
      IF(.NOT.(IUSED.EQ.0.or.ITMODE.eq.3))GOTO 13311
13312 CONTINUE
      INFOIN(9)=1
      NSTJOU=0
      NCASE=NTITLE
      ENDIF
      IF (NTITLE.GT.0) THEN
      IF (LTDATA) THEN
      CALL TXSCIS(2)
      IF (.not.(FLAGS(23).AND.FLAGS(92))) CALL TX3TXT(XYZLAB,ALONG,UPDIR
     *, TITLE(1:NTITLE),CASE(1:NTITLE),ICNTR+IHIDE)
      TITX1=XYZWRL(IAX2,1)-COST/2
      TITY1=XYZWRL(IAX3,1)-SINT/2
      TITZ= XYZWRL(IAX1,1)
      CALL TXSCIS(1)
      ELSE
      IF (ICNTR.gt.0.or.LFIT) THEN
      SPACE = TXXCSZ(TITLE(1:NTITLE), CASE(1:NCASE),0.1*REDUCE(2)*TITCON
     *(1))
      IF (LFIT.and.SPACE.gt.TITMAX) THEN
      T=MAX(0.25,ABS(TITMAX/SPACE))
      TITCON(1)=T*TITCON(1)
      SPACE=T*SPACE
      VSPACE=T*VSPACE
      HSPACE=T*HSPACE
      LFIT=.false.
      ENDIF
      SPACE=ICNTR*0.5*SPACE
      XYZ(1) = TITX - SPACE*COS(TITCON(2)*RAD)
      XYZ(2) = TITY - SPACE*SIN(TITCON(2)*RAD)
      ELSE
      XYZ(1) = TITX
      XYZ(2) = TITY
      ENDIF
      CALL T2XFRM(2,1,XYZ,LINEAR,XFRM34,2,XY)
      IF (.not.(FLAGS(23).AND.FLAGS(92))) THEN
      CALL TXTEXT(XY(1),XY(2),TITCON(1), TITCON(2),TITLE(1:NTITLE),CASE(
     *1:NTITLE))
      TITX1 = TITX + VSPACE*SIN(TITCON(2)*RAD)/2
      TITY1 = TITY - VSPACE*COS(TITCON(2)*RAD)/2
      DO 13421 J=1,2
      XYZ(J)=XYZ(J)+SPACE
13421 CONTINUE
13422 CONTINUE
      DO 13431 I=1,2
      CALL T2_SET_EXTENT(XYZ,1)
      DO 13441 J=1,2
      XYZ(J)=XYZ(J)-SPACE
13441 CONTINUE
13442 CONTINUE
13431 CONTINUE
13432 CONTINUE
      ENDIF
      ENDIF
      ENDIF
      ELSE
      XSPACE= VSPACE*SIN(TITCON(2)*RAD)
      YSPACE=-VSPACE*COS(TITCON(2)*RAD)
      IF (NTITLE.LE.0) THEN
      TITX=TITX-XSPACE
      TITY=TITY-YSPACE
      ENDIF
      IESCMD = 0
13451 CONTINUE
13461 CONTINUE
      IF(NTITLE.LE.0)GOTO 13462
      IF(TITLE(NTITLE:NTITLE).ne.' ')GOTO 13462
      NTITLE=NTITLE-1
      GOTO 13461
13462 CONTINUE
      CALL T2JOUR
      INFOIN(3)=9999
      CALL TOKRED(INFOIN,CARDIN,LENCRD,INPFIL,INPFMT)
      IF(INFOIN(1).LE.0)GOTO 13452
      IF (OUTFIL.gt.0) CALL T2ERR(INFOIN,CARDIN,' ',6)
      ICOL=1
      IF (CARDIN(1:1).ne.AMPRSN) THEN
      ICOL=0
      TITX=TITX+XSPACE
      TITY=TITY+YSPACE
      IF (NTITLE.GT.0) THEN
      XYZ(1)=TITX
      XYZ(2)=TITY
      CALL T2XFRM(2,1,XYZ,LINEAR,XFRM34,2,XY)
      IF (.not.(FLAGS(23).AND.FLAGS(92))) THEN
      CALL TXTEXT(XY(1),XY(2),TITCON(1), TITCON(2),TITLE(1:NTITLE),CASE(
     *1:NTITLE))
      DO 13471 J=1,2
      XYZ(J)=XYZ(J)+SPACE
13471 CONTINUE
13472 CONTINUE
      DO 13481 I=1,2
      CALL T2_SET_EXTENT(XYZ,1)
      DO 13491 J=1,2
      XYZ(J)=XYZ(J)-SPACE
13491 CONTINUE
13492 CONTINUE
13481 CONTINUE
13482 CONTINUE
      ENDIF
      ENDIF
      NTITLE=0
      IF (CARDIN(1:1).eq.ESCAPE) THEN
      GOTO 13452
      ELSEIF (CARDIN(1:1).eq.BLANK) THEN
      ICOL=1
      ELSEIF (CARDIN(1:1).eq.PLUS) THEN
      ICOL=1
      TITX=TITX-XSPACE
      TITY=TITY-YSPACE
      ELSEIF (CARDIN(1:1).eq.MINUS) THEN
      ICOL=1
      TITX=TITX+2.*XSPACE
      TITY=TITY+2.*YSPACE
      ELSEIF (CARDIN(1:1).eq.ZERO) THEN
      ICOL=1
      TITX=TITX+XSPACE
      TITY=TITY+YSPACE
      ENDIF
      ENDIF
13501 CONTINUE
      IF(ICOL.GE.INFOIN(1))GOTO 13502
      IF(NTITLE.GE.MAXTIT)GOTO 13502
      ICOL=ICOL+1
      NTITLE=NTITLE+1
      IF (CARDIN(ICOL:ICOL).eq.ESCAPE) THEN
      IF (CARDIN(ICOL+1:ICOL+1).NE.ESCAPE) THEN
      IESCMD=1-IESCMD
      NTITLE=NTITLE-1
      GOTO 13501
      ENDIF
      ICOL=ICOL+1
      ENDIF
      IF (IESCMD.EQ.0) THEN
      TITLE(NTITLE:NTITLE) = CARDIN(ICOL:ICOL)
      CASE(NTITLE:NTITLE)=' '
      ELSE
      TITLE(NTITLE:NTITLE) = CARDIN(ICOL:ICOL)
      ICOL=ICOL+1
      CASE(NTITLE:NTITLE)=CARDIN(ICOL:ICOL)
      ENDIF
      GOTO 13501
13502 CONTINUE
      GOTO 13451
13452 CONTINUE
      ENDIF
13160 CONTINUE
      CALL T2CWTS(ITXSAV,IDUM)
      IF (FLAGS(127)) CALL TXXMT
      FLAGS(23)=ERRSAV.or.FLAGS(23)
      END
      SUBROUTINE T2_PARSE_TITLE(STRING  ,TITLE,NTITLE ,CASE,NCASE)
      CHARACTER*(*) STRING,TITLE,CASE
      INTEGER NTITLE,NCASE
      INTEGER I,J,K,NSTRING,JMIN,JMAX,KMAX
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      CHARACTER*256 STRINGX 
      LOGICAL T2_GET_ENV,DMMY
      IF (NCASE .lt. NTITLE) NCASE=NTITLE
      NSTRING=LEN(STRING)
      I=1
      IF ( C_TIT_SUBSTITUTE(:1) .ne. CHAR(0) .or. C_TIT_ESCAPE .ne. CHAR
     *(0) ) THEN
      DO WHILE (I .le. NSTRING)
      IF (NTITLE .ge. LEN(TITLE)) GOTO 13510
      IF (C_TIT_ESCAPE .eq. STRING(I:I) .and. I.lt.NSTRING-1) THEN
      NTITLE=NTITLE+1
      I=I+1
      TITLE(NTITLE:NTITLE)=STRING(I:I)
      I=I+1
      CASE(NTITLE:NTITLE)=STRING(I:I)
      ELSEIF (C_TIT_SUBSTITUTE(:1) .eq. STRING(I:I) .and. I .lt. NSTRING
     *-1) THEN
      JMIN=I
      JMAX=INDEX(STRING(JMIN+1:),C_TIT_SUBSTITUTE(2:2))+JMIN
      IF (JMAX .gt. JMIN+1) THEN
      STRINGX = 'TD_S_'//STRING(JMIN+1:JMAX-1) 
C     CALL T2_GET_ENV ( STRINGX(:JMAX+4), OUTSTR, KMAX )
      DMMY=T2_GET_ENV ( STRINGX(:JMAX+4), OUTSTR, KMAX )   ! for unix-fortran
      IF (KMAX .gt. 0) THEN
      K=1
      DO WHILE (K .le. KMAX)
      NTITLE=NTITLE+1
      IF (C_TIT_ESCAPE .eq. OUTSTR(K:K) .and. K.lt.KMAX-1) THEN
      K=K+1
      TITLE(NTITLE:NTITLE)=OUTSTR(K:K)
      K=K+1
      CASE(NTITLE:NTITLE)=OUTSTR(K:K)
      ELSE
      TITLE(NTITLE:NTITLE)=OUTSTR(K:K)
      ENDIF
      K=K+1
      ENDDO
      I=JMAX
      ELSE
      NTITLE=NTITLE+1
      TITLE(NTITLE:NTITLE)=STRING(I:I)
      ENDIF
      ELSE
      NTITLE=NTITLE+1
      TITLE(NTITLE:NTITLE)=STRING(I:I)
      ENDIF
      ELSE
      NTITLE=NTITLE+1
      TITLE(NTITLE:NTITLE)=STRING(I:I)
      ENDIF
      I=I+1
      ENDDO
      ELSE
      TITLE(NTITLE+1:)=STRING
      NTITLE=NTITLE+NSTRING
      IF ( NTITLE .gt. LEN(TITLE) ) THEN
13510 CONTINUE
      CALL T2ERR(0,' ','*** ERROR *** Title string too long',3)
      NTITLE=LEN(TITLE)
      ENDIF
      ENDIF
      END
      LOGICAL FUNCTION T2_SET_ENV(STRING,OUTSTR)
      IMPLICIT NONE
      CHARACTER*(*) STRING,OUTSTR
      CHARACTER     COMAND*1024
      LOGICAL       T2_GET_ENV
      INTEGER       I,L,PUTENV
      L=LEN(STRING)
      COMAND(  :L)=STRING
      COMAND(L+1:)='='
      I=1
      DO WHILE(I.LT.LEN(OUTSTR).AND.(ICHAR(OUTSTR(I:I)).LE.ICHAR(' ')
     *                           .OR.ICHAR(OUTSTR(I:I)).GE.127       ))
      I=I+1
      ENDDO
      COMAND(L+2:)=OUTSTR(I:)
      T2_SET_ENV=(PUTENV(COMAND(:L+LEN(OUTSTR)-I+2)).EQ.0)
      END
      LOGICAL FUNCTION T2_GET_ENV(STRING,OUTSTR,N_OUTSTR)
      IMPLICIT NONE
      CHARACTER*(*) STRING,OUTSTR
      INTEGER N_OUTSTR,T2BTRIM
      CALL GETENV(STRING,OUTSTR)
      T2_GET_ENV=(OUTSTR.NE.' ')
      IF (T2_GET_ENV) N_OUTSTR=T2BTRIM(OUTSTR)
      END
      SUBROUTINE T2BNDA(INFOIN,CARDIN,TLIM)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      REAL TLIM(3,2)
      INTEGER IXYZ,INDEX,I,J
      REAL T
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LFIRST
      INDEX=1
      T=1.0E35
      DO 13521 I=1,2
      T=-T
      DO 13531 J=1,3
      TLIM(J,I)=T
13531 CONTINUE
13532 CONTINUE
13521 CONTINUE
13522 CONTINUE
      IXYZ=MESH2D
      LFIRST=.true.
      GOTO 13541
13570 CONTINUE
      IF (LFIRST) THEN
      IF (MESH2D.ne.0 .and. NDIMNS(2).eq.2 .and. MESH2D.ne.INTEG ) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** WARNING *** Inconsistent axes selec
     *ted'),4)
      ENDIF
      MESH2D=INTEG
      LFIRST=.false.
      ENDIF
      IXYZ=INTEG
      INDEX=1
      GOTO 13541
13580 CONTINUE
      INDEX=1
      GOTO 13541
13590 CONTINUE
      INDEX=2
      GOTO 13541
13550 GOTO ( 13570,13570,13570,13580,13590,13545),KEYORD
13600 CONTINUE
      IF (IXYZ.le.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** No axis selected'),4)
      RETURN
      ENDIF
      IF (INDEX.gt.2) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Redundant number'),4)
      RETURN
      ENDIF
      TLIM(IXYZ,INDEX)=FLOTNG
      INDEX=INDEX+1
      GOTO 13541
13545 CONTINUE
      INFOIN(9)=-1
      GOTO 13542
13541 CALL TOKEN(INFOIN,CARDIN,'X:1,Y:2,Z:3,FROM,TO,;')
      GOTO (13542,13550,13600,13600,13545,13545,13545,13550,13545),INTER
     *P
13542 CONTINUE
      DO 13611 I=1,3
      IF (TLIM(I,1) .gt. TLIM(I,2)) THEN
      T=TLIM(I,1)
      TLIM(I,1)=TLIM(I,2)
      TLIM(I,2)=T
      ENDIF
13611 CONTINUE
13612 CONTINUE
      END
      SUBROUTINE T2NEWS(IPTS,STRING)
      IMPLICIT NONE
      CHARACTER*(*) STRING
      LOGICAL T2_VIRT
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      REAL HNONE
      INTEGER IPTS,J,K, ISIZ, ISTR, T2BTRIM
      DATA HNONE /-666.666/
      FLAGS(28)=.false.
      J=IVRPTR(15)
      DATDAT(1,1)=HNONE
      IF (NDSETS.gt.0) THEN
      CALL T2GDSET(NDSETS,1,1,1,1,ISETD,HNONE,'*')
      IF (NP .lt. 1) THEN
      IVRPTR(12)=IBGDAT
      NDSETS=NDSETS-1
      ENDIF
      ENDIF
      ISTR=LEN(STRING)
      OUTSTR=STRING
      IF (STRING(ISTR:ISTR) .eq. '%') THEN
      CALL T2_GET_SET_NAME(J,OUTSTR(ISTR:))
      ENDIF
      ISTR=T2BTRIM(OUTSTR)
      ISTR=(MIN(ISTR,400)+4-1)/4
      ISIZ=NINCR*IPTS+4+ISTR
      IF (.not. T2_VIRT(ISIZ)) THEN
      FLAGS(23)=.true.
      CALL T2ERR(0,' ',('*** ERROR *** Insufficient memory'),3)
      RETURN
      ENDIF
      J=IVRPTR(12)
      IVRPTR(15)=J
      DO 13621 K=1,ISIZ
      DATBUF(IVRPTR(12))=0
      IVRPTR(12)=IVRPTR(12)+1
13621 CONTINUE
13622 CONTINUE
      IVRPTR(13)=IVRPTR(12)-1
      NDSETS=NDSETS+1
      NPOINT=NPOINT+IPTS
      DATBUF(J)=1.0E35
      J=J+1
      DATBUF(J)=ISTR+4
      J=J+1
      DATBUF(J)=ISIZ
      J=J+1
      DATBUF(J)=ISTR
      READ(OUTSTR,13630)(DATBUF(K),K=J+1,J+ISTR)
      J=J+ISTR
13630 FORMAT(100A4)
      DO 13641 K=1,8
      IVRPTR(K)=1
13641 CONTINUE
13642 CONTINUE
      IVRPTR(8)=J+1
      DO 13651 K=1,NINCR
      IF(IVARBL(K) .lt. 8) IVRPTR(IVARBL(K))=IVARBL(K)+J
13651 CONTINUE
13652 CONTINUE
      END
      SUBROUTINE T2NEWM(NIN0,NIN1,NIN2,STRING)
      IMPLICIT NONE
      LOGICAL T2_VIRT
      INTEGER NIN0,NIN1,NIN2
      CHARACTER STRING*(*)
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      REAL HNONE
      INTEGER J,K,IPTS,ISIZ,ISTR,T2BTRIM
      DATA HNONE /-666.666/
      FLAGS(28)=.false.
      J=IVRPTR(15)
      DATDAT(1,1)=HNONE
      IF (NDSETS.gt.0) THEN
      CALL T2GDSET(NDSETS,1,1,1,1,ISETD,HNONE,'*')
      IF (NP .lt. 1) THEN
      IVRPTR(12)=IBGDAT
      NDSETS=NDSETS-1
      ENDIF
      ENDIF
      ISTR=LEN(STRING)
      OUTSTR=STRING
      IF (STRING(ISTR:ISTR) .eq. '%') THEN
      CALL T2_GET_SET_NAME(J,OUTSTR(ISTR:))
      ENDIF
      ISTR=T2BTRIM(OUTSTR)
      ISTR=(MIN(ISTR,400)+4-1)/4
      ISIZ=MIN(MAX(NIN0,1),2)*(NIN1*NIN2+4)+7+ISTR
      IF (.not. T2_VIRT(ISIZ)) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Insufficient memory'),3)
      FLAGS(23)=.true.
      RETURN
      ENDIF
      NDSETS=NDSETS+1
      J=IVRPTR(12)
      IVRPTR(15)=J
      DO 13661 K=1,ISIZ
      DATBUF(IVRPTR(12))=0
      IVRPTR(12)=IVRPTR(12)+1
13661 CONTINUE
13662 CONTINUE
      IVRPTR(13)=IVRPTR(12)-1
      DATBUF(J)=2.0E35
      J=J+1
      DATBUF(J)=7+ISTR
      J=J+1
      DATBUF(J)=ISIZ
      J=J+1
      DATBUF(J)=ISTR
      READ(OUTSTR,13670)(DATBUF(K),K=J+1,J+ISTR)
      J=J+ISTR+1
13670 FORMAT(100A4)
      DATBUF(J)=NIN0
      J=J+1
      DATBUF(J)=NIN1
      J=J+1
      DATBUF(J)=NIN2
      J=J+1
      IVRPTR(8)=J
      IBLKTP=2
      MESH1=1
      MESH2=2
      MESH3=3
      NMESH0=NIN0
      NMESH1=NIN1
      NMESH2=NIN2
      DATBUF(J)=1+2*4
      DO 13681 J=1,7
      IVRPTR(J)=1
13681 CONTINUE
13682 CONTINUE
      IVRPTR(2)=IVRPTR(8)+NIN0
      IVRPTR(4)=IVRPTR(8)+NIN0*NIN1
      IVRPTR(6)=IVRPTR(4)+NIN0
      IF (NMESH0.eq.2) THEN
      DO 13691 J=2,7,2
      IVRPTR(J+1)=IVRPTR(J)+1
13691 CONTINUE
13692 CONTINUE
      ENDIF
      NPOINT=NPOINT+(NMESH1-1)*(NMESH2-1)
      END
      SUBROUTINE T2JOUR
      CHARACTER*160 STR
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL INTRAC
      IF (JOUFIL.gt.0 .and. INTRAC(I) .and. INPFIL.eq.9 .and. NSTJOU.gt.
     *0) THEN
      NSTJOU=MIN(NSTJOU,LEN(STJOU))
      IF (STJOU(1:NSTJOU).ne. ' ') THEN
      IF (STJOU(NSTJOU:NSTJOU).eq.' ') NSTJOU=MAX(1,NSTJOU-1)
      WRITE (JOUFIL,'(1X,A)',ERR=13700) STJOU(1:NSTJOU)
      IF (JOUFIL.le.NINMAX)NINP(JOUFIL)=NINP(JOUFIL)+1
      JOUCNT=JOUCNT+1
      IF (MOD(JOUCNT,10).eq.0) THEN
      INQUIRE(UNIT=JOUFIL,NAME=STR)
      CLOSE(UNIT=JOUFIL)
      OPEN(UNIT=JOUFIL,STATUS='OLD',FILE=STR)
      ENDIF
      ENDIF
      ENDIF
13700 CONTINUE
      NSTJOU=0
      LSTJOU=0
      END
      SUBROUTINE T2GTEX(ITXTUR)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LTEST,LTEST1
      INTEGER I,IFUNNY,ITXTUR,IMAX
      IF (ITXTUR.le.0 ) THEN
      IF (INTEG.eq.8) INTEG=0
      ITXTUR=INTEG
      LTEST=.TRUE.
      LTEST1=.TRUE.
      IFUNNY=1
      ELSEIF (INTEG+ITXTUR .eq. 3) THEN
      ITXTUR=3
      ELSEIF (INTEG.EQ.5) THEN
      IFUNNY=-1
      ELSE
      IF (LTEST) THEN
      FLAGS(98)=.TRUE.
      NPATRN(IPATRN)=0
      LTEST=.FALSE.
      IF (ITXTUR .eq. 4) ITXTUR=2
      IF (ITXTUR .le. 2) THEN
      NPATRN(IPATRN)=2
      PATRN(1,IPATRN)=(ITXTUR-1)*PATSZ
      PATRN(2,IPATRN)=PATSZ
      ELSEIF (ITXTUR .eq. 3) THEN
      NPATRN(IPATRN)=4
      PATRN(1,IPATRN)=0.0
      PATRN(2,IPATRN)=PATSZ
      PATRN(3,IPATRN)=PATSZ
      PATRN(4,IPATRN)=PATSZ
      ELSEIF (ITXTUR .eq. 5) THEN
      IFUNNY=-1
      ELSEIF (ITXTUR .eq. 7) THEN
      NPATRN(IPATRN)=2
      PATRN(1,IPATRN)=0.3
      PATRN(2,IPATRN)=PATSZ
      ENDIF
      ITXTUR=6
      ENDIF
      IF (INTEG.ne.6) THEN
      IF (INTEG .eq. 4) INTEG=2
      IMAX=2
      IF (INTEG.EQ.3) IMAX=4
      IF (INTEG.eq.2) THEN
      INTEG=1
      ELSEIF (INTEG.eq.7) THEN
      INTEG=3
      ELSEIF (INTEG.eq.8) THEN
      IMAX=0
      IF (NPATRN(IPATRN).gt.1) PATRN(NPATRN(IPATRN),IPATRN)= PATRN(NPATR
     *N(IPATRN),IPATRN)+PATSZ*IFUNNY
      ELSE
      INTEG=0
      ENDIF
      DO 13711 I=1,IMAX
      IF (NPATRN(IPATRN).ge.20) THEN
      IF (LTEST1) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Maximum pattern size exceeded'),3
     *)
      LTEST1=.FALSE.
      ENDIF
      GOTO 13712
      ENDIF
      NPATRN(IPATRN)=NPATRN(IPATRN)+1
      IF (MOD(NPATRN(IPATRN),2).eq.0) THEN
      PATRN(NPATRN(IPATRN),IPATRN)=PATSZ*IFUNNY
      ELSE
      PATRN(NPATRN(IPATRN),IPATRN)=PATSZ*IFUNNY*INTEG
      INTEG=1
      ENDIF
13711 CONTINUE
13712 CONTINUE
      IFUNNY=1
      ENDIF
      ENDIF
      END

      subroutine set_command_args(com,ncom,arg,l)
      parameter (maxarg=9, narg=maxarg+3)
      character com*(*),arg*(*),temp1*1024,temp2*1024
      integer*4 i1(narg),i2(narg),lkey(narg),t2btrim
      character key(narg)*4,delim
      byte      typtab(0:255)
      common /t2toknc/typtab
      data key/'!:1','!:2','!:3','!:4','!:5',
     &         '!:6','!:7','!:8','!:9','!^' ,'!$','!*'/
      data lkey/3,3,3,3,3,3,3,3,3,2,2,2/
      do i=1,10
        i1(i)=0
      enddo
      larg=len(arg)
      do i=0,255
        if (typtab(i).eq.8) then	! terminator
          j=index(arg(:larg),char(i))
          if (j.ne.0) larg=j-1
        endif
      enddo
      n=0
      delim=' '
      do i=1,larg
        if (arg(i:i).eq.delim) then
          if (i1(n+1).gt.0) n=n+1
          delim=' '
        else
          if (i1(n+1).le.0) then
             if (index('"''',arg(i:i)).eq.0) then
               i1(n+1)=i
            else
               i1(n+1)=i+1
               delim=arg(i:i)
            endif
         endif
          i2(n+1)=i
        endif
        if (n.eq.maxarg) goto 10000
      enddo
      if (i1(n+1).ne.0) n=n+1
10000 i1(maxarg+1)=i1(1)
      i2(maxarg+1)=i2(1)
      i1(maxarg+2)=i1(n)
      i2(maxarg+2)=i2(n)
      i1(maxarg+3)=i1(1)
      i2(maxarg+3)=i2(n)
      m=0
      temp1=com(:ncom)
      do i=1,narg
        j=index(temp1,key(i)(:lkey(i)))
        do while (j.ne.0)
          m=m+1
          temp2(:j-1)=temp1(:j-1)
          if (i1(i).gt.0) then
            temp2(j:j+i2(i)-i1(i))=arg(i1(i):i2(i))
            temp2(j+i2(i)-i1(i)+1:)=temp1(j+lkey(i):)
          else
            temp2(j:)=temp1(j+lkey(i):)
          endif
          temp1=temp2
          j=index(temp1,key(i)(:lkey(i)))
        enddo
      enddo
      if (m.eq.0) then
        com(ncom+1:)=' '
        com(ncom+2:)=arg
        l=len(arg)+ncom+1
      else
        i=t2btrim(temp1)
        com=temp1(:i)//arg(larg+1:)
        l=i+len(arg)-larg
      endif
      return
      end
