C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
      SUBROUTINE T2_CONVOLUTE(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      CHARACTER*1 CXYZ(3)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL LINVER ,LHIS ,LHIS2 ,LERR ,LNERR ,LNORM ,CFT ,LCFT
      LOGICAL LFIRST, LTEST
      INTEGER T2BTRIM
      INTEGER ISET,JSET,IOFF(2)
      INTEGER I,J,K,L,M,N,IMAX,JMAX
      INTEGER IZ1,IZ2,IZ3,IDZ1,IDZ2,IDZ3,IZ1S,IZ2S,IZ3S
      INTEGER ICONV
      INTEGER NPTS,NLIN
      REAL T,TR,TI,Y1,Y2,X0(2,3),DX(2,3),TNORM,DENOM,SUM,DSUM
      INTEGER IOUT
      INTEGER ISETC(NSETD,4)
      INTEGER IAND
      LOGICAL TDSETS,DMMY
      DATA CXYZ/'X','Y','Z'/
      DATA HNONE /-666.666/
      ICONV=0
      LERR=.true.
      LINVER=.false.
      LNORM=.false.
      LCFT=.false.
      LFIRST=.true.
      DO 10011 I=1,3
      DO 10021 J=1,2
      DX(J,I)=0
      X0(J,I)=0
10021 CONTINUE
10022 CONTINUE
10011 CONTINUE
10012 CONTINUE
      N_NAME=0
      GOTO 10031
10060 CONTINUE
      LAPPEN=LTOKEN
      GOTO 10031
10070 CONTINUE
      ICONV=INTEG
      IF (FLAGS(23)) RETURN
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,ICONV,1, 2 147 483 647, 1, 2 147 
     *483 647,HNONE, ISETC,X0,DX)
      IF (FLAGS(23)) RETURN
      GOTO 10031
10080 CONTINUE
      LCHECK=LTOKEN
      GOTO 10031
10090 CONTINUE
      LERR=LTOKEN
      GOTO 10031
10100 CONTINUE
      LCFT=LTOKEN
      GOTO 10031
10110 CONTINUE
      LINVER=LTOKEN
      GOTO 10031
10120 CONTINUE
      LLOG=LTOKEN
      GOTO 10031
10130 CONTINUE
      LMONITOR=LTOKEN
      GOTO 10031
10140 CONTINUE
      LNORM=LTOKEN
      GOTO 10031
10150 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10031
10160 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10031
10170 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 10031
10031 CALL TOKEN(INFOIN,CARDIN,'APPEND:Y,BY:D,CHECK:Y,ERROR:Y,FFT:Y,INVE
     *RT:Y,LOG:Y,MONITOR:Y,NORMALIZED:Y,SETS,SELECT:S,NAME:S,;')
      GOTO (10032,10037,10035,10035,10035,10035,10031,10037, 10035),INTE
     *RP
10035 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10031
10037 GOTO ( 10060,10070,10080,10090,10100,10110,10120,10130,10140,10150
     *,10160,10170,10035),KEYORD
10032 CONTINUE
      IF (FLAGS(23)) RETURN
      IF (ICONV.eq.0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing convolution set',4
     *)
      RETURN
      ENDIF
      IF (N_NAME .eq. 0) THEN
      C_NAME='Convolution %'
      IF (LINVER) C_NAME='Convolution-1 %'
      N_NAME=T2BTRIM(C_NAME)
      ENDIF
      DO 10181 ISET=NS1,NS2
      IF(ISET .eq. ICONV .and. NS1.ne.NS2)GOTO 10181
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,HNONE,C_SELECT(:N_SELECT))
      IF(NP .lt. N1)GOTO 10181
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,ISET,N1,N2,N3,N4,HNONE, ISETC(1,2
     *),X0(1,2),DX(1,2))
      IF (ISETC(NBTYPE,2).lt.ISETC(NBTYPE,1)) THEN
      WRITE(OUTSTR,*)'*** ERROR *** You may not convolute histogram by m
     *esh, Set=',ISET
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ELSEIF (LCHECK) THEN
      DO 10191 I=1,ISETC(NBTYPE,2)
      IF ( ABS( ABS(DX(I,1))-ABS(DX(I,2)) )*ISETC(NPDATA+I-1,2) .ge. 0.0
     *1*ABS(DX(I,2)) ) THEN
      WRITE(OUTSTR,*)'*** ERROR *** ',CXYZ(I), ' data set widths do not 
     *match Sets:',ICONV,ISET
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ENDIF
10191 CONTINUE
10192 CONTINUE
      ENDIF
      IF (FLAGS(23)) RETURN
10181 CONTINUE
10182 CONTINUE
      IF (LNORM) THEN
      TNORM=0.0
      K=ISETC(NZDATA,1)
      DO 10201 I=1,ISETC(NLDATA,1)
      DO 10211 J=1,ISETC(NPDATA,1)
      TNORM=TNORM+DATBUF(K)
      K=K+ISETC(NINDAT+1,1)
10211 CONTINUE
10212 CONTINUE
      K=K+ISETC(NINDAT+1,1)
10201 CONTINUE
10202 CONTINUE
      if (TNORM.eq.0) TNORM=1
      ELSE
      TNORM=1.0
      ENDIF
      LCHECK=.false.
      DO 10221 ISET=NS1,NS2
      IF(ISET .eq. ICONV)GOTO 10221
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,HNONE,C_SELECT(:N_SELECT))
      IF(NP .lt. N1)GOTO 10221
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,ISET,N1,N2,N3,N4,HNONE, ISETC(1,2
     *),X0(1,2),DX(1,2))
      NPTS=ISETC(NPDATA,2)+ISETC(NPDATA,1)-1
      NLIN=ISETC(NLDATA,2)+ISETC(NLDATA,1)-1
      IF (LINVER.or.LCFT) THEN
      NPTS=NPTS+IAND(1,NPTS)
      IF (NLIN.gt.1) NLIN=NLIN+IAND(1,NLIN)
      ENDIF
      IF (ISETC(NBTYPE,2).eq.1) THEN
      CALL T2NEWS(NPTS,C_NAME(:N_NAME))
      ELSE
      CALL T2NEWM(ISETC(NINDAT,2),NPTS+1,NLIN+1, C_NAME(:N_NAME))
      ENDIF
      JSET=NDSETS
      IF (LINVER.or.LCFT) THEN
      CALL T2NEWM(4,NPTS,NLIN,' ')
      ENDIF
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,ICONV,1, 2 147 483 647, 1, 2 147 
     *483 647,HNONE, ISETC(1,1),X0(1,1),DX(1,1))
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,ISET,1, 2 147 483 647, 1, 2 147 4
     *83 647,HNONE, ISETC(1,2),X0(1,2),DX(1,2))
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,JSET,1, 2 147 483 647, 1, 2 147 4
     *83 647,HNONE, ISETC(1,3),X0(1,3),DX(1,3))
      IF (LINVER.or.LCFT) THEN
      CALL T2IHIS(INFOIN,CARDIN,LCHECK,NDSETS,1, 2 147 483 647, 1, 2 147
     * 483 647,HNONE, ISETC(1,4),X0(1,3),DX(1,3))
      ENDIF
      IF (FLAGS(23)) RETURN
      IF (LAPPEN) THEN
      IOUT=3
      IOFF(1)=0
      IOFF(2)=0
      ELSE
      IOUT=2
      IOFF(1)=(ISETC(NPDATA,1)-1)/2
      IOFF(2)=(ISETC(NLDATA,1)-1)/2
      ENDIF
      IF (LINVER.or.LCFT) THEN
      DO 10231 N=1,2
      IZ2=ISETC(NZDATA,N)
      IZ3S=ISETC(NXDATA,4)+2*N-2
      IF (N.eq.2.and. .not. LCFT) IZ3S=IZ3S+ ( (ISETC(NPDATA,1)-1)+(ISET
     *C(NLDATA,1)-1)*NPTS )*4
      DO 10241 M=1,ISETC(NLDATA,N)
      IZ3=IZ3S
      DO 10251 I=1,ISETC(NPDATA,N)
      DATBUF(IZ3)=DATBUF(IZ2)/TNORM
      IZ3=IZ3+4
      IZ2=IZ2+ISETC(NINDAT+1,N)
10251 CONTINUE
10252 CONTINUE
      IZ3S=IZ3S+NPTS*4
      IZ2=IZ2+ISETC(NINDAT+1,N)
10241 CONTINUE
10242 CONTINUE
      J=ISETC(NXDATA,4)+2*N-2
      FLAGS(23)=.not. CFT(DATBUF(J),DATBUF(J+1), NPTS*NLIN,NPTS, NPTS,4)
     *
      IF (ISETC(NBTYPE,2).eq.2 .and. .not. FLAGS(23)) FLAGS(23)=.not. CF
     *T(DATBUF(J),DATBUF(J+1), NPTS*NLIN,NLIN, NPTS*NLIN,4)
      IF (FLAGS(23)) GOTO 10260
      TNORM=1.0
10231 CONTINUE
10232 CONTINUE
      J=ISETC(NXDATA,4)
      DENOM=NPTS*NLIN
      DO 10271 M=1,NLIN
      DO 10281 I=1,NPTS
      IF (LINVER) THEN
      DENOM = NLIN*NPTS*(DATBUF(J)**2+DATBUF(J+1)**2)
      TR= DATBUF(J)*DATBUF(J+2) + DATBUF(J+1)*DATBUF(J+3)
      TI= DATBUF(J+3)*DATBUF(J) - DATBUF(J+2)*DATBUF(J+1)
      ELSE
      TR= DATBUF(J)*DATBUF(J+2) - DATBUF(J+1)*DATBUF(J+3)
      TI= DATBUF(J+3)*DATBUF(J) + DATBUF(J+2)*DATBUF(J+1)
      ENDIF
      DATBUF(J)=TR
      DATBUF(J+1)=TI
      IF (DENOM.NE.0.) THEN
      DATBUF(J)= DATBUF(J)/DENOM
      DATBUF(J+1)= DATBUF(J+1)/DENOM
      ENDIF
      J=J+4
10281 CONTINUE
10282 CONTINUE
10271 CONTINUE
10272 CONTINUE
      J=ISETC(NXDATA,4)
      FLAGS(23)=.not. CFT(DATBUF(J),DATBUF(J+1), NPTS*NLIN,NPTS, NPTS,-4
     *)
      IF (ISETC(NBTYPE,2).eq.2 .and. .not. FLAGS(23)) FLAGS(23)=.not. CF
     *T(DATBUF(J),DATBUF(J+1), NPTS*NLIN,NLIN, NPTS*NLIN,-4)
      IF (FLAGS(23)) THEN
10260 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** FFT failure (CFT)',4)
      CALL T2RMLS
      CALL T2RMLS
      RETURN
      ENDIF
      K=ISETC(NXDATA,4)
      J=ISETC(NZDATA,3)
      DO 10291 M=1,NLIN
      DO 10301 I=1,NPTS
      DATBUF(J)=DATBUF(K)
      J=J+ISETC(NINDAT+1,3)
      K=K+4
10301 CONTINUE
10302 CONTINUE
      J=J+ISETC(NINDAT+1,3)
10291 CONTINUE
10292 CONTINUE
      CALL T2RMLS
      ELSE
      IZ2=ISETC(NZDATA,2)
      IDZ3=1
      IF (LERR .and. ISETC(NDZDATA,2) .ne.1) IDZ3=ISETC(NDZDATA,3)
      LNERR=ISETC(NDZDATA+1,2) .ne.1
      L=(ISETC(NPDATA,1)-1)*ISETC(NINDAT+1,3)  +(ISETC(NLDATA,1)-1)*ISET
     *C(NINDAT+2,3)
      IZ3S=ISETC(NZDATA,3)+L
      DO 10311 M=1,ISETC(NLDATA,2)
      IZ3=IZ3S
      DO 10321 N=1,ISETC(NPDATA,2)
      DATBUF(IZ3)=DATBUF(IZ2)
      IF (IDZ3.ne.1) THEN
      DATBUF(IZ3+1)=DATBUF(IZ2+1)
      ENDIF
      IZ2=IZ2+ISETC(NINDAT+1,2)
      IZ3=IZ3+ISETC(NINDAT+1,3)
10321 CONTINUE
10322 CONTINUE
      IZ2=IZ2+ISETC(NINDAT+1,2)
      IZ3S=IZ3S+ISETC(NINDAT+2,3)
10311 CONTINUE
10312 CONTINUE
      IZ3=ISETC(NZDATA,3)
      IDZ3=1
      IF (LERR) IDZ3=ISETC(NDZDATA,3)
      LNERR=ISETC(NDZDATA+1,3) .ne.1
      IDZ1=ISETC(NDZDATA,1)
      DO 10331 M=1,NLIN
      DO 10341 N=1,NPTS
      SUM=0
      DSUM=0
      IZ1S=ISETC(NZDATA,1)
      IZ2S=IZ3
      JMAX=MIN(ISETC(NPDATA,1),NPTS-N+1)
      DO 10351 I=1,MIN(ISETC(NLDATA,1),NLIN-M+1)
      IZ1=IZ1S
      IZ2=IZ2S
      DO 10361 J=1,JMAX
      Y1=DATBUF(IZ1)/TNORM
      Y2=DATBUF(IZ2)
      SUM=SUM+Y1*Y2
      IF (IDZ3.ne.1) THEN
      IF (IDZ1.ne.1) THEN
      DSUM=DSUM+(Y2*DATBUF(IZ1+1)/TNORM)**2
      ENDIF
      DSUM=DSUM+(Y1*DATBUF(IZ2+1))**2
      ENDIF
      IZ1=IZ1+ISETC(NINDAT+1,1)
      IZ2=IZ2+ISETC(NINDAT+1,3)
10361 CONTINUE
10362 CONTINUE
      IZ1S=IZ1S+ISETC(NINDAT+2,1)
      IZ2S=IZ2S+ISETC(NINDAT+2,3)
10351 CONTINUE
10352 CONTINUE
      DATBUF(IZ3)=SUM
      IF (IDZ3.ne.1) THEN
      DATBUF(IZ3+1)=SQRT(DSUM)
      IF (LNERR) DATBUF(IZ3+2)=DATBUF(IZ3+1)
      ENDIF
      IZ3=IZ3+ISETC(NINDAT+1,3)
10341 CONTINUE
10342 CONTINUE
      IZ3=IZ3+ISETC(NINDAT+1,3)
10331 CONTINUE
10332 CONTINUE
      ENDIF
      J=ISETC(NSDATA,IOUT)
      IF (J.ne.1) THEN
      DO 10371 I=1,ISETC(NPDATA,IOUT)
      DATBUF(J)=SYMBOL
      J=J+ISETC(NINDAT+1,IOUT)
10371 CONTINUE
10372 CONTINUE
      ENDIF
      DO 10381 I=1,ISETC(NBTYPE,IOUT)
      X0(I,1)=X0(I,1)+X0(I,2)+IOFF(I)*DX(I,2)
      K=ISETC(NCSIZE*(I-1)+NXDATA,IOUT)
      L=ISETC(NCSIZE*(I-1)+NDXDATA,IOUT)
      DO 10391 J=1,ISETC(NPDATA+I-1,IOUT)
      DATBUF(K)=X0(I,1)+(J-1)*DX(I,2)
      K=K+ISETC(I+2,IOUT)
      IF (L.ne.1) THEN
      DATBUF(L)=DX(I,2)
      L=L+ISETC(I+2,IOUT)
      ENDIF
10391 CONTINUE
10392 CONTINUE
10381 CONTINUE
10382 CONTINUE
      IF (LMONITOR) THEN
      CALL TXVOID
      IF (.not. LFIRST) CALL T2WAIT('Convolute:',LTEST)
      CALL TXNEXT
      CALL T2REST
C     CALL TDSETS('WINDOW 1 OF 2')
      DMMY=TDSETS('WINDOW 1 OF 2')	! for unix-fortran
      DO 10401 I=ISET,NDSETS,NDSETS-ISET
      CALL T2GDSET(I,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,'*')
      NXYLIM(3,1)=I
      NXYLIM(3,2)=I
      IF (IBTYPE .eq. 1) THEN
      CALL T2HIST(DATBUF(I1),DATBUF(I2),DATBUF(I3), DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), 0,0,NP-N1+1,NINCR0, HNONE,HNONE,HNONE)
      ELSE
      CALL T23JIN(DATBUF(IM),NMESH0,NMESH1,NMESH2,0,0, 1,NP,1,NL)
      ENDIF
      CALL T2_PLOT_TITLE(I,.false.)
C     CALL TDSETS('WINDOW 2 OF 2')
      DMMY=TDSETS('WINDOW 2 OF 2')	! for unix-fortran
10401 CONTINUE
10402 CONTINUE
      CALL TXVOID
      ENDIF
      LFIRST=.false.
      IF (.not. LAPPEN) THEN
      K=ISETC(NZDATA,2)
      M=1
      IF (ISETC(NDZDATA,3).ne.1) M=ISETC(NDZDATA,2)
      DO 10411 I=1,ISETC(NLDATA,2)
      L=ISETC(NZDATA,3)+  (I+IOFF(2)-1)*ISETC(NINDAT+2,3)+  (IOFF(1))*IS
     *ETC(NINDAT+1,3)
      IF (M.ne.1) N=ISETC(NDZDATA,3)+ (I+IOFF(2)-1)*ISETC(NINDAT+2,3)+ (
     *IOFF(1))*ISETC(NINDAT+1,3)
      DO 10421 J=1,ISETC(NPDATA,2)
      DATBUF(K)=DATBUF(L)
      K=K+ISETC(NINDAT+1,2)
      L=L+ISETC(NINDAT+1,3)
      IF (M.ne.1) THEN
      DATBUF(M)=DATBUF(K)
      M=M+ISETC(NINDAT+1,2)
      N=N+ISETC(NINDAT+1,3)
      ENDIF
10421 CONTINUE
10422 CONTINUE
      K=K+ISETC(NINDAT+1,2)
      IF (M.ne.1) M=M+ISETC(NINDAT+1,2)
10411 CONTINUE
10412 CONTINUE
      JSET=ISET
      CALL T2RMLS
      ENDIF
      DATDAT(1,1)=HNONE
      IF (LLOG) then
      WRITE(OUTSTR,'(4(A,I4))')  '   Convolution of',ISET,' by ',ICONV, 
     *' to ',Jset
      IF (LINVER)OUTSTR(T2BTRIM(OUTSTR)+2:)='Inverted'
      IF (LNORM)OUTSTR(T2BTRIM(OUTSTR)+2:)='Normalized'
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
10221 CONTINUE
10222 CONTINUE
      IF (LFIRST) WRITE(6)'   No data sets convoluted'
      END
      SUBROUTINE T2IHIS(INFOIN,CARDIN,LCHECK,ISET,N1,N2,N3,N4,TLIM,ISETC
     *,X0,DX)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      INTEGER ISET,N1,N2,N3,N4
      REAL TLIM(2,3)
      REAL X0(2),DX(2)
      CHARACTER*1 CXYZ(3)
      LOGICAL LCHECK,LHIS
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER I,J,ISETC(NSETD),JPTS
      REAL HNONE
      DATA HNONE /-666.666/
      DATA CXYZ/'X','Y','Z'/
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,'*')
      IF (FLAGS(23)) RETURN
      NP=NP-N1+1
      NL=NL-N3+1
      IF (IBTYPE.eq.1) THEN
      I3=I2
      I6=I5
      NINCR2=0
      ELSEIF (MESHN(3).ne.3) THEN
      WRITE(OUTSTR,*)'*** ERROR *** Bad Z coordinate, Set=',ISET
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      RETURN
      ELSEIF (MESHN(1).eq.2) THEN
      NINCR2=NINCR0
      I=I1
      I1=I2
      I2=I
      I=I4
      I4=I5
      I5=I
      I=NP
      NP=NL
      NL=I
      ELSE
      NINCR2=NINCR1
      NINCR1=NINCR0
      ENDIF
      NINCR2=NINCR2*NINCR1
      J=1
      DO 10431 I=1,IBTYPE
      IF (IBTYPE.eq.2) J=MESHN(I)
      CALL T2FHIS(ISET,J,N1,N2,N3,N4,LHIS,JPTS,X0(J),DX(J))
      IF (.not.LHIS .and. LCHECK) THEN
      WRITE(OUTSTR,*)'*** ERROR *** Not a histogram coordinate ',CXYZ(J)
     *,' Set=',ISET
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ENDIF
10431 CONTINUE
10432 CONTINUE
      DO 10441 I=1,NSETD
      ISETC(I)=ISETD(I)
10441 CONTINUE
10442 CONTINUE
      END
      SUBROUTINE T2SCOP(INFOIN,CARDIN, ISET1,N1P,NP1,N1L,NL1, ISET2,N2P,
     *NP2,N2L,NL2,STRING)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      INTEGER ISET1,ISET2,N1P,N1L,NP1,NL1,N2P,N2L,NP2,NL2
      CHARACTER*(*) STRING
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      INTEGER NLDAT 
      PARAMETER (NLDAT=NPDATA+1)
      INTEGER ISETC(NSETD),I,J,K,L,M,N
      DATA HNONE /-666.666/
      CALL T2GDSET(ISET1,N1P,NP1,N1L,NL1,ISETC,HNONE,'*')
      IF (FLAGS(23)) RETURN
      IF (ISETC(NPDATA).lt.N1P .or. ISETC(NPDATA+1).lt.N1L) RETURN
      IF (ISET2.eq.0.and.ISETC(NBTYPE).ne.0) THEN
      IF (ISETC(NBTYPE).eq.2) THEN
      CALL T2NEWM(ISETC(NINDAT),ISETC(NPDATA)-N1P+2,ISETC(NPDATA+1)-N1L+
     *2  ,STRING)
      ELSE
      CALL T2NEWS(ISETC(NPDATA)-N1P+1,STRING)
      ENDIF
      IF (FLAGS(23)) RETURN
      ISET2=NDSETS
      ENDIF
      CALL T2GDSET(ISET2,N2P,NP2,N2L,NL2,ISETD,HNONE,'*')
      IF (FLAGS(23)) RETURN
      IF (ISETC(NBTYPE).eq.0 .or. ISETC(NBTYPE).ne.ISETD(NBTYPE)) THEN
      WRITE(OUTSTR,*)'*** ERROR *** Mismatched data sets:',ISET1,ISET2
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      RETURN
      ENDIF
      IF (ISETD(NBTYPE).eq.1) THEN
      DO 10451 M=-1,19-2
      K=ISETC(NXDATA+M)
      L=ISETD(NXDATA+M)
      IF (DATBUF(K).ne.HNONE .and. DATBUF(L).ne.HNONE ) THEN
      DO 10461 I=1,MIN(ISETC(NPDATA)-N1P+1,ISETD(NPDATA)-N2P+1)
      DATBUF(L)=DATBUF(K)
      K=K+ISETC(NINDAT+1)
      L=L+ISETD(NINDAT+1)
10461 CONTINUE
10462 CONTINUE
      ENDIF
10451 CONTINUE
10452 CONTINUE
      ELSE
      DATBUF(ISETD(NMDATA))=DATBUF(ISETC(NMDATA))
      ISETC(NINDAT+1)=ISETC(NINDAT)*ISETC(NINDAT+1)
      ISETD(NINDAT+1)=ISETD(NINDAT)*ISETD(NINDAT+1)
      DO 10471 M=0,2*NCSIZE-1
      J=M/NCSIZE
      L=ISETD(NXDATA+M)
      K=ISETC(NXDATA+M)
      IF (DATBUF(K).ne.HNONE .and. DATBUF(L).ne.HNONE ) THEN
      DO 10481 I=1,MIN(ISETC(NPDATA+J),ISETD(NPDATA+J))
      DATBUF(L)=DATBUF(K)
      K=K+ISETC(NINDAT+J)
      L=L+ISETD(NINDAT+J)
10481 CONTINUE
10482 CONTINUE
      ENDIF
10471 CONTINUE
10472 CONTINUE
      DO 10491 M=0,NCMAX
      K=ISETC(NXDATA+4+M)
      L=ISETD(NXDATA+4+M)
      IF (DATBUF(K).ne.HNONE .and. DATBUF(L).ne.HNONE ) THEN
      DO 10501 I=1,MIN(ISETC(NLDAT)-N1L+1,ISETD(NLDAT)-N2L+1)
      K=ISETC(NXDATA+4+M)
      L=ISETD(NXDATA+4+M)
      DO 10511 J=1,MIN(ISETC(NPDATA)-N1P+1,ISETD(NPDATA)-N2P+1)
      DATBUF(L)=DATBUF(K)
      K=K+ISETC(NINDAT)
      L=L+ISETD(NINDAT)
10511 CONTINUE
10512 CONTINUE
      ISETC(NXDATA+4+M)=ISETC(NXDATA+4+M)+ISETC(NINDAT+1)
      ISETD(NXDATA+4+M)=ISETD(NXDATA+4+M)+ISETD(NINDAT+1)
10501 CONTINUE
10502 CONTINUE
      ENDIF
10491 CONTINUE
10492 CONTINUE
      ENDIF
      END
      SUBROUTINE T2_PROJECT(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      LOGICAL LINTEG,LAVER,LSPLIT
      INTEGER ISET,IP,IL,NN4,IXYZ,INDEP1,INDEP2,IDEP
      INTEGER INC0,INC1,INC2
      INTEGER IDD,I,II,III,J,K,NBINS,IPNT, IMESH
      INTEGER INEXT,IOUT,IIN,IDSETS,IPOINT, INFSAVE, LSTSAVE
      REAL XM,XX,WIDTH,DEPTH,T,YINIT
      REAL T2MSHX,T2MSHY,T2MSHZ
      CHARACTER*7 CXYZ
      REAL DVEC(19),SUMDAT,YBEG,YEND,X0,X1,Y0,Y1,Z0,DZ0,DZ,YMIN,YMAX
      REAL DENOM,FAC
      REAL PARM(4)
      REAL HNONE
      EQUIVALENCE (IPNT,ICPOIN(1))
      EQUIVALENCE (IIN,IVRPTR(10))
      EQUIVALENCE (IOUT,IVRPTR(12))
      DATA HNONE /-666.666/
      N_NAME=-16
      C_NAME='Project        %'
      IXYZ=0
      LSPLIT=.false.
      LINTEG=.false.
      LAVER=.false.
      IIN=IVRPTR(12)
      INEXT=IVRPTR(12)
      IDSETS=0
      INDEP1=N_XDATA
      INDEP2=N_ZDATA
      IDEP=N_YDATA
      GOTO 10521
10550 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10521
10560 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10521
10570 CONTINUE
      LSPLIT=LTOKEN
      GOTO 10521
10580 CONTINUE
      LLOG=LTOKEN
      GOTO 10521
10590 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 10521
10600 CONTINUE
      LAVER=LTOKEN
      GOTO 10521
10610 CONTINUE
      LAPPEN=LTOKEN
      GOTO 10521
10620 CONTINUE
      LINTEG=LTOKEN
      GOTO 10521
10630 CONTINUE
      INFSAVE=INFOIN(3)
      LSTSAVE=NSTJOU
      IXYZ=INTEG
      LINTEG=LINTEG.or.LSPLIT
      DO 10641 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N1,N2,ISETD,HNONE,C_SELECT(:N_SELECT))
      IF(NP .lt. N1 .or. IBTYPE.ne.2)GOTO 10641
      IDD=NINCR0-1
      IF (IXYZ.eq.MESH1) THEN
      IP=NL
      IL=NP
      INC1=NINCR1*NINCR0
      INC2=NINCR0
      IMESH=1
      YBEG=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,0)
      YEND=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,NINCR1)
      ELSEIF (IXYZ.eq.MESH2) THEN
      IP=NP
      IL=NL
      INC2=NINCR0*NINCR1
      INC1=NINCR0
      IMESH=2
      YBEG=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,0)
      YEND=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,NINCR2)
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Wrong axis selected'),4)
      RETURN
      ENDIF
      YMIN=MIN(YBEG,YEND)
      YMAX=MAX(YBEG,YEND)
      YBEG=YMIN
      YEND=YMAX
      PARM(1)=YMIN
      PARM(2)=YMAX
      PARM(4)=1
      INFOIN(3)=INFSAVE
      NSTJOU=LSTSAVE
      CALL T2FTBY(INFOIN,CARDIN,PARM,11+16)
      IF (FLAGS(23)) RETURN
      NBINS=NINT(PARM(4))
      IF (MIN(PARM(1),PARM(2)) .gt. YEND .or. MAX(PARM(1),PARM(2)) .lt. 
     *YBEG ) CALL T2ERR(INFOIN,CARDIN,'*** Warning *** Range outside of 
     *mesh',4)
      DO 10651 III=1,NBINS
      XX=PARM(1)+PARM(3)*(III-1)
      XM=XX+PARM(3)
      IF (III .eq. NBINS) XM=PARM(2)
      YMIN=MIN(XX,XM)
      YMAX=MAX(XX,XM)
      IF(YMIN .gt. YEND)GOTO 10651
      IF(YMAX .lt. YBEG)GOTO 10651
      YMIN=MIN(MAX(YMIN,YBEG),YEND)
      YMAX=MIN(MAX(YMAX,YBEG),YEND)
      Y1=YBEG
      N3=0
      N4=IL
      DO 10661 I=1,IL
      Y0=Y1
      IF (IMESH.eq.1) THEN
      Y1=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,I+1)
      ELSE
      Y1=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,I+1)
      ENDIF
      WIDTH=Y1-Y0
      FAC=SIGN(1.,WIDTH)
      IF (FAC*(YMIN-Y0).ge.0 .and. FAC*(YMIN-Y1).lt.0) N3=I
      IF (FAC*(YMAX-Y0).ge.0 .and. FAC*(YMAX-Y1).lt.0) N4=I
10661 CONTINUE
10662 CONTINUE
      IF (N3.eq.0) N3=IL
      IF (N3.gt.N4) then
      I=N3
      N3=N4
      N4=I
      T=YMIN
      YMIN=YMAX
      YMAX=T
      ENDIF
      IF (N_NAME .lt. 0) THEN
      CALL T2GVNM(NCSIZE*(IXYZ-1)+N_XDATA,C_NAME(9:15))
      ENDIF
      CALL T2NEWS(IP,C_NAME(:ABS(N_NAME)))
      IF (FLAGS(23)) RETURN
      IPOINT=IPOINT+IP
      IDSETS=IDSETS+1
      INEXT=IVRPTR(8)
      IF (IMESH.eq.1) THEN
      Y0=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,N3)
      Y1=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,N4+1)
      X1=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,0)
      ELSE
      Y0=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,N3)
      Y1=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,N4+1)
      X1=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,0)
      ENDIF
      YINIT=Y0
      IF (.not.LSPLIT) THEN
      YMIN=Y0
      YMAX=Y1
      ENDIF
      DATDAT(1,1)=HNONE
      IF (LLOG) THEN
      CALL T2GVNM(NCSIZE*(IXYZ-1)+N_XDATA,CXYZ)
      WRITE(OUTSTR,*)  '  Project along ',CXYZ, ' From ',YMIN,' to ',YMA
     *X,' Set=',MAX(1,NDSETS)
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
      DO 10671 I=1,19
      DVEC(I)=0
10671 CONTINUE
10672 CONTINUE
      DVEC(N_SYMBOL)=SYMBOL
      DVEC(INDEP2)=(YMIN+YMAX)/2
      DVEC(INDEP2+1)=ABS(YMIN-YMAX)/2
      DVEC(IDEP)=0
      IF (IDD.ne.0) THEN
      I1=IM
      DO 10681 J=1,IP
      I1=I1+INC1
      IPNT=I1+N3*INC2+1
      DO 10691 I=N3,N4
      IF (DATBUF(IPNT).ne.0) GOTO 10700
      IPNT=IPNT+INC2
10691 CONTINUE
10692 CONTINUE
10681 CONTINUE
10682 CONTINUE
      IDD=0
      ENDIF
10700 CONTINUE
      I1=IM
      DZ0=1
      DO 10711 J=1,IP
      X0=X1
      IF (IMESH.eq.1) THEN
      X1=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,J+1)
      ELSE
      X1=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,J+1)
      ENDIF
      DVEC(INDEP1)=(X1+X0)/2
      DVEC(INDEP1+1)=ABS(X1-X0)/2
      I1=I1+INC1
      IPNT=I1+N3*INC2
      SUMDAT=0
      Y1=YINIT
      DZ=0
      DENOM=0
      DO 10721 I=N3,N4
      Z0=DATBUF(IPNT)
      IF (IDD.ne.0) DZ0=DATBUF(IPNT+1)**2
      IF (DZ0.gt.0) THEN
      FAC=1
      IF (LAVER) THEN
      FAC=1/DZ0
      ENDIF
      IF (LINTEG) THEN
      Y0=Y1
      IF (IMESH.eq.1) THEN
      Y1=T2MSHX(DATBUF(IM),NINCR0,NINCR1,NINCR2,I+1)
      ELSE
      Y1=T2MSHY(DATBUF(IM),NINCR0,NINCR1,NINCR2,I+1)
      ENDIF
      DEPTH=ABS(Y1-Y0)
      IF (DEPTH.eq.0) DEPTH=1
      IF (I.eq.N3) THEN
      FAC=FAC*ABS(Y1-YMIN)
      ELSEIF (I.eq.N4) THEN
      FAC=FAC*ABS(YMAX-Y0)
      ELSE
      FAC=FAC*DEPTH
      ENDIF
      IF (LSPLIT) FAC=FAC/DEPTH
      ENDIF
      DENOM=DENOM+FAC
      SUMDAT=SUMDAT+Z0*FAC
      DZ=DZ+FAC*DZ0
      ENDIF
      IPNT=IPNT+INC2
10721 CONTINUE
10722 CONTINUE
      IF (IDD.eq.0) DZ=0
      DZ=SQRT(DZ)
      IF (LAVER) THEN
      IF (DENOM.eq.0) DENOM=1
      DZ=DZ/DENOM
      SUMDAT=SUMDAT/DENOM
      ENDIF
      DVEC(IDEP)=SUMDAT
      DVEC(IDEP+1)=DZ
      DVEC(IDEP+2)=DZ
      DO 10731 K=1,NINCR
      DATBUF(INEXT)=DVEC(IVARBL(K))
      INEXT=INEXT+1
10731 CONTINUE
10732 CONTINUE
10711 CONTINUE
10712 CONTINUE
10651 CONTINUE
10652 CONTINUE
10641 CONTINUE
10642 CONTINUE
      GOTO 10521
10521 CALL TOKEN(INFOIN,CARDIN,'SETS,SELECT:S,SPLIT:Y,LOG:Y,NAME:S,ADD:N
     *,AVERAGE:Y,APPEND:Y,INTEGRATE:Y,X:1,Y:2,Z:3,;')
      GOTO (10522,10527,10525,10525,10525,10525,10521,10527, 10525),INTE
     *RP
10525 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10521
10527 GOTO ( 10550,10560,10570,10580,10590,10600,10600,10610,10620,10630
     *,10630,10630,10525),KEYORD
10522 CONTINUE
      IF (FLAGS(23)) RETURN
      IF (NDSETS .eq. IDSETS) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** No mesh data projected',4)
      ELSEIF (IXYZ.le.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** No axis selected'),4)
      ELSEIF (IPOINT .gt. 0) THEN
      IF ( .not. LAPPEN) THEN
      NDSETS=IDSETS
      NPOINT=IPOINT
      IOUT=IVRPTR(14)
      DO 10741 J=IIN,INEXT-1
      DATBUF(IOUT)=DATBUF(J)
      IOUT=IOUT+1
10741 CONTINUE
10742 CONTINUE
      ENDIF
      ENDIF
      END
      SUBROUTINE T2_FREQUENCY(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      CHARACTER*4 CXYZ(2)
      REAL HNONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      LOGICAL LSET(4,2),LXYZ(2)
      LOGICAL LDVEC(19),LNORMAL,LCVEC(2)
      LOGICAL LBINS(2),LMESH,LERROR,LSPLITX,LSPLITY
      LOGICAL LYV,LZV,LDX,LDY,LDZ
      LOGICAL LGAUS ,LAVER
      INTEGER IVALS,IN,ISSAV,IPSAV,NSTEP1,IPOINT
      REAL WGTMIN,WGT,FAC1,FAC2
      INTEGER ISET,INDEP,INDDEP,IDEP,IDDEP,IXYZ,JLIM, IZERO
      INTEGER I,J,K,M,N,IMIN,IMAX,JMIN,JPNT
      INTEGER MMIN,MMAX,NBINS,NROWS,NSTEP,NLIM
      REAL T2FRQF
      REAL PARM(4,2)
      REAL DVEC(19),SPREAD
      REAL XV,DX,AX,BX,ZX,DZX,WGTX,RWX,XLO,XHI
      REAL YV,DY,AY,BY,ZY,DZY,WGTY,RWY,YLO,YHI
      REAL ZV,DZ,DZ2,NDX
      EQUIVALENCE (XV,DVEC(N_XDATA)),(DX,DVEC(N_DXDATA))
      DATA HNONE /-666.666/
      DATA CXYZ/' (X ',' (Y '/
      IF (NPOINT.le.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** No data to bin'),4)
      RETURN
      ENDIF
      LGAUS=.true.
      DO 10751 I=1,19
      LDVEC(I)=.false.
10751 CONTINUE
10752 CONTINUE
      DO 10761 I=1,NINCR
      J=IVARBL(I)
      LDVEC(J)=.true.
10761 CONTINUE
10762 CONTINUE
      DO 10771 IXYZ=1,2
      LCVEC(IXYZ)=.false.
      LBINS(IXYZ)=.true.
      DO 10781 I=1,4
      LSET(I,IXYZ)=.false.
10781 CONTINUE
10782 CONTINUE
10771 CONTINUE
10772 CONTINUE
      IZERO=0
      LAVER=.false.
      N_NAME=3
      C_NAME='Bin'
      IVALS=0
      LERROR=.false.
      LMESH=.false.
      LNORMAL=.true.
      JLIM=0
      IXYZ=1
      LCVEC(1)=.true.
      GOTO 10791
10820 CONTINUE
      LAPPEN=LTOKEN
      GOTO 10791
10830 CONTINUE
      LAVER=LTOKEN
      GOTO 10791
10840 CONTINUE
      LLOG=LTOKEN
      GOTO 10791
10850 CONTINUE
      JLIM=2
      if (LDVEC(N_ZDATA)) JLIM=3
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      NLIM=MAX(2,NLIM)
      GOTO 10791
10860 CONTINUE
      LMESH=LTOKEN
      LCVEC(2)=.true.
      GOTO 10791
10870 CONTINUE
      LMONITOR=LTOKEN
      GOTO 10791
10880 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 10791
10890 CONTINUE
      LNORMAL=LTOKEN
      GOTO 10791
10900 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10791
10910 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10791
10920 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10791
10930 CONTINUE
      LBINS(IXYZ)=LTOKEN
      GOTO 10791
10940 CONTINUE
      CONTINUE
      GOTO 10791
10950 CONTINUE
      LERROR=LTOKEN
      GOTO 10791
10960 CONTINUE
      IVALS=0
      LBINS(INTEG)=LBINS(IXYZ)
      IXYZ=INTEG
      LCVEC(IXYZ)=.true.
      GOTO 10791
10970 CONTINUE
      I=INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      IF (IVALS.eq.3.or.LSET(I,IXYZ)) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Redundant value'),4)
      ELSEIF (I.le.2 .or. (FLOTNG.ge.1) .or. (I.eq.3.and.FLOTNG.ne.0)) T
     *HEN
      PARM(I,IXYZ)=FLOTNG
      LSET(I,IXYZ)=.true.
      IVALS=IVALS+1
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Value too small'),4)
      ENDIF
      ENDIF
      GOTO 10791
10791 CALL TOKEN(INFOIN,CARDIN,'APPEND:Y,AVERAGE:Y,LOG:Y,LIMITED,MESH:Y,
     *MONITOR:Y,NAME:S,NORMAL:Y,POINTS,SETS,SELECT:S,VALUES:N,WITH,ERROR
     *S:Y,X:1,Y:2,FROM:1,TO:2,BY:3,STEP:3,WIDTH:3,N:4,NUMBER:4,BINS:4,;'
     *)
      GOTO (10792,10797,10795,10795,10795,10795,10791,10797, 10795),INTE
     *RP
10795 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10791
10797 GOTO ( 10820,10830,10840,10850,10860,10870,10880,10890,10900,10910
     *,10920,10930,10940,10950,10960,10960,10970,10970,10970,10970,10970
     *,10970,10970,10970,10795),KEYORD
10792 CONTINUE
      IF (FLAGS(23)) RETURN
      CALL T2FPAR(INFOIN,CARDIN,PARM,LSET,N1,N2,N3,N4,NS1,NS2,LBINS,.tru
     *e.,1,TLIM ,C_SELECT(:N_SELECT),1)
      IF (FLAGS(23)) RETURN
      IF (LCVEC(2)) THEN
      INDEP=N_YDATA
      IDEP=N_ZDATA
      CALL T2FPAR(INFOIN,CARDIN,PARM(1,2),LSET(1,2),N1,N2,N3,N4,NS1,NS2 
     * ,LBINS(2),.true.,2,TLIM ,C_SELECT(:N_SELECT),1)
      IF (FLAGS(23)) RETURN
      NROWS=NINT(PARM(4,2))
      RWY=1./PARM(3,2)
      ELSE
      INDEP=N_ZDATA
      IDEP=N_YDATA
      NROWS=1
      ENDIF
      NBINS=NINT(PARM(4,1))
      RWX=1./PARM(3,1)
      INDDEP=INDEP+1
      IDDEP=IDEP+1
      LDX=LDVEC(N_DXDATA)
      LYV=LDVEC(INDEP)
      LDY=LDVEC(INDDEP)
      LZV=LDVEC(IDEP)
      LDZ=LDVEC(IDDEP)
      IF (LZV) THEN
      LZV=.false.
      DO 10991 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2  ,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF(IBTYPE.eq.2)GOTO 10991
      I3=ISETD(NXDATA+IDEP-N_XDATA)
      IF (DATBUF(I3) .EQ. HNONE) THEN
      LZV=.FALSE.
      GOTO 10992
      ENDIF
      DO 11001 I=N1,NP
      IF (DATBUF(I3).NE.0) THEN
      LZV=.true.
      GOTO 11002
      ENDIF
      I3=I3+NINCR
11001 CONTINUE
11002 CONTINUE
10991 CONTINUE
10992 CONTINUE
      ENDIF
      IF (LDZ) THEN
      LDZ=.false.
      DO 11011 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2  ,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF(IBTYPE.eq.2)GOTO 11011
      I3=ISETD(NXDATA+IDDEP-N_XDATA)
      IF (DATBUF(I3) .EQ. HNONE) THEN
      LDZ=.FALSE.
      GOTO 11012
      ENDIF
      DO 11021 I=N1,NP
      IF (DATBUF(I3).NE.0) THEN
      LDZ=.true.
      GOTO 11022
      ENDIF
      I3=I3+NINCR
11021 CONTINUE
11022 CONTINUE
11011 CONTINUE
11012 CONTINUE
      ENDIF
      IF (LMESH) I=I-4
      ISSAV=NDSETS
      IPSAV=NPOINT
      IF (LMESH) THEN
      NSTEP1=2*(NBINS+1)
      CALL T2NEWM(2,NBINS+1,NROWS+1,C_NAME(:N_NAME))
      IF (FLAGS(23)) RETURN
      CALL T2GDSET(ISSAV+1,1, 2 147 483 647  ,1, 2 147 483 647,ISETD,HNO
     *NE,'*')
      JMIN=I3
      DO 11031 I=1,NBINS
      DATBUF(I1)=PARM(1,1)+(I-0.5)*PARM(3,1)
      DATBUF(I4)=PARM(3,1)/2
      I1=I1+NINCR0
      I4=I4+NINCR0
11031 CONTINUE
11032 CONTINUE
      DO 11041 I=1,NROWS
      DATBUF(I2)=PARM(1,2)+(I-0.5)*PARM(3,2)
      DATBUF(I5)=PARM(3,2)/2
      I2=I2+NSTEP1
      I5=I5+NSTEP1
11041 CONTINUE
11042 CONTINUE
      ELSE
      DO 11051 I=1,NROWS
      IVRPTR(15)=1
      CALL T2NEWS(NBINS,C_NAME(:N_NAME))
      IF (FLAGS(23)) RETURN
11051 CONTINUE
11052 CONTINUE
      CALL T2GDSET(ISSAV+1,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE
     *,'*')
      NSTEP1=IENDAT-IBGDAT+1
      JMIN=IM
      ENDIF
      NSTEP=NINCR0
      JPNT=JMIN
      DY=0
      ZV=1
      DZ2=1
      IF (LZV .OR. LDZ) THEN
      ZV=0
      DZ2=0
      IF (LAVER) DZ2=1
      ENDIF
      WGTMIN=SQRT(1.0E-35)
      IPOINT=0
      DO 11061 J=1,19
      DVEC(J)=0
11061 CONTINUE
11062 CONTINUE
      SPREAD=1
      IF (LNORMAL) SPREAD=4
      MMIN=1
      MMAX=1
      LSPLITY=.false.
      DO 11071 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2  ,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF (IBTYPE.eq.2) THEN
      NP=-1
      ENDIF
      IF(NP .lt. N1)GOTO 11071
      DO 11081 I=N1,NP
      ICPOIN(1)=IM
      DO 11091 J=1,NINCR
      DVEC(IVARBL(J))=DATBUF(IM)
      IM=IM+1
11091 CONTINUE
11092 CONTINUE
      DO 11101 J=1,JLIM
      IF ( DVEC(NCSIZE*(J-1)+N_XDATA).lt.TLIM(J,1) .or. DVEC(NCSIZE*(J-1
     *)+N_XDATA).gt.TLIM(J,2)) GOTO 11110
11101 CONTINUE
11102 CONTINUE
      IPOINT=IPOINT+1
      IF (LDX) DX=ABS(DVEC(N_DXDATA))
      IF (LYV) THEN
      YV=DVEC(INDEP)
      IF (LDY) THEN
      DY=ABS(DVEC(INDDEP))
      ENDIF
      ENDIF
      IF (LZV) THEN
      ZV=DVEC(IDEP)
      IF (LDZ) THEN
      DZ2=DVEC(IDDEP)**2
      IF (LAVER .and. DZ2.eq.0) THEN
      IZERO=IZERO+1
      GOTO 11081
      ENDIF
      ENDIF
      ENDIF
      IF (LCVEC(2)) THEN
      YLO = YV-SPREAD*DY
      YHI = YV+SPREAD*DY
      MMIN = (YLO-PARM(1,2))*RWY+1.0
      IF (MMIN.GT.NROWS) GOTO 11110
      MMAX = (YHI-PARM(1,2))*RWY+1.0
      IF (MMAX.LE.0) GOTO 11110
      LSPLITY=MMIN.ne.MMAX
      MMIN=MAX(1,MMIN)
      MMAX=MIN(NROWS,MMAX)
      JPNT=JMIN+(MMIN-1)*NSTEP1
      IF (LSPLITY) THEN
      ZY = PARM(1,2)+PARM(3,2)*(MMIN-1)
      DZY = PARM(3,2)/DY
      IF (LNORMAL) THEN
      ZY = (ZY-YV)/DY
      AY = T2FRQF(ZY)
      ELSE
      DZY = 0.5*DZY
      AY = 0.5*(ZY-YLO)/DY
      ENDIF
      ENDIF
      ENDIF
      XLO = XV-SPREAD*DX
      XHI = XV+SPREAD*DX
      IMIN = ((XLO-PARM(1,1))*RWX + 1.0)
      IF (IMIN.GT.NBINS) GOTO 11110
      IMAX = ((XHI-PARM(1,1))*RWX + 1.0)
      IF (IMAX.LE.0) GOTO 11110
      LSPLITX=IMIN.ne.IMAX
      IMIN=MAX(1,IMIN)
      IMAX=MIN(NBINS,IMAX)
      WGTX=1
      WGTY=1
      DO 11121 M=MMIN-1,MMAX-1
      IF (LSPLITY) THEN
      JPNT=JMIN+M*NSTEP1
      IF (LNORMAL) THEN
      BY = AY
      ZY = ZY+DZY
      AY = T2FRQF(ZY)
      WGTY=MAX(1.00006*(AY-BY),WGTMIN)
      ELSE
      BY=MAX(AY,0.0)
      AY=MIN(DZY+AY,1.0)
      WGTY=MIN(MAX(AY-BY,0.0),1.0)
      ENDIF
      ENDIF
      IF (LSPLITX) THEN
      ZX = PARM(1,1)+PARM(3,1)*(IMIN-1)
      DZX = PARM(3,1)/DX
      IF (LNORMAL) THEN
      ZX = (ZX-XV)/DX
      AX = T2FRQF(ZX)
      ELSE
      DZX = 0.5*DZX
      AX = 0.5*(ZX-XLO)/DX
      ENDIF
      WGTX=0
      ENDIF
      DO 11131 J=IMIN-1,IMAX-1
      K = J*NSTEP+JPNT
      ICPOIN(2)=K
      IF (LSPLITX) THEN
      IF (LNORMAL) THEN
      BX = AX
      ZX = ZX+DZX
      AX = T2FRQF(ZX)
      WGTX=MAX(1.00006*(AX-BX),WGTMIN)
      ELSE
      BX=MAX(AX,0.0)
      AX=MIN(DZX+AX,1.0)
      WGTX=MIN(MAX(AX-BX,0.0),1.0)
      ENDIF
      ENDIF
      WGT=WGTX*WGTY
      IF (LAVER) THEN
      WGT=DZ2/WGT
      IF (DATBUF(K+1).gt.0) THEN
      FAC1=WGT/(DATBUF(K+1)+WGT)
      FAC2=DATBUF(K+1)/(DATBUF(K+1)+WGT)
      ELSE
      FAC2=1 
      FAC1=0
      ENDIF
      DATBUF(K) = FAC2*ZV + FAC1*DATBUF(K)
      DATBUF(K+1)=FAC2**2*WGT + FAC1**2*DATBUF(K+1)
      IF (LYV.and..not.LMESH) THEN
      DATBUF(K+2)=FAC1*DATBUF(K+2)+FAC2*YV*ZV
      IF (LDY) DATBUF(K+3)=FAC1*DATBUF(K+3)+ FAC2*(YV**2+DY**2)*ZV*WGT
      ENDIF
      ELSE
      DATBUF(K)=DATBUF(K)+ZV*WGT
      DATBUF(K+1)=DATBUF(K+1)+DZ2*WGT
      IF (LYV.and..not.LMESH) THEN
      DATBUF(K+2)=DATBUF(K+2)+YV*ZV*WGT
      IF (LDY) DATBUF(K+3)=DATBUF(K+3)+ (YV**2+DY**2)*ZV*WGT
      ENDIF
      ENDIF
11131 CONTINUE
11132 CONTINUE
11121 CONTINUE
11122 CONTINUE
11110 CONTINUE
11081 CONTINUE
11082 CONTINUE
11071 CONTINUE
11072 CONTINUE
      IF (IZERO.gt.0) THEN
      WRITE(OUTSTR,*)'*** WARNING *** Ignored ',IZERO,' points with ERRO
     *R=0.0'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ENDIF
      IF (LMESH) THEN
      CALL T2GDSET(NDSETS,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      IF (.not.LERROR) THEN
      NMESH0=1
      I=IM
      DO 11141 J=IM,IENDAT,2
      DATBUF(I)=DATBUF(J)
      I=I+1
11141 CONTINUE
11142 CONTINUE
      DATBUF(IBGDAT+2)=DATBUF(IBGDAT+2)-(IVRPTR(12)-I)
      DATBUF(IM-3)=1
      IVRPTR(12)=I
      ENDIF
      ELSE
      DO 11151 J=1,19
      DVEC(J)=0
11151 CONTINUE
11152 CONTINUE
      DVEC(N_SYMBOL)=SYMBOL
      DVEC(N_DXDATA)=PARM(3,1)/2
      DVEC(N_NDXDATA)=DVEC(N_DXDATA)
      DVEC(N_DYDATA)=PARM(3,2)/2
      DVEC(N_NDYDATA)=DVEC(N_DYDATA)
      DO 11161 ISET=ISSAV+1,NDSETS
      CALL T2GDSET(ISET,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,'*
     *')
      DVEC(INDEP) = PARM(1,2)+(ISET-ISSAV+0.5)*PARM(3,2)
      DVEC(INDDEP)= PARM(3,2)
      DO 11171 I=1,NP
      DVEC(N_XDATA) = PARM(1,1)+(I-0.5)*PARM(3,1)
      DVEC(IDEP) = DATBUF(IM)
      WGT=ABS(DATBUF(IM+1))
      DVEC(IDDEP) = SQRT(WGT)
      DVEC(IDDEP+1) = DVEC(IDDEP)
      IF (LYV.and.DVEC(N_YDATA).ne.0.and..not.LCVEC(2)) THEN
      IF (LDY) THEN
      DVEC(N_DZDATA)=  SQRT(ABS(DATBUF(IM+3)/DVEC(N_YDATA)-DVEC(N_ZDATA)
     ***2))
      ENDIF
      DVEC(N_ZDATA)=DATBUF(IM+2)/DVEC(N_YDATA)
      ENDIF
      DO 11181 J=1,NINCR
      DATBUF(IM)=DVEC(IVARBL(J))
      IM=IM+1
11181 CONTINUE
11182 CONTINUE
11171 CONTINUE
11172 CONTINUE
11161 CONTINUE
11162 CONTINUE
      ENDIF
      IF (.not.LAPPEN) THEN
      CALL T2GDSET(ISSAV+1,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE
     *,'*')
      I=IVRPTR(14)
      NPOINT=NROWS*NBINS
      NDSETS=NDSETS-ISSAV
      DO 11191 J=IBGDAT,IVRPTR(12)-1
      DATBUF(I)=DATBUF(J)
      I=I+1
11191 CONTINUE
11192 CONTINUE
      IVRPTR(12)=I
      ISSAV=0
      ENDIF
      DATDAT(1,1)=HNONE
      IF (LLOG) THEN
      IMAX=1
      IF (LCVEC(2)) IMAX=2
      WRITE(OUTSTR,'(A,I6,A,I6,1P,2(2A,3(G10.3,A)))')  '  Bin ',IPOINT,'
     * pts Set(s)=',NDSETS-ISSAV, (CXYZ(I),'From',PARM(1,I),' to',PARM(2
     *,I),' by',Parm(3,I),')'  ,I=1,IMAX)
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
      IF (LMONITOR) THEN
      CALL TXVOID
      CALL TXNEXT
      CALL T2REST
      CALL T2GDSET(NDSETS,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      NXYLIM(3,1)=NDSETS
      NXYLIM(3,2)=NDSETS
      IF (IBTYPE .eq. 1) THEN
      CALL T2HIST(DATBUF(I1),DATBUF(I2),DATBUF(I3), DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), 0,0,NP-N1+1,NINCR0, HNONE,HNONE,HNONE)
      ELSE
      CALL T23JIN(DATBUF(IM),NMESH0,NMESH1,NMESH2,0,0, 1,NP,1,NL)
      ENDIF
      CALL T2_PLOT_TITLE(NDSETS,.false.)
      CALL TXVOID
      ENDIF
      END
      SUBROUTINE T2_SORT(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      REAL HNONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER LDVEC(19)
      REAL DVEC(19),TEMP
      INTEGER ISORT(19),NSORT,JLIM,NLIM,JSORT,I,J,K,L
      INTEGER ISET,JMIN,IMIN,IMAX,ISETS,IPOINT
      INTEGER IAND,IOR
      DATA HNONE /-666.666/
      IF (NPOINT.le.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** No data to sort'),4)
      RETURN
      ENDIF
      DO 11201 I=1,19
      LDVEC(I)=0
11201 CONTINUE
11202 CONTINUE
      DO 11211 I=1,NINCR
      J=IVARBL(I)
      LDVEC(J)=I
11211 CONTINUE
11212 CONTINUE
      N_NAME=1
      C_NAME='%'
      NSORT=0
      JSORT=0
      GOTO 11221
11250 CONTINUE
      INTEG=I_VORDER(INTEG,1)
      I=2**INTEG
      IF (IAND(JSORT,I).ne.0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Duplicate field',4)
      ELSEIF (LDVEC(INTEG).ne.0) THEN
      JSORT=IOR(JSORT,I)
      NSORT=NSORT+1
      ISORT(NSORT)=LDVEC(INTEG)
      ELSE
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Nonexistant coordinate',4)
     *
      ENDIF
      GOTO 11221
11260 CONTINUE
      LLOG=LTOKEN
      GOTO 11221
11270 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 11221
11280 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 11221
11290 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 11221
11300 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 11221
11310 CONTINUE
      LAPPEN=LTOKEN
      GOTO 11221
11320 CONTINUE
      JLIM=2
      if (LDVEC(N_ZDATA).ne.0) JLIM=3
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      NLIM=MAX(2,NLIM)
      GOTO 11221
11221 CALL TOKEN(INFOIN,CARDIN,'SYMBOL:1,X:2,DX:3,Y:4,DY:5,Z:6,DZ:7,NDX:
     *8,NDY:9,NDZ:10,U:11,DU:12,NDU:13,V:14,DV:15,NDV:16,W:17,DW:18,NDW:
     *19,THETA:2,DTHETA:3,RADIUS:4,DRADIUS:5,PHI:6,DPHI:7,NDTHETA:8,NDRA
     *DIUS:9,NDPHI:10,LOG:Y,POINTS,SETS,SELECT:S,NAME:S,APPEND:Y,LIMITED
     *,;')
      GOTO (11222,11227,11225,11225,11225,11225,11221,11227, 11225),INTE
     *RP
11225 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 11221
11227 GOTO ( 11250,11250,11250,11250,11250,11250,11250,11250,11250,11250
     *,11250,11250,11250,11250,11250,11250,11250,11250,11250,11250,11250
     *,11250,11250,11250,11250,11250,11250,11250,11260,11270,11280,11290
     *,11300,11310,11320,11225),KEYORD
11222 CONTINUE
      IF (FLAGS(23)) RETURN
      DO 11331 I=1,19
      IF (LDVEC(I).ne.0.and. IAND(2**I,JSORT).eq.0) THEN
      NSORT=NSORT+1
      ISORT(NSORT)=LDVEC(I)
      ENDIF
11331 CONTINUE
11332 CONTINUE
      ISETS=1
      IPOINT=0
      DO 11341 ISET=NS1,NS2
      ISETS=ISETS+1
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,HNONE,C_SELECT(:N_SELECT))
      IF (IBTYPE.eq.2) NP=-1
      IF(NP .lt. N1)GOTO 11341
      IMIN=IM
      NP=NP-N1+1
      IF (LAPPEN.and.NP.gt.0) THEN
      CALL T2NEWS(NP,C_NAME(:N_NAME))
      IF (FLAGS(23)) RETURN
      I=IVRPTR(8)
      DO 11351 J=1,NP*NINCR0
      DATBUF(I)=DATBUF(IM)
      IM=IM+1
      I=I+1
11351 CONTINUE
11352 CONTINUE
      IMIN=IVRPTR(8)
      ENDIF
      IMAX=IMIN+NP*NINCR0-1
      DO 11361 I=IMIN,IMAX,NINCR0
      IPOINT=IPOINT+1
      JMIN=0
      DO 11371 K=1,NINCR0
      DVEC(K)=DATBUF(I+K-1)
11371 CONTINUE
11372 CONTINUE
      DO 11381 J=I,IMAX,NINCR0
      DO 11391 K=1,NSORT
      IF (DATBUF(J+ISORT(K)-1) .gt. DVEC(ISORT(K))) THEN
      GOTO 11392
      ELSEIF (DATBUF(J+ISORT(K)-1) .lt. DVEC(ISORT(K))) THEN
      JMIN=J
      DO 11401 L=1,NINCR0
      DVEC(L)=DATBUF(J+L-1)
11401 CONTINUE
11402 CONTINUE
      GOTO 11392
      ENDIF
11391 CONTINUE
11392 CONTINUE
11381 CONTINUE
11382 CONTINUE
      IF (JMIN.ne.0) THEN
      DO 11411 K=1,NINCR0
      DATBUF(JMIN+K-1)=DATBUF(I+K-1)
      DATBUF(I+K-1)=DVEC(K)
11411 CONTINUE
11412 CONTINUE
      ENDIF
11361 CONTINUE
11362 CONTINUE
11341 CONTINUE
11342 CONTINUE
      IF (LLOG .or. IPOINT .eq. 0) THEN
      WRITE(OUTSTR,*)  '  Sorted ',IPOINT,' points Set=',MAX(1,ISETS)
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
      END
      SUBROUTINE T2FHIS(ISET,IXYZ,N1,N2,N3,N4,LHIS,NCHAN,X0,XS)
      IMPLICIT NONE
      INTEGER ISET,IXYZ,NCHAN
      LOGICAL LHIS
      REAL X0,XS
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      INTEGER N1,N2,N3,N4,I,J,K,M,N
      REAL DT,T,T0,DVAL,DV,DV0,CHAN,FAC
      DATA HNONE /-666.666/
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,HNONE,'*')
      J=ABS(IXYZ)
      IF (IBTYPE.eq.2) THEN
      J=MESHN(J)
      IF (J.ge.3) RETURN
      IF (J.eq.2) NINCR0=NINCR0*NINCR1
      ENDIF
      K=ISETD(NCSIZE*(J-1)+NDXDATA)
      J=ISETD(NCSIZE*(J-1)+NXDATA)
      IF (DATBUF(K).eq.HNONE)K=0
      IF (IXYZ.lt.0) K=0
      LHIS=.FALSE.
      IF (DATBUF(J).eq.HNONE) RETURN
      IF (NP.le.N1) RETURN
      T0=DATBUF(J)
      X0=DATBUF(J)
      NCHAN=NP-N1+1
      CHAN=NCHAN-1
      DT=DATBUF(J+NINCR0*(NP-N1))-DATBUF(J)
      XS=DT/CHAN
      DVAL=ABS(0.01*XS)
      IF (K.ne.0) DV0=DATBUF(K)
      DO 11421 I=N1,NP
      T=DATBUF(J)
      J=J+NINCR0
      IF (K.ne.0) THEN
      DV=DATBUF(K)
      K=K+NINCR0
      IF (ABS(DV-DV0) .ge. DVAL) RETURN
      ENDIF
      FAC=(I-N1)/CHAN
      IF (ABS((T-T0)-FAC*DT).ge. DVAL) RETURN
11421 CONTINUE
11422 CONTINUE
      LHIS=.TRUE.
      END
      SUBROUTINE T2FPAR(INFOIN,CARDIN,PARM,LSET,N1,N2,N3,N4,NS1,NS2  ,LB
     *INS,LGET,IXYZ,TLIM,NAME,IMESH)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      REAL HNONE
      LOGICAL LSET(4),LBINS,LGET
      CHARACTER*6 CFRTO(4)
      CHARACTER*(*) NAME
      INTEGER IBUFF(2),ISUM,IXYZ,IVALS,I,J,K,M,N
      INTEGER JSETS,NBINS,ISET,NS1,NS2,N1,N2,N3,N4,IMESH
      INTEGER IDXYZ(3,2),INXYZ(3,2),IDNXYZ(3)
      INTEGER T2BTRIM
      REAL BUFFR(2),T,TD,T0,SUM1,SUM2
      REAL TLIM(3,2)
      REAL XPARM(6),PARM(4)
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER IAND
      DATA HNONE /-666.666/
      DATA CFRTO/'FROM,','TO,','BY,','N,'/
      IVALS=0
      DO 11431 I=1,4
      IF (LSET(I)) IVALS=IVALS+1
11431 CONTINUE
11432 CONTINUE
      IF (.not.LGET .and. IVALS.lt.3) THEN
      OUTSTR=' '
      DO 11441 I=1,4
      IF (.not. LSET(I)) THEN
      OUTSTR(T2BTRIM(OUTSTR)+1:)=CFRTO(I)
      ENDIF
11441 CONTINUE
11442 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing either'//OUTSTR(:T
     *2BTRIM(OUTSTR)-1),4)
      RETURN
      ELSEIF (IVALS.LT.3) THEN
      JSETS=0
      ISUM=0
      XPARM(3)=0
      XPARM(1)=1.0E35
      XPARM(2)=-1.0E35
      XPARM(5)=1.0E35
      XPARM(6)=-1.0E35
      SUM1=0
      SUM2=0
      DO 11451 ISET=NS1,NS2
      CALL T2GDSET(NS1,N1,N2,N3,N4,ISETD,TLIM,NAME)
      IF(IAND(IBTYPE,IMESH) .eq. 0)GOTO 11451
      TD=0
      DO 11461 I=1,3
      IDXYZ(I,1)=NINCR0
      IDXYZ(I,2)=NINCR0*NINCR1
      IDNXYZ(MESHN(I))=ISETD(NCSIZE*(I-1)+NDXDATA)
      INXYZ(MESHN(I),1)=ISETD(NCSIZE*(I-1)+NXDATA)
11461 CONTINUE
11462 CONTINUE
      IF(INXYZ(IXYZ,1) .le. 1)GOTO 11451
      IF (IBTYPE.ne.1) THEN
      IDXYZ(MESH2,1)=0
      IDXYZ(MESH1,2)=0
      IF ( IXYZ .eq. MESH1 ) NL=MIN(NL,N3)
      IF ( IXYZ .eq. MESH2 ) NP=MIN(NP,N1)
      ENDIF
      JSETS=MAX(JSETS,(NP-N1+1)*(NL-N3+1))
      T0=DATBUF(INXYZ(IXYZ,1))
      DO 11471 M=N3,NL
      INXYZ(IXYZ,2)=INXYZ(IXYZ,1)
      DO 11481 N=N1,NP
      T=DATBUF(INXYZ(IXYZ,1))
      IF (IDNXYZ(IXYZ) .gt. 1) THEN
      TD=ABS(DATBUF(INXYZ(IXYZ,1)+1))
      ENDIF
      INXYZ(IXYZ,1)=INXYZ(IXYZ,1)+IDXYZ(IXYZ,1)
      XPARM(1)=MIN(T,XPARM(1))
      XPARM(2)=MAX(T,XPARM(2))
      XPARM(5)=MIN(T-TD,XPARM(5))
      XPARM(6)=MAX(T+TD,XPARM(6))
      IF (T.ne.T0) THEN
      ISUM=ISUM+1
      XPARM(3)=XPARM(3)+ABS(T-T0)
      T0=T
      ENDIF
11481 CONTINUE
11482 CONTINUE
      INXYZ(IXYZ,1)=INXYZ(IXYZ,2)+IDXYZ(IXYZ,2)
11471 CONTINUE
11472 CONTINUE
11451 CONTINUE
11452 CONTINUE
      IF (JSETS.ge.4 .and. XPARM(3).gt.0) THEN
      XPARM(3)=XPARM(3)/ISUM
      DO 11491 ISET=NS1,NS2
      CALL T2GDSET(NS1,N1,N2,N3,N4,ISETD,HNONE,NAME)
      IF(IAND(IBTYPE,IMESH) .eq. 0)GOTO 11491
      DO 11501 I=1,3
      IDXYZ(I,1)=NINCR0
      IDXYZ(I,2)=NINCR0*NINCR1
      INXYZ(MESHN(I),1)=ISETD(NCSIZE*(I-1)+NXDATA)
11501 CONTINUE
11502 CONTINUE
      IF(INXYZ(IXYZ,1) .le. 1)GOTO 11491
      IF (IBTYPE.ne.1) THEN
      IDXYZ(MESH2,1)=0
      IDXYZ(MESH1,2)=0
      IF ( IXYZ .eq. MESH1 ) NL=MIN(NL,N3)
      IF ( IXYZ .eq. MESH2 ) NP=MIN(NP,N1)
      ENDIF
      DO 11511 M=N3,NL
      INXYZ(IXYZ,2)=INXYZ(IXYZ,1)
      DO 11521 N=N1,NP
      T=DATBUF(INXYZ(IXYZ,1))
      T=ABS((T-XPARM(1))/XPARM(3))
      IF (ABS(NINT(T)-T).gt.0.01) GOTO 11530
      INXYZ(IXYZ,1)=INXYZ(IXYZ,1)+IDXYZ(IXYZ,1)
11521 CONTINUE
11522 CONTINUE
      INXYZ(IXYZ,1)=INXYZ(IXYZ,2)+IDXYZ(IXYZ,2)
11511 CONTINUE
11512 CONTINUE
11491 CONTINUE
11492 CONTINUE
      IF (LBINS) THEN
      XPARM(1)=XPARM(1)-XPARM(3)/2
      XPARM(2)=XPARM(2)+XPARM(3)/2
      ENDIF
      DO 11541 I=1,3
      IF (.not.LSET(I).and.IVALS.lt.3) THEN
      PARM(I)=XPARM(I)
      LSET(I)=.true.
      IVALS=IVALS+1
      ENDIF
11541 CONTINUE
11542 CONTINUE
      ENDIF
11530 CONTINUE
      IF (IVALS.lt.3) THEN
      XPARM(1)=XPARM(5)
      XPARM(2)=XPARM(6)
      DO 11551 I=1,4
      IF (LSET(I)) XPARM(I)=PARM(I)
11551 CONTINUE
11552 CONTINUE
      CALL TDSLIN(XPARM(1),XPARM(2), NXYZ1(1),NXYZ2(1),SCLPRM(1,1),2, NB
     *INS,BUFFR,IBUFF)
      XPARM(1) = BUFFR(1)
      XPARM(3) = BUFFR(2)-BUFFR(1)
      if (XPARM(3).eq.0) XPARM(3)=1.
      IF (.not.LBINS) XPARM(1)=XPARM(1)+XPARM(3)/2
      DO 11561 I=1,3
      IF (.not.LSET(I).and.IVALS.lt.3) THEN
      PARM(I)=XPARM(I)
      LSET(I)=.true.
      IVALS=IVALS+1
      ENDIF
11561 CONTINUE
11562 CONTINUE
      ENDIF
      ENDIF
      IF (LSET(4)) THEN
      IF (PARM(4).gt.99999) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Too many bins'),3)
      RETURN
      ENDIF
      NBINS = NINT(PARM(4))
      IF (.not.LBINS) NBINS=NBINS-1
      IF (NBINS.lt.1) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Number of bins too small'),3)
      RETURN
      ENDIF
      ENDIF
      IF (.not.LSET(1))THEN
      PARM(1)=PARM(2)-PARM(3)*NBINS
      ELSEIF (.not.LSET(2)) THEN
      PARM(2)=PARM(1)+PARM(3)*NBINS
      ELSEIF (.not.LSET(3)) THEN
      PARM(3)=(PARM(2)-PARM(1))/NBINS
      ELSEIF (.not.LSET(4)) THEN
      PARM(4)=(PARM(2)-PARM(1))/PARM(3)
      IF (PARM(4).lt.0) THEN
      PARM(3)=-PARM(3)
      PARM(4)=-PARM(4)
      ENDIF
      IF (PARM(4).gt.99999) THEN
      CALL T2ERR(0,' ',('*** ERROR *** Too many bins'),3)
      RETURN
      ENDIF
      NBINS=MAX(1.0,PARM(4))
      IF (NBINS.lt.PARM(4)) THEN
      NBINS=NBINS+1
      ENDIF
      PARM(2)=PARM(1)+PARM(3)*NBINS
      ENDIF
      IF (.not.LBINS) THEN
      PARM(1)=PARM(1)-PARM(3)/2
      PARM(2)=PARM(2)+PARM(3)/2
      NBINS=NBINS+1
      ENDIF
      PARM(4)=NBINS
      DO 11571 I=1,4
      LSET(I)=.true.
11571 CONTINUE
11572 CONTINUE
      END
      SUBROUTINE T2_VALUE(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10),INFO1(10)
      CHARACTER*(*) CARDIN
      CHARACTER*512 CARD1
      CHARACTER*9 CORD
      CHARACTER*4 CFRTO(4)
      CHARACTER*16 CORD1
      CHARACTER*1 COPER(7)
      REAL HNONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL PARM(4)
      LOGICAL LPOIS, LSET(4)
      LOGICAL LRESET, LSETS, LERR, LNERR, LNOMES, LN5
      INTEGER IOP, IBINS, T2BTRIM
      INTEGER I,II,J,K,N5,N6,IPTR(6),IPOINT,JPOINT
      INTEGER IVALS,MIND,MINR,MD,MR,ME,ID,IR,IE,IMAX,IXYZ
      INTEGER ISET, NLIM, IORD(3)
      LOGICAL JORD
      REAL SAMPLE,ERROR,VALUE(2),TEMP1,TEMP2,TEMP3,XNSTEP
      DATA CFRTO/' ',' To:',' By:','N:'/
      DATA COPER/' ',' ','*','+','/','-',' '/
      DATA HNONE /-666.666/
      CORD1=' '
      IF (INTEG .gt. 100) THEN
      FLAGS(27)=.true.
      IF (INTEG.gt.200)FLAGS(91)=.true.
      INTEG=MOD(INTEG,100)
      ENDIF
      ID=I_VORDER(INTEG,1)
      IR=0
      N_NAME=1
      C_NAME=' '
      IXYZ=(ID-N_XDATA)/NCSIZE+1
      CALL T2GVNM(ID,CORD)
      IF (MOD(ID-N_XDATA,NCSIZE).eq.0 .and. (ID-N_XDATA)/NCSIZE .lt.3) T
     *HEN
      IE=1
      ELSE
      IE=0
      ENDIF
      LNOMES=.true.
      LRESET=FLAGS(28).and. MOD(ID-N_XDATA,NCSIZE) .eq.0  .and. (ID-N_XD
     *ATA)/NCSIZE .lt. 3
      LSETS=.false.
      LAPPEN=NDSETS.le.0
      IBINS = 0
      LPOIS=.false.
      DO 11581 I=1,4
      LSET(I)=.FALSE.
      PARM(I)=0.
11581 CONTINUE
11582 CONTINUE
      DO 11591 I=1,2
      IORD(I)=2
11591 CONTINUE
11592 CONTINUE
      JORD=.true.
      IOP=0
      IVALS=0
      SAMPLE=0
      ERROR=-1
      INFO1(1)=0
      GOTO 11601
11630 CONTINUE
      LSETS=.true.
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      IF (FLAGS(23)) RETURN
      GOTO 11640
11650 CONTINUE
      LSETS=.true.
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 11640
11660 CONTINUE
      LSETS=.true.
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 11640
11670 CONTINUE
      LSETS=.true.
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 11640
11680 CONTINUE
      LSETS=.true.
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 11640
11690 CONTINUE
      LLOG=LTOKEN
      GOTO 11601
11700 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 11601
11710 CONTINUE
      FLOTNG=1
      I=3
      GOTO 11720
11730 CONTINUE
      IE=0
      GOTO 11601
11740 CONTINUE
      IF (ID .ne. IR .and. IR .ne.0) GOTO 11750
      IF (IE.eq.0) GOTO 11750
      ERROR=FLOTNG**2
      GOTO 11601
11760 CONTINUE
      IF (NDSETS.ne.0) LAPPEN=LTOKEN
      GOTO 11640
11770 CONTINUE
      LSETS=.true.
      LPOIS=.true.
      SAMPLE=FLOTNG
      IF (IOP.eq.0) IOP=1
      IF (IR.eq.0) IR=NCSIZE*((ID-N_XDATA)/NCSIZE)+N_XDATA
      I=INDEX(CORD,' ')-1
      IF (I.le.0) I=LEN(CORD)
      CORD1='SQRT('//CORD(2:I)//')'
      IF (JORD) THEN
      JORD=.false.
      IORD(1)=1
      ENDIF
      GOTO 11640
11780 CONTINUE
      IBINS=INTEG
      GOTO 11601
11790 CONTINUE
      I=INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      IF ((FLOTNG.lt.1 .and. I.eq.4) .or. (FLOTNG.eq.0 .and. I.eq.3)) TH
     *EN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Bad value'),4)
      ENDIF
      GOTO 11720
      ENDIF
      GOTO 11601
11810 CONTINUE
      LSETS=.true.
      IF (IOP .gt. 1) GOTO 11750
      IOP=INTEG
      GOTO 11640
11820 CONTINUE
      LSETS=.true.
      IF (IOP.eq.0) IOP=1
      IF (INTEG .gt. 100) THEN
      FLAGS(27)=.true.
      IF (INTEG.gt.200)FLAGS(91)=.true.
      INTEG=MOD(INTEG,100)
      ENDIF
      INTEG=I_VORDER(INTEG,1)
      IR=INTEG
      CALL T2GVNM(IR,CORD1)
      IF (IR.ne.ID .and. ERROR.ge.0) GOTO 11750
      IF (JORD) THEN
      JORD=.false.
      IORD(1)=1
      ENDIF
      GOTO 11601
11610 GOTO ( 11630,11650,11660,11660,11670,11680,11680,11690,11700,11710
     *,11730,11740,11760,11770,11770,11770,11780,11780,11790,11790,11790
     *,11790,11790,11790,11810,11810,11810,11810,11810,11810,11810,11810
     *,11820,11820,11820,11820,11820,11820,11820,11820,11820,11820,11820
     *,11820,11820,11820,11820,11820,11820,11820,11820,11820,11820,11820
     *,11820,11820,11820,11605),KEYORD
11830 CONTINUE
      I=1
11720 CONTINUE
      IF (LSET(I)) goto 11750
      PARM(I)=FLOTNG
      LSET(I)=.true.
      IF (JORD) THEN
      JORD=.false.
      IORD(2)=1
      ENDIF
11840 CONTINUE
      IVALS=IVALS+1
11640 CONTINUE
      IF (IVALS.gt.3 ) GOTO 11750
      LAPPEN=LAPPEN .or. LSET(4)
      IF (INFO1(1).gt.0 .and. (IVALS+IOP.gt.0.or.LPOIS .or.LAPPEN.or. IR
     *.gt.0)) GOTO 11750
      IF (LSETS .and. (LAPPEN.or.IVALS.ge.3)) GOTO 11750
      IF ((LSET(2).or.LSET(3).or.LSET(4)) .and. (IOP.gt.1.or.IR.gt.0)) g
     *oto 11750
      GOTO 11601
11850 CONTINUE
      IF (NSTRNG.gt.0) THEN
      CARD1='<'//STRNG(1:NSTRNG)//'>'
      INFO1(1)=NSTRNG+2
      LSETS=.true.
      CORD1=' Eqn:'
      GOTO 11640
      ENDIF
      GOTO 11601
11601 CALL TOKEN(INFOIN,CARDIN,'SETS,SELECT:S,POINTS,COLUMNS,LIMITED,LIN
     *ES,ROWS,LOG:Y,NAME:S,INTEGERS,NOERROR,ERROR:0::0,APPEND:Y,SAMPLES:
     *1::0,POISSON:0,SQRT:0,VALUES:0,BINS:1,FROM:1,TO:2,STEP:3,BY:3,WIDT
     *H:3,N:4,*:2,TIMES:2,+:3,PLUS:3,/:+4,DIVIDE:4,-:5,MINUS:5,X:2,DX:3,
     *Y:4,DY:5,Z:6,DZ:7,NDX:8,NDY:9,NDZ:10,U:11,DU:12,NDU:13,V:14,DV:15,
     *NDV:16,W:17,DW:18,NDW:19,THETA:102,DTHETA:103,RADIUS:104,DRADIUS:1
     *05,PHI:206,DPHI:207,,;')
      GOTO (11602,11610,11830,11830,11850,11605,11605,11610,11605),INTER
     *P
11605 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 11601
11602 CONTINUE
      IF (JORD) THEN
      JORD=.false.
      IORD(1)=1
      ENDIF
      IF ( FLAGS(23) ) RETURN
      IF (IR.ne.0 .and. IVALS .gt. 0 .and. iop .eq. 1) IOP=2
      IF (IR.eq.0) IR=ID
      IF (IR.ne.ID ) IE=0
      LSETS=LSETS .or.  ((IVALS.lt.3) .and. (.not. LAPPEN))
      IF (LSETS) THEN
      LAPPEN=.false.
      DO 11861 ISET=NS2,NS1,-1
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF (FLAGS(23)) RETURN
      NP=NP-N1+1
      NL=NL-N3+1
      IF (ISETD(NBTYPE).eq.2) THEN
      IF ((ID-N_XDATA)/NCSIZE .ne. (IR-N_XDATA)/NCSIZE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Mismatched coordinates:' 
     *//CORD//' '//CORD1),4)
      RETURN
      ENDIF
      CALL T2MSDA(ISETD)
      IF (IXYZ.eq.MESH3) THEN
      NP=NL*NP
      ELSEIF (IXYZ.eq.MESH2) THEN
      NP=NL
      ENDIF
      ENDIF
      IF (DATBUF(ISETD(NXDATA+ID-N_XDATA)).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Nonexistant coordinate:'/
     */CORD),4)
      RETURN
      ELSEIF (DATBUF(ISETD(NXDATA+IR-N_XDATA)).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Nonexistant coordinate:'/
     */CORD1),4)
      RETURN
      ENDIF
11861 CONTINUE
11862 CONTINUE
      IF (INFO1(1).gt.0) IVALS=4
      IF (LSET(1)) IVALS=4
      IF (IVALS .gt.1) IVALS=4
      IF (IOP.eq.1) IVALS=4
      ELSE
      DO 11871 I=1,NINCR
      IF(IVARBL(I) .eq. ID)GOTO 11872
11871 CONTINUE
11872 CONTINUE
      IF (I .eq. NINCR+1) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Nonexistant coordinate:'/
     */CORD),4)
      RETURN
      ENDIF
      LAPPEN=.true.
      ENDIF
      LRESET=LRESET .and. .not. LAPPEN .and. .not. LSETS
      IF (FLAGS(23)) RETURN
      IF (IVALS.le.3) THEN
      CALL T2FPAR1(INFOIN,CARDIN,PARM,LSET,(IBINS.eq.1))
      IF (FLAGS(23)) RETURN
      NP = NINT(PARM(4))
      ENDIF
      IF (IOP.eq.4 .and. PARM(1) .eq. 0 .and. IORD(2) .eq. 2) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Division by zero'),4)
      RETURN
      ENDIF
      IF (LAPPEN) THEN
      IF (LRESET) CALL T2PNTR
      CALL T2NEWS(NP,C_NAME(:N_NAME))
      IF (FLAGS(23)) RETURN
      NS1=NDSETS
      NS2=NDSETS
      ENDIF
      FLAGS(28)=.false.
      JPOINT=0
      N6=0
      IF (ERROR .le. 0) THEN
      IF (IOP.eq.3 .or. IOP.eq.5 ) IE=0
      IF (IOP.eq.0 .and. INFO1(1).eq.0) IE=0
      ERROR=0
      ENDIF
      DO 11881 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF (FLAGS(23)) RETURN
      NP=NP-N1+1
      NL=NL-N3+1
      IF(NP*NL .lt. 1)GOTO 11881
      IF (.not.LSET(1)) THEN
      PARM(1)=PARM(2)-(NP*NL+IBINS-1)*PARM(3)
      ELSEIF (.not.LSET(3).and. NP*NL .gt. 1 .and. LSET(2)) THEN
      PARM(3)=(PARM(2)-PARM(1))/(NP*NL+IBINS-1)
      ENDIF
      IF (IBTYPE.eq.2) THEN
      CALL T2MSDA(ISETD)
      NINCR1=NINCR1*NINCR0
      N5=IM+NINCR1*NINCR2
      IF (IXYZ.eq.MESH1) THEN
      LN5=NP.eq.NINCR1-1
      NL=N3
      N6=N5+NINCR0
      IF (NINCR0.ne.1) N6=0
      ELSEIF (IXYZ.eq.MESH2) THEN
      LN5=NL.eq.NINCR2-1
      N5=N5+2*NINCR0
      N6=N5+NINCR0
      IF (NINCR0.ne.1) N6=0
      NP=NL
      NL=N3
      NINCR0=NINCR1
      ENDIF
      IF (IOP.eq.4 .and. IORD(1).eq.2) N6=0
      ENDIF
      IF ( DATBUF(ISETD(NXDATA+ID-N_XDATA)).eq.HNONE .or. DATBUF(ISETD(N
     *XDATA+IR-N_XDATA)).eq.HNONE) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Nonexistant coordinate'),
     *4)
      RETURN
      ENDIF
      IF (IE.ne.0) THEN
      LERR=DATBUF(ISETD(NXDATA+ID-N_XDATA+IE)).ne.HNONE
      LNERR=DATBUF(ISETD(NXDATA+ID-N_XDATA+IE+1)).ne.HNONE
      ELSE
      LERR=.false.
      LNERR=.false.
      ENDIF
      XNSTEP = 0.5*IBINS
      IPOINT=0
      TEMP2=0
      IF (IOP.eq.0.and.LERR) THEN
      TEMP2=SQRT(ERROR)
      TEMP3=TEMP2
      ENDIF
      MIND=ISETD(ID+NXDATA-N_XDATA)
      MINR=ISETD(IR+NXDATA-N_XDATA)
      ICHSAVE(1)=0
      IF (NL*NP.gt.1) ICHSAVE(1)=1
      DO 11891 II=1,NL
      MD=MIND
      MR=MINR
      DO 11901 I=1,NP
      ME=MR+1
      ICPOIN(1)=MD
      ICPOIN(2)=MR
      IF (LTRAP) RETURN
      VALUE(IORD(1))=DATBUF(MR)
      IF (INFO1(1).ne.0) THEN
      INFO1(3)=0
      CALL T2EXPR(INFO1,CARD1,ICHSAVE,NCHSAVE)
      IF (JPOINT .eq. 0) THEN
      IF (INFO1(1) .gt. INFO1(3)) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Unprocessed expression:'//
     * CARD1(INFO1(3)+1:INFO1(1)),4)
      ENDIF
      ENDIF
      IF (FLAGS(23).and.II.eq.1.and.I.eq.1) RETURN
      VALUE(IORD(2))=FLOTNG
      IF (LERR) THEN
      IF (LNERR) THEN
      TEMP3=ABS(DATBUF(ME+1))
      DATBUF(MR)=DATBUF(MR)-TEMP3
      INFO1(3)=0
      DATBUF(ME+1)=ERROR
      CALL T2EXPR(INFO1,CARD1,ICHSAVE,NCHSAVE)
      DATBUF(MR)=VALUE(IORD(1))
      DATBUF(ME+1)=TEMP3
      IF (FLAGS(23).and.II.eq.1.and.I.eq.1) THEN
      RETURN
      ENDIF
      TEMP3=-(FLOTNG-VALUE(IORD(2)))
      ENDIF
      TEMP2=ABS(DATBUF(ME))
      DATBUF(MR)=DATBUF(MR)+TEMP2
      INFO1(3)=0
      DATBUF(ME)=ERROR
      CALL T2EXPR(INFO1,CARD1,ICHSAVE,NCHSAVE)
      DATBUF(MR)=VALUE(IORD(1))
      DATBUF(ME)=TEMP2
      IF (FLAGS(23).and.II.eq.1.and.I.eq.1) THEN
      RETURN
      ENDIF
      TEMP2=ABS(FLOTNG-VALUE(IORD(2)))
      ENDIF
      ELSE
      VALUE(IORD(2))=(PARM(1)+XNSTEP*PARM(3))
      IF (SAMPLE.gt.0) VALUE(IORD(1))= VALUE(IORD(1))*(SAMPLE-VALUE(IORD
     *(1)))/SAMPLE
      IF (LPOIS) VALUE(IORD(1))= SQRT(ABS(VALUE(IORD(1))))
      ENDIF
      IF (IOP.eq.1) THEN
      DATBUF(MD) = VALUE(IORD(1))
      ELSEIF (IOP.eq.2) THEN
      DATBUF(MD) = VALUE(1)*VALUE(2)
      IF (LERR) THEN
      DATBUF(ME)=SQRT(ERROR*(VALUE(IORD(1)))**2+  (DATBUF(ME)*(VALUE(IOR
     *D(2))))**2)
      IF (LNERR) DATBUF(ME+1)=SQRT(ERROR*(VALUE(IORD(1)))**2+ (DATBUF(ME
     *+1)*(VALUE(IORD(2))))**2)
      ENDIF
      ELSEIF (IOP.eq.3) THEN
      DATBUF(MD) = VALUE(1)+VALUE(2)
      IF (LERR) THEN
      DATBUF(ME)=SQRT(DATBUF(ME)**2+ERROR)
      IF (LNERR) DATBUF(ME+1)=SQRT(DATBUF(ME+1)**2+ERROR)
      ENDIF
      ELSEIF (IOP.eq.4) THEN
      IF (VALUE(2) .eq. 0) THEN
      DATBUF(MD) = 0
      IF (LERR) DATBUF(ME)=0
      IF (LNERR) DATBUF(ME+1)=0
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Attempt to divide by 0.0',
     *4)
      CALL T2TERR
      ELSE
      DATBUF(MD) = VALUE(1)/VALUE(2)
      IF (LERR) THEN
      DATBUF(ME)=SQRT(ERROR*(VALUE(IORD(1)))**2+  (DATBUF(ME)*(VALUE(IOR
     *D(2))))**2)
      DATBUF(ME) = DATBUF(ME)/VALUE(2)**2
      IF (LNERR) THEN
      DATBUF(ME+1)=SQRT(ERROR*(VALUE(IORD(1)))**2+  (DATBUF(ME+1)*(VALUE
     *(IORD(2))))**2)
      DATBUF(ME+1) = DATBUF(ME)/VALUE(2)**2
      ENDIF
      ENDIF
      ENDIF
      ELSEIF (IOP.eq.5) THEN
      DATBUF(MD) = VALUE(1)-VALUE(2)
      IF (LERR) THEN
      DATBUF(ME)=SQRT(DATBUF(ME)**2+ERROR)
      IF (LNERR) DATBUF(ME+1)=SQRT(DATBUF(ME+1)**2+ERROR)
      ENDIF
      ELSE
      DATBUF(MD) = VALUE(IORD(2))
      IF (LERR) THEN
      DATBUF(ME)=TEMP2
      IF (LNERR) DATBUF(ME+1)=TEMP3
      ENDIF
      ENDIF
      IF (LNERR) THEN
      IF (DATBUF(ME+1) .lt. 0) THEN
      TEMP3=DATBUF(ME+1)
      DATBUF(ME+1)=ABS(DATBUF(ME))
      DATBUF(ME)=ABS(TEMP3)
      ENDIF
      ENDIF
      IF (LERR) DATBUF(ME)=ABS(DATBUF(ME))
      IPOINT=IPOINT+1
      MD=MD+NINCR0
      MR=MR+NINCR0
      XNSTEP=XNSTEP+1.
11901 CONTINUE
11902 CONTINUE
      MIND=MIND+NINCR1
      MINR=MINR+NINCR1
11891 CONTINUE
11892 CONTINUE
      IF (N6.ne.0) THEN
      XNSTEP=-0.5
      IF (DATBUF(N5).ne.0 .or. DATBUF(N6).eq.0.or.IOP.eq.0) THEN
      DO 11911 MINR=N5,N6,N6-N5
      ICPOIN(1)=MINR
      IF (INFO1(1).eq.0) THEN
      ICPOIN(1)=MINR
      VALUE(IORD(1))=DATBUF(MINR)
      VALUE(IORD(2))=PARM(1)+XNSTEP*PARM(3)
      ELSE
      VALUE(IORD(1))=0
      VALUE(IORD(2))=0
      ENDIF
      if (.not.LN5) THEN
      DATBUF(MINR) = 0
      ELSEIF (IOP.eq.1) THEN
      DATBUF(MINR) = VALUE(IORD(1))
      ELSEIF (IOP.eq.2) THEN
      DATBUF(MINR) = VALUE(1)*VALUE(2)
      ELSEIF (IOP.eq.3) THEN
      DATBUF(MINR) = VALUE(1)+VALUE(2)
      ELSEIF (IOP.eq.4) THEN
      DATBUF(MINR) = VALUE(1)/VALUE(2)
      ELSEIF (IOP.eq.5) THEN
      DATBUF(MINR) = VALUE(1)-VALUE(2)
      ELSE
      DATBUF(MINR) = VALUE(IORD(2))
      ENDIF
      IF (NMESH0.eq.2) DATBUF(MINR+1)=DATBUF(MINR)
      XNSTEP=XNSTEP+NP
11911 CONTINUE
11912 CONTINUE
      ENDIF
      Call T2MSCK(INFOIN,CARDIN)
      ENDIF
      JPOINT=JPOINT+IPOINT
      IF (IPOINT .gt.0) DATDAT(1,1)=HNONE
      IF (LLOG.and.IPOINT.gt.0) THEN
      K=0
      WRITE(OUTSTR,*)'  ',CORD,' (',IPOINT,' points Set=',ISET,') = ', C
     *ORD1
      CALL T2SQEZ(OUTSTR(3:LEN(OUTSTR)),K)
      K=K+4
      IF (IOP.eq.0.and.INFO1(1).ne.0) THEN
      OUTSTR(K:)=CARD1(2:INFO1(1)-1)
      IF (K+INFO1(1)-2.gt.LEN(OUTSTR)) OUTSTR(LEN(OUTSTR)-2:LEN(OUTSTR))
     *='...'
      ELSEIF (IOP.ne.1) THEN
      OUTSTR(K:)=COPER(IOP+1)//' ('
      XNSTEP=0.5*IBINS*PARM(3)
      IMAX=3
      IF (PARM(3) .eq. 0) IMAX=1
      DO 11921 I=1,IMAX
      IF (LSET(I)) THEN
      K=T2BTRIM(OUTSTR)+2
      WRITE(OUTSTR(K:),*) CFRTO(I),PARM(I)+XNSTEP
      ENDIF
      XNSTEP=-XNSTEP
      IF (I .ge. 2) XNSTEP=0
11921 CONTINUE
11922 CONTINUE
      OUTSTR(T2BTRIM(OUTSTR)+1:)=')'
      ENDIF
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      IF (LERR) THEN
      WRITE(OUTSTR,*)'    D',CORD(2:),' = D',CORD1(2:), ' Modified by +-
     *',SQRT(ERROR)
      CALL T2WRSQ(OUTSTR,.true.,6,4)
      ENDIF
      ENDIF
11881 CONTINUE
11882 CONTINUE
      IF (JPOINT .eq. 0) THEN
      WRITE(6,*) '   NO data created or modified'
      ELSE
      DATDAT(1,1)=HNONE
      ENDIF
      RETURN
11750 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Conflicting options'),4)
      END
      SUBROUTINE T2MSDA(ISETD)
      IMPLICIT NONE
      INTEGER ISETD(2,8),IS(2,3),I,J
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      DO 11931 I=1,3
      DO 11941 J=1,2
      IS(J,I)=ISETD(J,2+MESHN(I))
11941 CONTINUE
11942 CONTINUE
11931 CONTINUE
11932 CONTINUE
      DO 11951 I=1,3
      DO 11961 J=1,2
      ISETD(J,2+I)=IS(J,I)
11961 CONTINUE
11962 CONTINUE
11951 CONTINUE
11952 CONTINUE
      END
      SUBROUTINE T2MSCK(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      CHARACTER*1 CXYZ(3)
      INTEGER I,J,K,IMESH,IMIN,IMAX,IJUMP
      REAL S,TEMP,TEMP1
      LOGICAL LTEST
      DATA CXYZ/'X','Y','Z'/
      IF (NMESH1*NMESH2.le.0) RETURN
      IJUMP=NMESH0
      J=IVRPTR(8)+IJUMP
      DO 11971 IMESH=1,2
      LTEST=.false.
      TEMP=DATBUF(J)
      S=DATBUF(J+IJUMP*(NMESHN(IMESH)-2))-TEMP
      IF (S.ne.0) S=SIGN(1.0,S)
      K=NMESH0*(NMESH1*NMESH2+2*(IMESH-1))+IVRPTR(8)
      IMAX=NMESHN(IMESH)
      IF (DATBUF(K).ne.0 .and. DATBUF(K+NMESH0).ne.0.and.NMESH0.eq.1) TH
     *EN
      TEMP=DATBUF(K)
      IMIN=2
      K=K+NMESH0
      ELSE
      J=J+IJUMP
      K=0
      IMIN=3
      ENDIF
      DO 11981 I=IMIN,IMAX
      TEMP1=TEMP
      TEMP=DATBUF(J)
      J=J+IJUMP
      LTEST=LTEST.or. (S*(TEMP-TEMP1).le.0)
11981 CONTINUE
11982 CONTINUE
      IF (K.ne.0) THEN
      TEMP1=TEMP
      TEMP=DATBUF(K)
      LTEST=LTEST.or. (S*(TEMP-TEMP1).le.0)
      ENDIF
      IF (LTEST) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** WARNING *** '// CXYZ(MESHN(IMESH))//
     *' Axis is not strictly monotonic',4)
      ENDIF
      IJUMP=NMESH0*NMESH1
11971 CONTINUE
11972 CONTINUE
      END
      SUBROUTINE T2_FIT(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      REAL HNONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER MAX_FITS 
      PARAMETER (MAX_FITS=10)
      CHARACTER*12 CFIT(MAX_FITS)
      CHARACTER*12 CY(2,2)
      CHARACTER*12 CX(2)
      CHARACTER*10 C_MINUIT(2)
      INTEGER I_MINUIT
      CHARACTER*20 CTFIT(MAX_FITS)
      LOGICAL LSET(4,2)
      LOGICAL LDVEC(19)
      LOGICAL LNOYES(2)
      LOGICAL LLOG,LGAUSS,LAPPEN,LBINS,LCURVE,LFULL,INTRAC,LMONITOR
      LOGICAL LLINEAR, LGRADIENT, LCONSTRAIN, L_FIT_SET
      LOGICAL LLIN_SET,LNDY
      LOGICAL LCSET(MAXTER),LESET(MAXTER),LLSET(MAXTER)
      INTEGER IZERO,JSET, I_BAD_DY,T2BTRIM
      INTEGER IVALS,IPASS
      INTEGER I,J,JJ,K,L,M,N
      INTEGER ISET,IXV,INOYES
      INTEGER IXYZ(3,2),IDXYZ(3,2)
      INTEGER IERR, KLIM, T2_CONFIRM, ITERMS, IERROR
      INTEGER MIN_COFF, IMESH_CURVE, IFIT_SPEC
      REAL PARM(4,2),T,TEMP,DY
      REAL DVEC(19),FREEN
      DOUBLE PRECISION A1,A2,A3, MN_PRINT_LEV,DTOLER
      EXTERNAL T2_FCN, T2_DUMMY
      DOUBLE PRECISION WEIGHT,Y2SUM
      DOUBLE PRECISION B(MAXTER,MAXTER)
      DOUBLE PRECISION YSUM(MAXTER),XSUM(MAXTER*MAXTER)
      DOUBLE PRECISION DTEMP,YF,ARGLIS(10),MN_REPEAT
      DOUBLE PRECISION CLIM(MAXTER,2),D_XYZVAL(4)
      INTEGER IAND,IOR
      DATA HNONE /-666.666/
      DATA CFIT/'User','Polynomial','Sine','Cosine',
     *'Leg[Cos','Legendre', 'Laurent','Equation',2*' '/
      DATA CY/'Y =','Log(Y) =','Z =','Log(Z) ='/
      DATA CX/'[X-OFF]','[Log(X-OFF)]'/
      DATA C_MINUIT/'SIMPLEX','MINIMIZE'/
      DATA CTFIT/'User%[$]',' $**% ;',' sin(%*$);',
     *' cos(%*$);'  ,' Leg[%](Cos$);'  ,' Leg[%]$ ;',' $**-% ;',
     *' Equation',2*' '/
      DATA L_FIT_SET/.false./
      DATA MN_PRINT_LEV/-1.D0/,DTOLER/0/
      DATA LNOYES/.FALSE.,.TRUE./
      GOTO 11991
12020 CONTINUE
      L_FIT_SET=LTOKEN
      GOTO 11992
12000 GOTO ( 12020,11995),KEYORD
11995 CONTINUE
      INFOIN(9)=-1
      GOTO 11992
11991 CALL TOKEN(INFOIN,CARDIN,'AGAIN:Y,;')
      GOTO (11995,12000,11995,11995,11995,11995,11995,12000,11995),INTER
     *P
11992 CONTINUE
      IF (.not. L_FIT_SET) THEN
      DO 12031 I=1,NINCR
      J=IVARBL(I)
      IF (J.gt.0)LDVEC(J)=.true.
12031 CONTINUE
12032 CONTINUE
      IFIT=0
      NTERMS=2
      NCOFF=0
      N1_FIT=1
      N2_FIT= 2 147 483 647
      N3_FIT=1
      N4_FIT= 2 147 483 647
      NS1_FIT=1
      NS2_FIT=NDSETS
      LAPPEN=FLAGS(106)
      LCURVE=.false.
      LXLOG=.false.
      LYLOG=.false.
      LLOG=.true.
      DO 12041 I=1,MAXTER
      LFIT(I)=.true.
      LCOFF(I)=.false.
      DCOFF(I)=0.0
      LCSET(I)=.FALSE.
      LESET(I)=.FALSE.
      LLSET(I)=.FALSE.
      DO 12051 J=1,2
      CLIM(I,J)=0
12051 CONTINUE
12052 CONTINUE
12041 CONTINUE
12042 CONTINUE
      DO 12061 J=1,2
      DO 12071 I=1,4
      LSET(I,J)=.false.
      PARM(I,J)=0.
12071 CONTINUE
12072 CONTINUE
12061 CONTINUE
12062 CONTINUE
      IVALS=0
      N_FIT_LIM=0
      TEMP=1.0E35
      XOFF=0
      LGAUSS=.false.
      LBINS=.false.
      LMONITOR=FLAGS(107)
      LFULL=.false.
      LGRADIENT=.true.
      LCONSTRAIN=.TRUE.
      LLINEAR=.true.
      LLIN_SET=.false.
      D_CHISQ=0
      FIT_LIM(1,3)=HNONE
      MN_REPEAT=0
      N_NAME=3
      C_NAME='Fit'
      I_MINUIT=1
      IMESH_CURVE=1
      IMESH_FIT=1
      IDEP_FIT=0
      IFIT_SPEC=0
      ENDIF
      L_FIT_SET=INTEG .eq. 1
      GOTO 12081
12110 CONTINUE
      IDEP_FIT=INTEG
      GOTO 12081
12120 CONTINUE
      IFIT_SPEC=INTEG
      IF (IFIT+INTEG.eq.8.and.IFIT*INTEG.eq.15) THEN
      IFIT=4
      ELSEIF (IFIT.eq.0) THEN
      IFIT=MOD(INTEG,100)
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Conflicting operations'),
     *4)
      GOTO 12130
      ENDIF
      IF (IAND(IFIT_SPEC/100,1) .gt. 0) LLINEAR=LLIN_SET
      GOTO 12081
12140 CONTINUE
      LCURVE=.true.
      J=1
      GOTO 12151
12180 CONTINUE
      LAPPEN=LTOKEN
      GOTO 12151
12190 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 12151
12200 CONTINUE
      LBINS=LTOKEN
      GOTO 12151
12210 CONTINUE
      J=INTEG
      IVALS=0
      IMESH_CURVE=IOR(IMESH_CURVE,J)
      GOTO 12151
12220 CONTINUE
      I=INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      IF (IVALS.eq.3 .or. LSET(I,J)) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Redundant value'),4)
      ELSEIF (I.le.2 .or. (I.eq.4.and.FLOTNG.ge.0) .or. (I.eq.3.and.FLOT
     *NG.ne.0)) THEN
      PARM(I,J)=FLOTNG
      IVALS=IVALS+1
      LSET(I,J)=.true.
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Value too small'),4)
      GOTO 12130
      ENDIF
      ENDIF
      GOTO 12151
12160 GOTO ( 12180,12190,12200,12200,12210,12210,12220,12220,12220,12220
     *,12220,12220,12155),KEYORD
12155 CONTINUE
      INFOIN(9)=-1
      GOTO 12152
12151 CALL TOKEN(INFOIN,CARDIN,'APPEND:Y,NAME:S,BINS:Y,VALUES:N,X:1,Y:2,
     *FROM:1,TO:2,STEP:3,BY:3,WIDTH:3,N:4,;')
      GOTO (12152,12160,12155,12155,12155,12155,12155,12160,12155),INTER
     *P
12152 CONTINUE
      GOTO 12081
12240 CONTINUE
      LCONSTRAIN=LTOKEN
      GOTO 12081
12250 CONTINUE
      IXV=1
      J=INTEG
      GOTO 12261
12290 CONTINUE
      IXV=INTEG+1
      GOTO 12261
12300 CONTINUE
      LCONSTRAIN=LTOKEN
      GOTO 12261
12270 GOTO ( 12290,12290,12300,12265),KEYORD
12310 CONTINUE
      IF (IXV.gt.0.and.IXV.le.MAXTER) THEN
      IF (J.eq.0) THEN
      DCOFF(IXV)=0
      COFF(IXV)=FLOTNG
      LFIT(IXV)=.TRUE.
      LCOFF(IXV)=LCONSTRAIN
      LCSET(IXV)=.TRUE.
      IF (IXV.gt.NTERMS) NTERMS=IXV
      ELSEIF (J.eq.1) THEN
      DCOFF(IXV)=ABS(FLOTNG)
      LESET(IXV)=.TRUE.
      ELSE
      CLIM(IXV,J-2)=FLOTNG
      LLSET(IXV)=.TRUE.
      ENDIF
      IXV=IXV+1
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Term INDEX out of range (
     *0-19)'),4)
      GOTO 12130
      ENDIF
      GOTO 12261
12265 CONTINUE
      INFOIN(9)=-1
      GOTO 12262
12261 CALL TOKEN(INFOIN,CARDIN,'I:0:19:0,INDEX:0:19:0,CONSTRAIN:Y,;')
      GOTO (12262,12270,12310,12310,12265,12265,12265,12270,12265),INTER
     *P
12262 CONTINUE
      GOTO 12081
12320 CONTINUE
      D_CHISQ=FLOTNG
      GOTO 12081
12330 CONTINUE
      LGRADIENT = .false.
      IFIT=7
      ICHSAVE(1)=1
      IF (NSTRNG.gt.1) THEN
      SEXPR='Constant;'
      NTERMS=1
      J=1
      L=INDEX(SEXPR,';')
      DO 12341 I=2,MAXTER+1
      IF(J .gt. NSTRNG)GOTO 12342
      K=INDEX(STRNG(J:NSTRNG),';')
      IF (K.eq.0) K=NSTRNG+2-J
      IF(K.le.1)GOTO 12342
      IF(STRNG(J:J+K-2) .eq. ' ')GOTO 12342
      NTERMS=I
      SEXPR(L+1:L+K+2)='<'//STRNG(J:J+K-2)//'>;'
      L=L+K+2
      J=J+K
12341 CONTINUE
12342 CONTINUE
      ENDIF
      GOTO 12081
12350 CONTINUE
      LFULL=LTOKEN
      GOTO 12081
12360 CONTINUE
      LGRADIENT=LTOKEN
      GOTO 12081
12370 CONTINUE
      INOYES=INTEG
      DO 12381 I=1,MAXTER
      LFIT(I)=LNOYES(INOYES)
12381 CONTINUE
12382 CONTINUE
      GOTO 12391
12420 CONTINUE
      CONTINUE
      GOTO 12391
12430 CONTINUE
      DO 12441 I=INTEG,MAXTER,2
      LFIT(I)=LNOYES(3-INOYES)
12441 CONTINUE
12442 CONTINUE
      GOTO 12391
12400 GOTO ( 12420,12430,12430,12395),KEYORD
12450 CONTINUE
      INTEG=INTEG+1
      IF (INTEG.le.0 .or.INTEG.gt.MAXTER) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Term INDEX out of range (
     *0-19)'),4)
      GOTO 12130
      ELSE
      NTERMS=MAX(NTERMS,INTEG)
      LFIT(INTEG)=LNOYES(3-INOYES)
      ENDIF
      GOTO 12391
12395 CONTINUE
      INFOIN(9)=-1
      GOTO 12392
12391 CALL TOKEN(INFOIN,CARDIN,'NONE,EVEN:1,ODD:2,;')
      GOTO (12392,12400,12450,12450,12395,12395,12395,12400,12395),INTER
     *P
12392 CONTINUE
      GOTO 12081
12460 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3_FIT,N4_FIT)
      GOTO 12081
12470 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,FIT_LIM(1,3),MAX_FIT_LIM-2,N_FIT_LIM)
      N_FIT_LIM=MAX(2,N_FIT_LIM)
      GOTO 12081
12480 CONTINUE
      LLOG=LTOKEN
      GOTO 12081
12490 CONTINUE
      I_MINUIT=INTEG
      LLINEAR=.false.
      LLIN_SET=.false.
      GOTO 12081
12500 CONTINUE
      IMESH_FIT=1
      IF (LTOKEN) IMESH_FIT=2
      GOTO 12081
12510 CONTINUE
      LMONITOR=LTOKEN
      GOTO 12081
12520 CONTINUE
      LLINEAR=LTOKEN
      LLIN_SET=LTOKEN
      GOTO 12081
12530 CONTINUE
      XOFF=FLOTNG
      GOTO 12081
12540 CONTINUE
      NTERMS=INTEG+1
      GOTO 12081
12550 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1_FIT,N2_FIT)
      GOTO 12081
12560 CONTINUE
      MN_PRINT_LEV=INTEG
      GOTO 12081
12570 CONTINUE
      MN_REPEAT=FLOTNG
      GOTO 12081
12580 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1_FIT,NS2_FIT)
      GOTO 12081
12590 CONTINUE
      LXLOG=NONLIN(1).eq.-2
      LYLOG=NONLIN(2).eq.-2
      GOTO 12081
12600 CONTINUE
      NTERMS=INTEG
      GOTO 12081
12610 CONTINUE
      DTOLER=FLOTNG
      GOTO 12081
12620 CONTINUE
      IFIT=-INTEG
      SEXPR=' '
      GOTO 12081
12621 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 12081
12081 CALL TOKEN(INFOIN,CARDIN,'Y:2,Z:3,POLYNOMIAL:1,SINE:2,COSINE:3,LEG
     *ENDRE:5,INVERSE:6,GAUSSIAN:108,EXPONENTIAL:109,DGAUSSIAN:310,DPOLY
     *NOMIAL:211,CURVE,CONSTRAIN:Y,COEFFICIENTS:0,ERRORS:1,ECOEFFICIENTS
     *:1,CMINIMUM:3,CMAXIMUM:4,ECHISQ:.001:1000:1.0,EQUATIONS:S,FULL:Y,G
     *RADIENT:Y,INCLUDE:1,EXCLUDE:2,LINES,ROWS,LIMITED,LOG:Y,MINUIT:2,ME
     *SH:Y,MONITOR:Y,NONLINEAR:N,OFFSET:::0,ORDER:0:19:1,POINTS,COLUMNS,
     *PRINTLEVEL:-1:3:-1,REPEAT:0:100000:0,SETS,SCALE,TERMS:1:20:2,TOLER
     *ENCE:0:1000:0,USER:1:99:1,SELECT:S,;')
      GOTO (12082,12087,12085,12085,12085,12085,12081,12087, 12085),INTE
     *RP
12085 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 12081
12087 GOTO ( 12110,12110,12120,12120,12120,12120,12120,12120,12120,12120
     *,12120,12140,12240,12250,12250,12250,12250,12250,12320,12330,12350
     *,12360,12370,12370,12460,12460,12470,12480,12490,12500,12510,12520
     *,12530,12540,12550,12550,12560,12570,12580,12590,12600,12610
     *,12620,12621
     *,12085),KEYORD
12082 CONTINUE
      IF (FLAGS(23)) GOTO 12130
      IF (L_FIT_SET) GOTO 12630
      IF (IFIT.eq.0) IFIT=1
      DO 12641 I=1,2
      DO 12651 J=1,3
      FIT_LIM(J,I)=FIT_LIM(J,I+2)
12651 CONTINUE
12652 CONTINUE
12641 CONTINUE
12642 CONTINUE
      DO 12661 I=1,N_FIT_LIM,2
      K=MOD((I-1),2)+1
      DO 12671 J=1,3
      FIT_LIM(J,K)=MIN(FIT_LIM(J,I+2),FIT_LIM(J,K))
      FIT_LIM(J,K+1)=MAX(FIT_LIM(J,I+3),FIT_LIM(J,K+1))
12671 CONTINUE
12672 CONTINUE
12661 CONTINUE
12662 CONTINUE
      IF (LCURVE .or. LMONITOR) THEN
      IMESH_CURVE=IOR(IMESH_CURVE,IMESH_FIT)
      CALL T2FPAR(INFOIN,CARDIN,PARM,LSET ,N1_FIT,N2_FIT,N3_FIT,N4_FIT,N
     *S1_FIT,NS2_FIT ,LBINS,.true.,1,FIT_LIM ,C_SELECT(:N_SELECT),IMESH_
     *FIT)
      IF (.not. FLAGS(23) .and. IMESH_FIT .ge. 2) CALL T2FPAR(INFOIN,CAR
     *DIN,PARM(1,2),LSET(1,2) ,N1_FIT,N2_FIT,N3_FIT,N4_FIT,NS1_FIT,NS2_F
     *IT ,LBINS,.true.,2,FIT_LIM ,C_SELECT(:N_SELECT),IMESH_FIT)
      IF (FLAGS(23)) GOTO 12130
      ENDIF
      IF (IFIT .eq. 5 .and. FLAGS(27)) IFIT=4
      LDY_FIT=.false.
      IF (IAND(IFIT_SPEC/200,1) .gt. 0) IDEP_FIT=3
      IF (IDEP_FIT .eq. 0) IDEP_FIT=MIN(IMESH_FIT+1,3)
      DO 12681 ISET=NS1_FIT,NS2_FIT
      CALL T2GDSET(ISET,N1_FIT,N2_FIT,N3_FIT,N4_FIT ,ISETD,FIT_LIM,C_SEL
     *ECT(:N_SELECT))
      IF(IMESH_FIT .ne. IBTYPE)GOTO 12681
      KLIM=3
      IF (DATBUF(I3).eq.HNONE) KLIM=2
      IF (IDEP_FIT .gt. KLIM) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing Z coordinate',4)
      GOTO 12130
      ENDIF
      IF (IBTYPE.eq.2) THEN
      I5=I6
      IF (MESH3 .ne.3) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Mesh Z must be dependent v
     *ariable',4)
      GOTO 12130
      ENDIF
      ENDIF
      IF (DATBUF(I5).eq.HNONE) THEN
      LDY_FIT=.false.
      GOTO 12682
      ENDIF
      DO 12691 M=N3_fIT,NL
      I6=I5
      DO 12701 N=N1_FIT,NP
      DY=DATBUF(I5)
      I5=I5+NINCR0
      IF (DY.gt.0 .and. DY .lt. 1.0E35) THEN
      LDY_FIT=.true.
      GOTO 12702
      ENDIF
12701 CONTINUE
12702 CONTINUE
      I5=I6+NINCR0*NINCR1
12691 CONTINUE
12692 CONTINUE
12681 CONTINUE
12682 CONTINUE
      IF ( IFIT .eq. 8 .or. IFIT .eq. 9) THEN
      IF (LLINEAR) THEN
      LYLOG=.true.
      ELSE
      LYLOG=.false.
      ENDIF
      ENDIF
      I=1
      IF (LYLOG) I=2
      FITSTR=CY(I,IDEP_FIT-1)
      J=1
      IF (LXLOG) J=2
      MIN_COFF=0
      IF (IFIT .eq. 8) THEN
      MIN_COFF=3
      NTERMS=MAX(NTERMS,3)
      SEXPR='Height;Center;Width/2;Constant;'
      IF (LLINEAR) THEN
      NTERMS=3
      FITSTR(T2BTRIM(FITSTR)+1:)=  'LOG(CO[0])+[-.5*[[X-CO[1]]/CO[2]]**2
     *]'
      IFIT=1
      LGAUSS=.true.
      IF ((LCOFF(1).and.LFIT(3)) .or. (LCOFF(2).and.LFIT(3)) .or. (LCOFF
     *(1).and.COFF(1).lt.1.0E-35) .or. (LCOFF(3).and.COFF(3).lt.1.0E-35)
     * )THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Illegal options for GAUSS
     *IAN fit'),4)
      GOTO 12130
      ENDIF
      IF (LCOFF(3)) THEN
      COFF(3)=-0.5/COFF(3)**2
      DCOFF(3)=DCOFF(3)/(.5*SQRT(0.5)/(-COFF(3))**1.5)
      ENDIF
      IF (LCOFF(2)) THEN
      DCOFF(2)=DCOFF(2)/(-.5/COFF(3))
      XOFF=COFF(2)
      COFF(2)=0
      ENDIF
      IF (LCOFF(1)) THEN
      DCOFF(1)=DCOFF(1)/COFF(1)
      COFF(1)=LOG(COFF(1))
      ENDIF
      ELSE
      FITSTR(T2BTRIM(FITSTR)+1:)='CO[0]*EXP[-.5*[[X-CO[1]]/CO[2]]**2]'
      IF (NTERMS .gt. 3) THEN
      FITSTR(T2BTRIM(FITSTR)+1:)=  ' + Polynomial'//CX(J)(:T2BTRIM(CX(J)
     *))
      DO 12711 I=4,NTERMS
      WRITE(SEXPR(T2BTRIM(SEXPR)+1:),'(A,I2.2,A)')  CX(J)(:T2BTRIM(CX(J)
     *))//'**',I-3,';'
12711 CONTINUE
12712 CONTINUE
      ENDIF
      ENDIF
      ELSEIF (IFIT .eq. 9) THEN
      MIN_COFF=2
      SEXPR='Height;1/Width;Constant;'
      NTERMS=MAX(NTERMS,2)
      IF (LLINEAR) THEN
      NTERMS=2
      FITSTR(T2BTRIM(FITSTR)+1:)=' CO[0]+CO[1]*'//CX(J)
      IFIT=1
      GOTO 12720
      ELSE
      FITSTR(T2BTRIM(FITSTR)+1:)='EXP( CO[0]+CO[1]*'//CX(J)//' )'
      IF (NTERMS .gt. 2) THEN
      FITSTR(T2BTRIM(FITSTR)+1:)=' + Polynomial'//CX(J)
      DO 12731 I=5,NTERMS
      WRITE(SEXPR(T2BTRIM(SEXPR)+1:),'(A,I2.2,A)')  CX(J)(:T2BTRIM(CX(J)
     *))//'**',I-4,';'
12731 CONTINUE
12732 CONTINUE
      ENDIF
      ENDIF
      ELSEIF (IFIT .eq. 10) THEN
      LLINEAR=.false.
      MIN_COFF=5
      NTERMS=MIN(MAX(NTERMS,5),8)
      FITSTR(T2BTRIM(FITSTR)+1:)='CO[0]*EXP[-.5*[[[X-CO[1]]/CO[2]]**2'//
     *  '+[[X-CO[3]]/CO[4]]**2]'
      if (NTERMS .gt. 5)  FITSTR(T2BTRIM(FITSTR)+1:)=' + Polynomial(X,Y)
     *'
      SEXPR='Height;XCenter;XWidth/2;YCenter;Ywidth/2;Constant;'
      K=6
      if (NTERMS .gt. K) GOTO 12740
      ELSEIF (IFIT .eq. 11) THEN
      FITSTR(T2BTRIM(FITSTR)+1:)='Polynomial(X,Y)'
      SEXPR='Constant;'
      K=1
12740 CONTINUE
      DO 12741 I=1,5
      DO 12751 L=0,I
      K=K+1
      if (K .gt. NTERMS) GOTO 12760
      IF (L .eq. 0) THEN
      WRITE(SEXPR(T2BTRIM(SEXPR)+1:),'(3(A,I2.2))')  CX(J)(:T2BTRIM(CX(J
     *)))//'**',I,';'
      ELSEIF (L .eq. I) THEN
      WRITE(SEXPR(T2BTRIM(SEXPR)+1:),'(3(A,I2.2))')  '[Y]**',L,';'
      ELSE
      WRITE(SEXPR(T2BTRIM(SEXPR)+1:),'(3(A,I2.2))')  CX(J)(:T2BTRIM(CX(J
     *)))//'**',I-L, '*[Y]**',L,';'
      ENDIF
12751 CONTINUE
12752 CONTINUE
12741 CONTINUE
12742 CONTINUE
12760 CONTINUE
      ELSE
12720 CONTINUE
      IF (IFIT.gt.0) THEN
      FITSTR(T2BTRIM(FITSTR)+1:)=CFIT(MAX(IFIT+1,1))
      ELSE
      WRITE(FITSTR(T2BTRIM(FITSTR)+1:),'(A,I2,A)')'User[',-IFIT,','
      ENDIF
      FITSTR(T2BTRIM(FITSTR)+1:)=CX(J)
      IF (IFIT.eq.4) THEN
      FITSTR(T2BTRIM(FITSTR)+1:)=']'
      ENDIF
      IF (IFIT .ne. 7) THEN
      SEXPR='Constant;'
      DO 12771 I=2,NTERMS
      K=T2BTRIM(SEXPR)+1
      L=INDEX(CTFIT(MAX(IFIT+1,1)),'$')
      M=INDEX(CTFIT(MAX(IFIT+1,1)),'%')
      N=INDEX(CTFIT(MAX(IFIT+1,1)),';')-1
      IF (MIN(L,M,N) .eq. 0) THEN
      SEXPR(K:)=CTFIT(MAX(IFIT+1,1))
      ELSEIF (M .gt. L) THEN
      WRITE(SEXPR(K:),'(1X,3A,I2.2,2A)')  CTFIT(MAX(IFIT+1,1))(:L-1)  ,C
     *X(J)(:T2BTRIM(CX(J)))  ,CTFIT(MAX(IFIT+1,1))(L+1:M-1)  ,I-1  ,CTFI
     *T(MAX(IFIT+1,1))(M+1:N)  ,';'
      ELSE
      WRITE(SEXPR(K:),'(1X,A,I2.2,4A)')  CTFIT(MAX(IFIT+1,1))(:M-1)  ,I-
     *1  ,CTFIT(MAX(IFIT+1,1))(M+1:L-1)  ,CX(J)(:T2BTRIM(CX(J)))  ,CTFIT
     *(MAX(IFIT+1,1))(L+1:N)  ,';'
      ENDIF
12771 CONTINUE
12772 CONTINUE
      ENDIF
      ENDIF
      DO 12781 I=1,MIN_COFF
      If (.not. (LCOFF(I) .or. LFIT(I))) THEN
      WRITE(OUTSTR,12790)I
      CALL T2ERR(0,' ',OUTSTR,-3)
12790 FORMAT('*** ERROR *** Term',I3, ' must be fit or constrained')
      ENDIF
12781 CONTINUE
12782 CONTINUE
      NFIT=0
      J=0
      ITERMS=0
      NEXPR(1)=0
      DO 12801 I=1,NTERMS
      IF(NEXPR(I) .gt. LEN(SEXPR))GOTO 12802
      K=INDEX(SEXPR(NEXPR(I)+1:),';')
      NEXPR(I+1)=NEXPR(I)+K
      IF (LFIT(I).or.LCOFF(I))THEN
      ITERMS=ITERMS+1
      IF (LCOFF(I)) LFIT(I)=.false.
      IF (LFIT(I)) NFIT=NFIT+1
      IF (K .gt. 0 .or. IFIT .ne. 7 .or. .not. LLINEAR) J=I
      NCOFF=NCOFF+1
      ENDIF
12801 CONTINUE
12802 CONTINUE
      NTERMS=J
      IF ( NTERMS .le. 0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Terms=0',4)
      GOTO 12130
      ENDIF
      IPASS=0
      NPFIT=0
      DY=1
      IF (NFIT.le.0) NS2_FIT=-1
      IZERO=0
      I_BAD_DY=0
      DO 12811 ISET=NS1_FIT,NS2_FIT
      CALL T2GDSET(ISET,N1_FIT,N2_FIT,N3_FIT,N4_FIT ,ISETD,FIT_LIM,C_SEL
     *ECT(:N_SELECT))
      DO 12821 I=1,3
      D_XYZVAL(I)=0
12821 CONTINUE
12822 CONTINUE
      IF (FLAGS(23)) RETURN
      IF(IMESH_FIT .ne. IBTYPE)GOTO 12811
      DO 12831 I=1,3
      IDXYZ(I,1)=NINCR0
      IDXYZ(I,2)=NINCR0*NINCR1
      IXYZ(MESHN(I),1)=ISETD(NCSIZE*(I-1)+NXDATA)
12831 CONTINUE
12832 CONTINUE
      KLIM=3
      IF (DATBUF(I3).eq.HNONE) KLIM=2
      IF (IBTYPE.ne.1) THEN
      IDXYZ(MESH2,1)=0
      IDXYZ(MESH1,2)=0
      ENDIF
      DY=1
      DO 12841 M=N3_fIT,NL
      DO 12851 I=1,KLIM
      IXYZ(I,2)=IXYZ(I,1)
12851 CONTINUE
12852 CONTINUE
      DO 12861 N=N1_FIT,NP
      ICPOIN(1)=IXYZ(IDEP_FIT,1)
      IF (LDY_FIT) THEN
      DY = DATBUF(IXYZ(IDEP_FIT,1)+1)
      ENDIF
      DO 12871 I=1,KLIM
      D_XYZVAL(I)=DATBUF(IXYZ(I,1))
      IXYZ(I,1)=IXYZ(I,1)+IDXYZ(I,1)
12871 CONTINUE
12872 CONTINUE
      IF(DY .le. 0)GOTO 12861
      IF (LTRAP) RETURN
      IF (N_FIT_LIM.gt.0) THEN
      DO 12881 I=3,N_FIT_LIM+2,2
      DO 12891 K=1,KLIM
      IF(D_XYZVAL(K) .lt. FIT_LIM(K,I) .or. D_XYZVAL(K) .gt. FIT_LIM(K,1
     *+I))GOTO 12891
12891 CONTINUE
12892 CONTINUE
      GOTO 12882
12881 CONTINUE
12882 CONTINUE
      IF(I .gt. N_FIT_LIM+2)GOTO 12861
      ENDIF
      D_XYZVAL(1)=D_XYZVAL(1)-XOFF
      IF (LXLOG) THEN
      IF (D_XYZVAL(1).le.0) THEN
      IZERO=IZERO+1
      GOTO 12861
      ENDIF
      IF (D_XYZVAL(IDEP_FIT)-DY .LE. 0) THEN
      I_BAD_DY=I_BAD_DY+1
      GOTO 12861
      ENDIF
      ENDIF
      IF (LYLOG) THEN
      IF (D_XYZVAL(IDEP_FIT).le.0) THEN
      IZERO=IZERO+1
      GOTO 12861
      ENDIF
      ENDIF
      NPFIT=NPFIT+1
12861 CONTINUE
12862 CONTINUE
      DO 12901 I=1,KLIM
      IXYZ(I,1)=IXYZ(I,2)+IDXYZ(I,2)
12901 CONTINUE
12902 CONTINUE
12841 CONTINUE
12842 CONTINUE
12811 CONTINUE
12812 CONTINUE
      IF (NPFIT .lt. NFIT) THEN
      WRITE(OUTSTR,*)'*** ERROR *** More terms (',NFIT,') than data poin
     *ts (',NPFIT,')'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      GOTO 12130
      ENDIF
      IF (IZERO .ne. 0) THEN
      WRITE(OUTSTR,12910)IZERO
      CALL T2ERR(0,' ',OUTSTR,-3)
12910 FORMAT ('*** WARNING *** LOG of zero or negative',I6,' points omit
     *ted')
      ENDIF
      IF (I_BAD_DY .ne. 0) THEN
      WRITE(OUTSTR,12920)I_BAD_DY
      CALL T2ERR(0,' ',OUTSTR,-3)
12920 FORMAT ('*** WARNING *** Y-DY zero or negative ',I6,' points omitt
     *ed')
      ENDIF
      CALL TDSTAT(FIT_LIM(1,3),N1_FIT,N2_FIT,N3_FIT,N4_FIT ,NS1_FIT,NS2_
     *FIT,.true.,N_FIT_LIM,C_SELECT(:N_SELECT))
      IF (.not. LLINEAR) THEN
      DTEMP=MAX( ABS(DATXMN-XOFF), ABS(DATXMX-XOFF))
      IF (IFIT .eq. 7) THEN
      LGRADIENT=.false.
      ELSEIF (IFIT .eq. 8) THEN
      IF (.NOT. LCSET(1)) COFF(1)=(DATYMX-DATYMN)
      IF (.NOT. LESET(1)) DCOFF(1)=COFF(1)/10
      IF (.NOT. LCSET(2)) COFF(2)=DATCEN
      IF (.NOT. LESET(2)) DCOFF(2)=DATSTD/10
      IF (.NOT. LCSET(3)) COFF(3)=DATSTD
      IF (.NOT. LESET(3)) DCOFF(3)=DATSTD/10
      IF (.NOT. LLSET(3)) CLIM(3,1)=1.0E-35
      IF (.NOT. LLSET(3)) CLIM(3,2)=100*(DATXMX-DATXMN)
      IF (.NOT. LCSET(4)) COFF(4)=DATYMN
      IF (.NOT. LESET(4)) DCOFF(4)=DCOFF(1)
      IF (.NOT. LCSET(5)) COFF(5)=0
      IF (.NOT. LESET(5)) DCOFF(5)=DCOFF(4)/DTEMP
      IF (.NOT. LCSET(6)) COFF(6)=0
      IF (.NOT. LESET(6)) DCOFF(6)=DCOFF(5)/DTEMP**2
      ELSEIF (IFIT .eq. 10) THEN
      IF (.NOT. LCSET(1)) COFF(1)=(DATZMX-DATZMN)
      IF (.NOT. LESET(1)) DCOFF(1)=COFF(1)/10
      IF (.NOT. LCSET(2)) COFF(2)=DATCEN
      IF (.NOT. LESET(2)) DCOFF(2)=DATSTD/10
      IF (.NOT. LCSET(3)) COFF(3)=DATSTD
      IF (.NOT. LESET(3)) DCOFF(3)=DCOFF(2)
      IF (.NOT. LLSET(3)) CLIM(3,1)=1.0E-35
      IF (.NOT. LLSET(3)) CLIM(3,2)=10*(DATXMX-DATXMN)
      IF (.NOT. LCSET(4)) COFF(4)=(DATYMX+DATYMN)/2
      IF (.NOT. LESET(4)) DCOFF(4)=(DATYMX-DATYMN)/10
      IF (.NOT. LCSET(5)) COFF(5)=DCOFF(4)*10
      IF (.NOT. LESET(5)) DCOFF(5)=DCOFF(4)
      IF (.NOT. LLSET(5)) CLIM(5,1)=1.0E-35
      IF (.NOT. LLSET(5)) CLIM(5,2)=100*(DATYMX-DATYMN)
      IF (.NOT. LCSET(6)) COFF(6)=DATZMN
      IF (.NOT. LESET(6)) DCOFF(6)=DCOFF(1)
      IF (.NOT. LCSET(7)) COFF(7)=0
      IF (.NOT. LESET(7)) DCOFF(7)=DCOFF(4)/DTEMP
      IF (.NOT. LCSET(8)) COFF(8)=0
      IF (.NOT. LESET(8)) DCOFF(8)=DCOFF(6)/DTEMP
      ENDIF
      CALL MNINIT(9,6,1)
      CALL MNSETI(FITSTR(:T2BTRIM(FITSTR)))
      CALL MNEXCM(T2_DUMMY,'SET PRINT',MN_PRINT_LEV,1,IERR,0)
      CALL MNEXCM(T2_DUMMY,'CLEAR',0.D0,0,IERR,0)
      IF (D_CHISQ .le. 0) D_CHISQ=1.0
      CALL MNEXCM(T2_DUMMY,'SET ERR',D_CHISQ,1,IERR,0)
      IF (LGRADIENT) THEN
      CALL MNEXCM(T2_DUMMY,'SET GRADIENT',0.D0,0,IERR,0)
      ELSE
      CALL MNEXCM(T2_DUMMY,'SET NOGRADIENT',0.D0,0,IERR,0)
      ENDIF
      L=0
      DO 12931 I=1,NTERMS
      A1=0
      A2=0
      IERR=0
      IF (LFIT(I) .or. LCOFF(I)) THEN
      L=L+1
      J=MIN(MAX(NEXPR(I)+1,1),LEN(SEXPR))
      K=MIN(MAX(NEXPR(I+1)-1,J),LEN(SEXPR))
      IF (LFIT(I) .and. DCOFF(I) .eq. 0) THEN
      DCOFF(I)=0.1*(DATYMX-DATYMN)
      IF (IFIT .eq. 1) THEN
      DCOFF(I)=DCOFF(I)/DTEMP**(I-1)
      ELSE IF (IFIT .eq. 9 .and. I .gt. 3) THEN
      DCOFF(I)=DCOFF(I)/DTEMP**(I-3)
      ELSE IF (IFIT .eq. 7) THEN
      DCOFF(I)=DCOFF(I)/10
      ENDIF
      ENDIF
      CALL MNPARM(L,SEXPR(J:K),COFF(I),DCOFF(I)  ,CLIM(I,1),CLIM(I,2),IE
     *RR)
      IF (.not. LFIT(I)) CALL MNEXCM(T2_DUMMY,'FIX',DBLE(FLOAT(I)),1,IER
     *R,0)
      ENDIF
12931 CONTINUE
12932 CONTINUE
      IF ( MN_REPEAT .lt. 1) MN_REPEAT=MIN(MAX(ITERMS*20,25),100)
      L=1
12940 CONTINUE
      ARGLIS(1)=MN_REPEAT
      ARGLIS(2)=DTOLER
      J=1
      IF ( DTOLER .gt. 0) J=2
      CALL MNEXCM(T2_FCN, C_MINUIT(I_MINUIT),ARGLIS,J,IERR,0)
      IF (IERR .ne. 0) GOTO 12950
      CALL MNSTAT(A1, A2, A3, I, J, IERR)
      FTEST=A2
      IF (IERR .ne. 3) THEN
      IF (.not. LTRAP) THEN
      IF (L .eq. 4) GOTO 12940
      WRITE(OUTSTR,12960)A1,A2
      CALL T2ERR(0,' ',OUTSTR,-3)
12960 FORMAT ('Failure to fit, Chisq=',1p,G10.3, ' Delta (est.)=',G10.3)
     *
      L=T2_CONFIRM('Continue (A=infinite)')
      IF (L .eq. 1 .or. L .eq. 4) goto 12940
      IF (L .eq. 3) GOTO 12950
      ENDIF
      ENDIF
      J=0
      FREEN=MAX(NPFIT-NFIT,1)
      DO 12971 I=1,NTERMS
      IF (LFIT(I)) THEN
      J=J+1
      IF (LFULL) THEN
      CALL MNERRS(I,ARGLIS(1),ARGLIS(2),ARGLIS(3),ARGLIS(4))
      WRITE(6,'(3X,A,I2,1P,5(A,G10.3))')  'Coef=',I ,' Err+=',ARGLIS(1) 
     * ,' Err-=',ARGLIS(2)  ,' Eparab.=',ARGLIS(3)  ,' Correlation=',ARG
     *LIS(4)
      ENDIF
      CALL MNPOUT(I,OUTSTR,ACOEF(J),DACOEF(J),A1,A2,IERR)
      DACOEF(J)=DACOEF(J)/SQRT(FREEN)
      ENDIF
12971 CONTINUE
12972 CONTINUE
      CALL MNEMAT(XSUM,ITERMS)
      DO 12981 I=1,ITERMS**2
      XSUM(I)=XSUM(I)/FREEN
12981 CONTINUE
12982 CONTINUE
      ELSE
      D_CHISQ=0
12990 CONTINUE
      IPASS=IPASS+1
      DO 13001 I=1,MAXTER
      YSUM(I) = 0.
      ACOEF(I) = 0.
      DACOEF(I) = 0.
13001 CONTINUE
13002 CONTINUE
      DO 13011 I=1,MAXTER*MAXTER
      XSUM(I) = 0.
13011 CONTINUE
13012 CONTINUE
      DO 13021 I=1,MAXTER
      DO 13031 J=1,MAXTER
      EMATRX(J,I) = 0.
13031 CONTINUE
13032 CONTINUE
13021 CONTINUE
13022 CONTINUE
      Y2SUM = 0.
      DO 13041 I=NTERMS+1,MAXTER
      LFIT(I)=.false.
      LCOFF(I)=.false. 
13041 CONTINUE
13042 CONTINUE
      DO 13051 ISET=NS1_FIT,NS2_FIT
      CALL T2GDSET(ISET,N1_FIT,N2_FIT,N3_FIT,N4_FIT ,ISETD,FIT_LIM,C_SEL
     *ECT(:N_SELECT))
      DO 13061 I=1,3
      D_XYZVAL(I)=0
13061 CONTINUE
13062 CONTINUE
      IF (FLAGS(23)) RETURN
      IF(IMESH_FIT .ne. IBTYPE)GOTO 13051
      DO 13071 I=1,3
      IDXYZ(I,1)=NINCR0
      IDXYZ(I,2)=NINCR0*NINCR1
      IXYZ(MESHN(I),1)=ISETD(NCSIZE*(I-1)+NXDATA)
13071 CONTINUE
13072 CONTINUE
      KLIM=3
      IF (DATBUF(I3).eq.HNONE) KLIM=2
      IF (IBTYPE.ne.1) THEN
      IDXYZ(MESH2,1)=0
      IDXYZ(MESH1,2)=0
      ENDIF
      DO 13081 M=N3_fIT,NL
      DO 13091 I=1,KLIM
      IXYZ(I,2)=IXYZ(I,1)
13091 CONTINUE
13092 CONTINUE
      DO 13101 N=N1_FIT,NP
      ICPOIN(1)=IXYZ(IDEP_FIT,1)
      IF (LDY_FIT) THEN
      DY = DATBUF(IXYZ(IDEP_FIT,1)+1)
      ENDIF
      DO 13111 I=1,KLIM
      D_XYZVAL(I)=DATBUF(IXYZ(I,1))
      IXYZ(I,1)=IXYZ(I,1)+IDXYZ(I,1)
13111 CONTINUE
13112 CONTINUE
      IF(DY .le. 0)GOTO 13101
      IF (LTRAP) RETURN
      IF (N_FIT_LIM.gt.0) THEN
      DO 13121 I=3,N_FIT_LIM+2,2
      DO 13131 K=1,KLIM
      IF(D_XYZVAL(K) .lt. FIT_LIM(K,I) .or. D_XYZVAL(K) .gt. FIT_LIM(K,1
     *+I))GOTO 13131
13131 CONTINUE
13132 CONTINUE
      GOTO 13122
13121 CONTINUE
13122 CONTINUE
      IF(I .gt. N_FIT_LIM+2)GOTO 13101
      ENDIF
      D_XYZVAL(1)=D_XYZVAL(1)-XOFF
      IF (LXLOG) THEN
      IF(D_XYZVAL(1).le.0)GOTO 13101
      D_XYZVAL(1)=LOG(D_XYZVAL(1))
      ENDIF
      WEIGHT=DY
      IF (LYLOG) THEN
      IF(D_XYZVAL(IDEP_FIT).le.0)GOTO 13101
      IF (LDY_FIT) THEN
      IF (WEIGHT .lt. D_XYZVAL(IDEP_FIT)/2) THEN
      WEIGHT=WEIGHT/D_XYZVAL(IDEP_FIT)
      ELSEIF (WEIGHT .lt. D_XYZVAL(IDEP_FIT)) THEN
      WEIGHT=(LOG(D_XYZVAL(IDEP_FIT)+WEIGHT)-  LOG(D_XYZVAL(IDEP_FIT)-WE
     *IGHT))/2
      ELSE
      GOTO 13101
      ENDIF
      ENDIF
      D_XYZVAL(IDEP_FIT)=LOG(D_XYZVAL(IDEP_FIT))
      ENDIF
      CALL T2FUNC(XF,NTERMS,D_XYZVAL(1),IFIT ,LFIT,LCOFF,Coff,YF,SEXPR,N
     *EXPR)
      IF (FLAGS(23) .or. LSYERR) GOTO 13140
      D_XYZVAL(IDEP_FIT)=D_XYZVAL(IDEP_FIT)-YF
      CALL T2DSUM(XF,NFIT,D_XYZVAL(IDEP_FIT),WEIGHT,EMATRX,YSUM,Y2SUM)
      IF (LSYERR) GOTO 13140
13101 CONTINUE
13102 CONTINUE
      DO 13151 I=1,KLIM
      IXYZ(I,1)=IXYZ(I,2)+IDXYZ(I,2)
13151 CONTINUE
13152 CONTINUE
13081 CONTINUE
13082 CONTINUE
13051 CONTINUE
13052 CONTINUE
      IF (NFIT .gt. 0) THEN
      CALL T2DVAL(NFIT,NPFIT,EMATRX,YSUM,Y2SUM,ACOEF,DACOEF,CHISQR, FTES
     *T,RMUL,B,XSUM)
      IF (CHISQR.lt.0 .or. (LGAUSS.and.ACOEF(3).gt.-1.0E-35) ) THEN
12950 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Failure to fit'),4)
      GOTO 12130
      ENDIF
      ENDIF
      ENDIF
      J=0
      DO 13161 I=1,NTERMS
      IF (LFIT(I)) THEN
      J=J+1
      COFF(I)=ACOEF(J)
      IF (LDY_FIT) DCOFF(I)=DACOEF(J)
      ENDIF
13161 CONTINUE
13162 CONTINUE
      DO 13171 I=1,NTERMS
      ACOEF(I)=COFF(I)
      DACOEF(I)=DCOFF(I)
13171 CONTINUE
13172 CONTINUE
      IF (LGAUSS) THEN
      COFF(3)=SQRT(-.5/ACOEF(3))
      DCOFF(3)=DACOEF(3)*(.5*SQRT(0.5)/(-ACOEF(3))**1.5)
      T=-.5/ACOEF(3)
      COFF(2)=ACOEF(2)*T
      DCOFF(2)=DACOEF(2)*T
      T=ACOEF(1)-.25*ACOEF(2)**2/ACOEF(3)
      COFF(1)=EXP(T)
      DCOFF(1)=DACOEF(1)*COFF(1)
      IF (IPASS.lt.3 .and. ABS(COFF(2)) .gt. .0001*(DCOFF(2)+COFF(3)) .a
     *nd. LFIT(2)) THEN
      XOFF=COFF(2)+XOFF
      GOTO 12990
      ENDIF
      COFF(2)=XOFF+COFF(2)
      ENDIF
      DO 13181 I=1,NTERMS
      LCOF1(I)=LCOFF(I).or.LFIT(I)
13181 CONTINUE
13182 CONTINUE
      DO 13191 I=1,MAXTER
      DO 13201 J=1,MAXTER
      EMATRX(J,I) = 0.
13201 CONTINUE
13202 CONTINUE
13191 CONTINUE
13192 CONTINUE
      K=0
      L=0
      DO 13211 I=1,NTERMS
      IF (LCOF1(I)) THEN
      L=L+1
      IF (LFIT(I)) THEN
      M=0
      DO 13221 J=1,NTERMS
      IF (LCOF1(J)) M=M+1
      IF (LFIT(J)) THEN
      K=K+1
      EMATRX(M,L)=XSUM(K)
      ENDIF
13221 CONTINUE
13222 CONTINUE
      ELSE
      EMATRX(L,L)=DACOEF(I)**2
      ENDIF
      ENDIF
13211 CONTINUE
13212 CONTINUE
      IF (LLOG) THEN
      CALL T2_SHOW_FIT(6,LFULL)
      ENDIF
      IF (JOUFIL.gt.0 .and. INTRAC(I)) THEN
      CALL T2_SHOW_FIT(JOUFIL,.true.)
      ENDIF
      IF (LMONITOR) THEN
      CALL TXVOID
      CALL TXNEXT
      CALL T2REST
      NXYLIM(1,1)=N1_FIT
      NXYLIM(1,2)=N2_FIT
      NXYLIM(2,1)=N3_FIT
      NXYLIM(2,2)=N4_FIT
      NXYLIM(3,1)=NS1_FIT
      NXYLIM(3,2)=NS2_FIT
      DO 13231 I=1,2
      DO 13241 J=1,3
      EXYZLIM(J,I)=FIT_LIM(J,I)
13241 CONTINUE
13242 CONTINUE
13231 CONTINUE
13232 CONTINUE
      DO 13251 ISET=NS1_FIT,NS2_FIT
      CALL T2GDSET(ISET,N1_FIT,N2_FIT,N3_FIT,N4_FIT ,ISETD,FIT_LIM,C_SEL
     *ECT(:N_SELECT))
      IF (IBTYPE .eq. 1 .and. NP .ge. N1_FIT) THEN
      CALL T2PLOT(DATBUF(I1),DATBUF(I2),DATBUF(I3), DATBUF(I4),DATBUF(I5
     *),DATBUF(I6), DATBUF(I7),NP-N1_FIT+1,NINCR0,0,0.,FIT_LIM, HNONE,HN
     *ONE,HNONE)
      ENDIF
13251 CONTINUE
13252 CONTINUE
      ELSE
      IF (LTRAP.or..not.LCURVE) RETURN
      ENDIF
      IF (LCURVE .and. .not.LAPPEN) CALL T2PNTR
      IERROR=1
      IF (LDY_FIT) IERROR=2
      PARM(1,1)=PARM(1,1)+PARM(3,1)/2
      PARM(1,2)=PARM(1,2)+PARM(3,2)/2
      CALL T2_CREATE_HIST(PARM,2,C_NAME(:N_NAME),IERROR)
      PARM(1,1)=PARM(1,1)-PARM(3,1)/2
      PARM(1,2)=PARM(1,2)-PARM(3,2)/2
      IF (FLAGS(23)) RETURN
      CALL T2GDSET(NDSETS,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      IF (FLAGS(23)) RETURN
      KLIM=3
      IF (DATBUF(I3).eq.HNONE .or. IBTYPE.eq.1) KLIM=2
      I3=ISETD(NCSIZE*(IDEP_FIT-1)+NXDATA)
      LDY_FIT=LDY_FIT .and. ISETD(NCSIZE*(IDEP_FIT-1)+NDXDATA) .gt. 1
      LNDY=LDY_FIT .and. ISETD(NCSIZE*(IDEP_FIT-1)+NNDXDATA) .gt. 1
      DO 13261 M=1,NL
      D_XYZVAL(2)=PARM(1,2)+(M-0.5)*PARM(3,2)
      DO 13271 N=1,NP
      IF (LTRAP) RETURN
      D_XYZVAL(1)=PARM(1,1)+(N-0.5)*PARM(3,1)
      ICPOIN(1)=I3
      D_XYZVAL(1)=D_XYZVAL(1)-XOFF
      IF (LXLOG) D_XYZVAL(1)=LOG(D_XYZVAL(1)-XOFF)
      IF (LSYERR) GOTO 13280
      CALL T2FUNC(XF,NTERMS,D_XYZVAL(1),IFIT,LCOF1,LCOF1,ACOEF  ,D_XYZVA
     *L(IDEP_FIT),SEXPR,NEXPR)
      IF (FLAGS(23) .or. LSYERR) GOTO 13280
      IF (LYLOG) D_XYZVAL(IDEP_FIT)=EXP(D_XYZVAL(IDEP_FIT))
      IF (LSYERR) GOTO 13280
      IF (LDY_FIT) THEN
      DY=0
      DO 13291 J=1,NCOFF
      DO 13301 K=1,NCOFF
      DY=DY+EMATRX(K,J)*XF(K)*XF(J)
13301 CONTINUE
13302 CONTINUE
13291 CONTINUE
13292 CONTINUE
      DY=SQRT(ABS(DY))
      IF (LYLOG) DY=DY*D_XYZVAL(IDEP_FIT)
      DATBUF(I3+1)=DY
      IF (LNDY) DATBUF(I3+2)=DY
      ENDIF
      DATBUF(I3)=D_XYZVAL(IDEP_FIT)
      I3=I3+NINCR0
13271 CONTINUE
13272 CONTINUE
      I3=I3+NINCR0
13261 CONTINUE
13262 CONTINUE
      IF (LMONITOR) THEN
      CALL T2GDSET(NDSETS,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      CALL T2JOIN(DATBUF(I1),DATBUF(I2),DATBUF(I3), ITXSEC,0,NP,NINCR0)
      CALL T2_PLOT_TITLE(NDSETS,.false.)
      CALL TXVOID
      IF (.not. LCURVE) THEN
      CALL T2RMLS
      RETURN
      ENDIF
      ENDIF
      IF (LCURVE) DATDAT(1,1)=HNONE
      IF (LLOG) THEN
      WRITE(OUTSTR,'(1p,4(A,G10.3))')  'Curve X from ',PARM(1,1)+PARM(3
     *,1)/2, ' to ',PARM(2,1)-PARM(3,1)/2,' by ',PARM(3,1)
      IF (PARM(4,2) .gt. 0.5) WRITE(OUTSTR(T2BTRIM(OUTSTR)+1:),'(1p,4(A,
     *G10.3))') ' Y from ',PARM(1,2)+PARM(3,2)/2, ' to ',PARM(2,2)-PARM(
     *3,2)/2,' by ',PARM(3,2)
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
12630 CONTINUE
      RETURN
13280 CONTINUE
      WRITE(OUTSTR,*)'* Curve generation X=',D_XYZVAL(1),' Point=',N
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      LSYERR=.false.
      RETURN
13140 CONTINUE
      WRITE(OUTSTR,*)'* Fitting X=',DATBUF(I1-NINCR0), ' Y=',DATBUF(I2-N
     *INCR0),' Point=',N
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      LSYERR=.false.
12130 CONTINUE
      NTERMS=0
      END
      LOGICAL FUNCTION T2_CHECK_DEPERR(NS1,NS2,N1,N2,N3,N4,TLIM)
      IMPLICIT NONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      REAL HNONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL XV,YV,DY,ZV
      INTEGER NS1,NS2,N1,N2,N3,N4
      INTEGER ISET,N
      REAL TLIM(3,2)
      REAL XYZVAL(3)
      EQUIVALENCE (XYZVAL(1),XV),(XYZVAL(2),YV),(XYZVAL(3),ZV)
      DATA HNONE /-666.666/
      T2_CHECK_DEPERR=.FALSE.
      DO 13311 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,'*')
      IF(DATBUF(I5).eq.HNONE)GOTO 13311
      IF(IBTYPE.ne.1)GOTO 13311
      DO 13321 N=N1,NP
      DY=DATBUF(I5)
      I5=I5+NINCR0
      IF (DY.gt.0 .and. DY .lt. 1.0E35) THEN
      T2_CHECK_DEPERR=.TRUE.
      RETURN
      ENDIF
13321 CONTINUE
13322 CONTINUE
13311 CONTINUE
13312 CONTINUE
      END
      SUBROUTINE T2_DUMMY
      END
      SUBROUTINE T2_FCN(NPAR,GRAD,FVAL,XvAL,IFLAG,FUTIL)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      EXTERNAL FUTIL
      DOUBLE PRECISION Fval,Xval(*),Grad(*),FUTIL
      INTEGER NPAR,IFLAG
      INTEGER IXYZ(3,2),IDXYZ(3,2)
      INTEGER I,J,K,ISET,M,N,KLIM
      LOGICAL LC(MAXTER)
      DOUBLE PRECISION YF, D_XYZVAL(4)
      DOUBLE PRECISION DY, WEIGHT, FREEN
      DATA HNONE /-666.666/
      DATA LC/MAXTER*.true./
      IF (NPAR .le. 0) GOTO 13330
      DO 13341 I=1,MAXTER
      LC(I)=LCOFF(I) .or. LFIT(I)
13341 CONTINUE
13342 CONTINUE
      IF (IFIT .eq. 7) THEN
      J=0
      DO 13351 I=1,NTERMS
      IF (LC(I)) THEN
      J=J+1
      COFF(J)=XVAL(J)
      ENDIF
13351 CONTINUE
13352 CONTINUE
      ENDIF
      CHISQR=0
      IF (IFLAG .eq. 2) THEN
      DO 13361 I=1,NPAR
      GRAD(I)=0
13361 CONTINUE
13362 CONTINUE
      ENDIF
      DY=1
      DO 13371 ISET=NS1_FIT,NS2_FIT
      CALL T2GDSET(ISET,N1_FIT,N2_FIT,N3_FIT,N4_FIT ,ISETD,FIT_LIM,C_SEL
     *ECT(:N_SELECT))
      IF (FLAGS(23)) GOTO 13330
      IF(IMESH_FIT .ne. IBTYPE)GOTO 13371
      DO 13381 I=1,3
      IDXYZ(I,1)=NINCR0
      IDXYZ(I,2)=NINCR0*NINCR1
      IXYZ(MESHN(I),1)=ISETD(NCSIZE*(I-1)+NXDATA)
13381 CONTINUE
13382 CONTINUE
      KLIM=3
      IF (DATBUF(I3).eq.HNONE) KLIM=2
      IF (IBTYPE.ne.1) THEN
      IDXYZ(MESH2,1)=0
      IDXYZ(MESH1,2)=0
      ENDIF
      DO 13391 M=N3_fIT,NL
      DO 13401 I=1,KLIM
      IXYZ(I,2)=IXYZ(I,1)
13401 CONTINUE
13402 CONTINUE
      DO 13411 N=N1_FIT,NP
      ICPOIN(1)=IXYZ(IDEP_FIT,1)
      IF (LDY_FIT) THEN
      DY = DATBUF(IXYZ(IDEP_FIT,1)+1)
      ENDIF
      DO 13421 I=1,KLIM
      D_XYZVAL(I)=DATBUF(IXYZ(I,1))
      IXYZ(I,1)=IXYZ(I,1)+IDXYZ(I,1)
13421 CONTINUE
13422 CONTINUE
      IF(DY .le. 0)GOTO 13411
      IF (LTRAP) GOTO 13330
      IF (N_FIT_LIM.gt.0) THEN
      DO 13431 I=3,N_FIT_LIM+2,2
      DO 13441 K=1,KLIM
      IF(D_XYZVAL(K) .lt. FIT_LIM(K,I) .or. D_XYZVAL(K) .gt. FIT_LIM(K,1
     *+I))GOTO 13441
13441 CONTINUE
13442 CONTINUE
      GOTO 13432
13431 CONTINUE
13432 CONTINUE
      IF(I .gt. N_FIT_LIM+2)GOTO 13411
      ENDIF
      D_XYZVAL(1)=D_XYZVAL(1)-XOFF
      IF (LXLOG) THEN
      IF(D_XYZVAL(1).le.0)GOTO 13411
      D_XYZVAL(1)=LOG(D_XYZVAL(1))
      ENDIF
      WEIGHT=DY
      IF (LYLOG) THEN
      IF(D_XYZVAL(IDEP_FIT).le.0)GOTO 13411
      IF (LDY_FIT) THEN
      IF (WEIGHT .lt. D_XYZVAL(IDEP_FIT)/2) THEN
      WEIGHT=WEIGHT/D_XYZVAL(IDEP_FIT)
      ELSEIF (WEIGHT .lt. D_XYZVAL(IDEP_FIT)) THEN
      WEIGHT=(LOG(D_XYZVAL(IDEP_FIT)+WEIGHT)-  LOG(D_XYZVAL(IDEP_FIT)-WE
     *IGHT))/2
      ELSE
      GOTO 13411
      ENDIF
      ENDIF
      D_XYZVAL(IDEP_FIT)=LOG(D_XYZVAL(IDEP_FIT))
      ENDIF
      WEIGHT=1/WEIGHT
      CALL T2FUNC(XF,NTERMS,D_XYZVAL(1)  ,IFIT,LFIT,LC,XVAL,YF,SEXPR,NEX
     *PR)
      IF (FLAGS(23) .or. LSYERR) GOTO 13330
      CHISQR=CHISQR+((YF-D_XYZVAL(IDEP_FIT))*WEIGHT)**2
      IF (LSYERR) GOTO 13330
      IF (IFLAG .eq. 2) THEN
      DO 13451 I=1,NPAR
      GRAD(I)=GRAD(I)+  2*(YF-D_XYZVAL(IDEP_FIT))*XF(I)*WEIGHT**2
13451 CONTINUE
13452 CONTINUE
      ENDIF
13411 CONTINUE
13412 CONTINUE
      DO 13461 I=1,KLIM
      IXYZ(I,1)=IXYZ(I,2)+IDXYZ(I,2)
13461 CONTINUE
13462 CONTINUE
13391 CONTINUE
13392 CONTINUE
13371 CONTINUE
13372 CONTINUE
      FREEN=MAX(NPFIT-NFIT,1)
      CHISQR=CHISQR/FREEN
      IF (IFLAG .eq. 2) THEN
      DO 13471 I=1,NPAR
      GRAD(I)=GRAD(I)/FREEN
13471 CONTINUE
13472 CONTINUE
      ENDIF
      FVAL=CHISQR
      RETURN
13330 CONTINUE
      FVAL=0
      END
      SUBROUTINE T2_SAVE_FIT(INFOIN,CARDIN,LGET)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      LOGICAL LGET
      INTEGER INFOIN(10)
      INTEGER I,J,K,L,M,N,IOSTAT
      CHARACTER*(*) CARDIN
      CHARACTER*80 NAME
      CHARACTER*12 OPER(2)
      DATA OPER/'Written to','Read from'/
      NAME='Topdrawer Fit parameters'
      C_SELECT='tdfit.tfb'
      N_SELECT=9
      GOTO 13481
13510 CONTINUE
      C_FILE=STRNG
      N_FILE=NSTRNG
      CALL T2_SET_DEFAULT_FILE(C_FILE,N_FILE,'tdfit.tfb')
      GOTO 13481
13520 CONTINUE
      IF (NSTRNG.gt.0) NAME=STRNG(1:NSTRNG)
      GOTO 13481
13530 CONTINUE
      LLOG=LTOKEN
      GOTO 13481
13481 CALL TOKEN(INFOIN,CARDIN,'FILE:F,OUTPUT:F,INPUT:F,NAME:T,LOG:Y,;')
     *
      GOTO (13482,13487,13485,13485,13485,13485,13481,13487, 13485),INTE
     *RP
13485 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 13481
13487 GOTO ( 13510,13510,13510,13520,13530,13485),KEYORD
13482 CONTINUE
      IF (FLAGS(23)) RETURN
      IF (LGET) THEN
      OPEN(ERR=13540, UNIT=1, FILE=C_FILE(1:N_FILE), STATUS='OLD',   IOS
     *TAT=IOSTAT, FORM='UNFORMATTED')
      CALL T2_CONCEAL_PASSWORD(C_FILE,N_FILE)
      READ(1,ERR=13550) NAME(1:6),I
      IF (I.gt.MAXTER .or. NAME(1:6).ne. 'TDFIT0') THEN
      FLAGS(23)=.true.
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Bad format on file:'//C_F
     *ILE(1:N_FILE)),4)
      GOTO 13560
      ENDIF
      NTERMS=I
      READ(1,ERR=13550) NAME
      READ(1,ERR=13550) FITSTR
      READ(1,ERR=13550)  IFIT, NCOFF, NFIT, NPFIT, LXLOG, LYLOG, XOFF, R
     *MUL, CHISQR, FTEST
      READ(1,ERR=13550)  (LCOFF(J), LFIT(J), LCOF1(J), COFF(J), DCOFF(J)
     * ,ACOEF(J),J=1,I)
      READ(1,ERR=13550)  ((EMATRX(K,J), K=1,I ), J=1,I)
      IF (IFIT.eq.7) READ(1,ERR=13550)NEXTER,J,SEXPR(:J) ,(NEXPR(J),J=1,
     *NEXTER)
      ELSE
      OPEN(ERR=13540, UNIT=1, FILE=C_FILE(1:N_FILE), STATUS='NEW', IOSTA
     *T=IOSTAT, FORM='UNFORMATTED')
      CALL T2_CONCEAL_PASSWORD(C_FILE,N_FILE)
      I=NTERMS
      WRITE(1,ERR=13550) 'TDFIT0',I
      WRITE(1,ERR=13550) NAME
      WRITE(1,ERR=13550) FITSTR
      WRITE(1,ERR=13550)  IFIT, NCOFF, NFIT, NPFIT, LXLOG, LYLOG, XOFF, 
     *RMUL, CHISQR, FTEST
      WRITE(1,ERR=13550)  (LCOFF(J), LFIT(J), LCOF1(J), COFF(J), DCOFF(J
     *) ,ACOEF(J),J=1,I)
      WRITE(1,ERR=13550)  ((EMATRX(K,J), K=1,I ), J=1,I)
      IF (IFIT.eq.7) WRITE(1,ERR=13550)NEXTER,LEN(SEXPR),SEXPR, (NEXPR(J
     *),J=1,NEXTER)
      ENDIF
      N=INDEX(C_FILE,' ')-1
      IF (N.le.0) N=LEN(C_FILE)
      I=1
      IF (LGET) I=2
      IF (LLOG) WRITE(6,*)'  FIT ',OPER(I),' File:',C_FILE(1:N_FILE)
      N=1
      DO 13571 I=1,LEN(NAME)
      IF (NAME(I:I).ne. ' ') N=I
13571 CONTINUE
13572 CONTINUE
      IF (LLOG) WRITE(6,*)'     Name:',NAME(1:N)
      GOTO 13560
13550 CONTINUE
      CALL T2_TYPE_ERROR(INFOIN,CARDIN,' ',IOSTAT)
13560 CONTINUE
      CLOSE(UNIT=1,ERR=13580)
13580 CONTINUE
      RETURN
13540 CONTINUE
      CALL T2_TYPE_ERROR(INFOIN,CARDIN,C_FILE(:N_FILE),IOSTAT)
      END
      SUBROUTINE T2_LIST_FIT(INFOIN,CARDIN)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      LOGICAL LFULL,LLOG
      CHARACTER*(*) CARDIN
      CHARACTER*10 C_ACCESS
      CHARACTER*3 C_STATUS
      INTEGER INFOIN(10)
      INTEGER IOSTAT
      DATA C_ACCESS/'SEQUENTIAL'/
      DATA C_STATUS/'NEW'/
      DATA IOSTAT/0/
      IOSTAT=0
      LFULL=.false.
      LLOG=FLAGS(95)
      C_FILE='tfit.lis'
      N_FILE=8
      C_STATUS='NEW'
      C_ACCESS='SEQUENTIAL'
      GOTO 13591
13620 CONTINUE
      IF (LTOKEN) THEN
      C_ACCESS='APPEND'
      C_STATUS='OLD'
      ELSE
      C_ACCESS='SEQUENTIAL'
      C_STATUS='NEW'
      ENDIF
      GOTO 13591
13630 CONTINUE
      LFULL=LTOKEN
      GOTO 13591
13640 CONTINUE
      C_FILE=STRNG
      N_FILE=NSTRNG
      CALL T2_SET_DEFAULT_FILE(C_FILE,N_FILE,'tfit.lis')
      GOTO 13591
13591 CALL TOKEN(INFOIN,CARDIN,'APPEND:Y,FULL:Y,FILE:F,;')
      GOTO (13592,13597,13595,13595,13595,13595,13591,13597, 13595),INTE
     *RP
13595 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 13591
13597 GOTO ( 13620,13630,13640,13595),KEYORD
13592 CONTINUE
      OPEN(UNIT=1  ,FILE=C_FILE(1:N_FILE)  ,STATUS=C_STATUS ,ACCESS=C_AC
     *CESS  ,IOSTAT=IOSTAT ,ERR=13650)
      CALL T2_SHOW_FIT(1,LFULL)
      IF (LLOG) THEN
      N_FILE=0
      INQUIRE(1 ,NAME=C_FILE)
      CALL T2_CONCEAL_PASSWORD(C_FILE,N_FILE)
      if (C_ACCESS(1:1) .eq. 'S') C_ACCESS='written'
      WRITE(6,*)'  Fit ',C_ACCESS,' to:'  ,C_FILE(:N_FILE)
      ENDIF
      CLOSE(1)
      RETURN
13650 CONTINUE
      CALL T2_TYPE_ERROR(INFOIN,CARDIN,C_FILE(:N_FILE),IOSTAT)
      END
      SUBROUTINE T2_SHOW_FIT(IUNIT,LFULL)
      IMPLICIT NONE
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      LOGICAL LFULL
      INTEGER ITERMS(MAXTER),IUNIT
      INTEGER I,J,K,L,M,N
      IF (NTERMS.le.0) THEN
      WRITE(IUNIT,*)
      RETURN
      ENDIF
      K=0
      DO 13661 I=1,NTERMS
      IF(LCOF1(I)) THEN
      K=K+1
      ITERMS(K)=I
      ENDIF
13661 CONTINUE
13662 CONTINUE
      N=1
      DO 13671 I=1,LEN(FITSTR)
      IF (FITSTR(I:I).ne.' ')N=I
13671 CONTINUE
13672 CONTINUE
      WRITE(IUNIT,13680)FITSTR(1:N),CHISQR,NPFIT,FTEST,XOFF
      DO 13691 I=1,NCOFF
      L=ITERMS(I)
      J=MIN(MAX(NEXPR(L)+1,1),LEN(SEXPR))
      K=MIN(MAX(NEXPR(L+1)-1,J),LEN(SEXPR))
      WRITE(IUNIT,13700) L-1,COFF(L),DCOFF(L),SEXPR(J:K)
13691 CONTINUE
13692 CONTINUE
13680 FORMAT('   ( ',A,' )', /,'   ( Chi squared/deg-of-freedom = ',1P,G
     *11.3, ' Points=',0P,I5,')', /,'   ( Ftest  =                     '
     *,1P,G11.3,')', /,'   ( Offset =                     ',G11.3,')', /
     *,'   ( Term  Coefficients  Errors )')
C3700 FORMAT('   (',(I5,1P,G14.6,'',G12.3),'',A,')')
13700 FORMAT('   (',(I5,1P,G14.6,4X,G12.3),4X,A,')')
      IF (LFULL) THEN
      IF (D_CHISQ .gt. 0) WRITE(IUNIT,*)'   Echisq=',D_CHISQ,' Nonlinear
     *'
      WRITE(IUNIT,*) '  (Error matrix)'
      DO 13711 I=1,NCOFF
      WRITE(IUNIT,13720)  ITERMS(I)-1,(EMATRX(ITERMS(J),ITERMS(I)),J=1,N
     *COFF)
13711 CONTINUE
13712 CONTINUE
13720 FORMAT( '   (',I2,')',1P,(T10,'(',4G15.7,')') )
      ENDIF
      END
      SUBROUTINE T2FUNC(XF,NTERMS,D_XV,ITYPE,LFIT,LCOFF,A,YF,SEXPR,NEXPR
     *)
      IMPLICIT NONE
      CHARACTER*(*) SEXPR
      INTEGER NEXPR(*)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN

      CHARACTER*(512+8+40+30) SEXPRX 
      INTEGER NTERMS,ITERM,ITYPE
      INTEGER INFO1(10)
      LOGICAL LFIT(NTERMS),LCOFF(NTERMS)
      DOUBLE PRECISION XF(NTERMS),A(NTERMS),D_XV(2)
      DOUBLE PRECISION TEMP,TERM,TERM1,TERM2,TERM3,YF
      REAL*4 XVS,TDUFUN
      REAL XOFF
      LOGICAL LSAVE
      INTEGER I,J,K,L,IMIN,ISAVE,ICOEF
      ITERM=0
      YF=0
      CALL GETXOFF(XOFF)

      IF (LCOFF(1)) YF=A(1)
      IF (LFIT(1)) THEN
      ITERM=ITERM+1
      XF(1) = 1.0
      ENDIF
      IF (NTERMS .LE. 1) RETURN
      TEMP = D_XV(1)
      GO TO (13730,13730,13740,13750,13760,13770,13780,13790,13800,13810
     *,13820, 13830) ITYPE+1
      XVS=D_XV(1)
      DO 13841 J=2,NTERMS
      IF (LCOFF(J).or.LFIT(J)) THEN
      TEMP = TDUFUN(-ITYPE,J-1,XVS)
      IF (LCOFF(J)) YF=YF+TEMP*A(J)
      IF (LFIT(J)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
      ENDIF
13841 CONTINUE
13842 CONTINUE
      RETURN
13730 CONTINUE
      TEMP=1.0
      DO 13851 J=2,NTERMS
      TEMP = TEMP*D_XV(1)
      IF (LCOFF(J)) YF=YF+TEMP*A(J)
      IF (LFIT(J)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
13851 CONTINUE
13852 CONTINUE
      RETURN
13740 CONTINUE
      DO 13741 J=2,NTERMS
      IF (LFIT(J).or.LCOFF(J)) THEN
      TEMP = SIN(RADANG*D_XV(1)*(J-1))
      IF (LCOFF(J)) YF=YF+A(J)*TEMP
      IF (LFIT(J)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
      ENDIF
13741 CONTINUE
13742 CONTINUE
      RETURN
13750 CONTINUE
      DO 13751 J=2,NTERMS
      IF (LFIT(J).or.LCOFF(J)) THEN
      TEMP = COS(RADANG*D_XV(1)*(J-1))
      IF (LCOFF(J)) YF=YF+A(J)*TEMP
      IF (LFIT(J)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
      ENDIF
13751 CONTINUE
13752 CONTINUE
      RETURN
13760 CONTINUE
      TEMP = COS(RADANG*D_XV(1))
13770 CONTINUE
      TERM = TEMP
      TERM1= 1.0
      TERM2=TEMP
      IF (NTERMS.lt.2) return
      IF (LCOFF(2)) YF=YF+TERM2*A(2)
      IF (LFIT(2)) THEN
      ITERM=ITERM+1
      XF(ITERM)=TERM2
      ENDIF
      DO 13861 J=3,NTERMS
      TERM = ( (2*J-3)*TEMP*TERM2 - (J-2)*TERM1 )/(J-1)
      TERM1=TERM2
      TERM2=TERM
      IF (LCOFF(J)) YF=YF+TERM2*A(J)
      IF (LFIT(J)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TERM
      ENDIF
13861 CONTINUE
13862 CONTINUE
      RETURN
13780 CONTINUE
      TEMP=1.0
      DO 13871 J=2,NTERMS
      TEMP = TEMP/D_XV(1)
      IF (LCOFF(J)) YF=YF+TEMP*A(J)
      IF (LFIT(J)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
13871 CONTINUE
13872 CONTINUE
      RETURN
13790 CONTINUE
      ISAVE=1
      LSAVE=ICHSAVE(ISAVE) .eq. 1
      DO 13881 I=2,NTERMS
      INFO1(3)=NEXPR(I)
      INFO1(1)=NEXPR(I+1)-1
      IF(INFO1(3) .gt. INFO1(1))GOTO 13882
      CALL T2EXPR(INFO1,SEXPR,ICHSAVE(ISAVE),NCHSAVE-ISAVE+1)
      IF (ICHSAVE(ISAVE) .eq. 2) ISAVE=ICHSAVE(ISAVE+1)+ISAVE 
      IF (LSAVE) THEN
      IF (INFO1(1) .gt. INFO1(3)) THEN
      SEXPRX = '*** ERROR *** Unprocessed expression:'//  SEXPR(INFO1(3)
     *+1:INFO1(1))
      CALL T2ERR(0,' ',SEXPRX,3)
      ENDIF
      ICHSAVE(ISAVE)=1
      ENDIF
      TEMP = FLOTNG
      IF (LCOFF(I)) YF=YF+TEMP*A(I)
      IF (LFIT(I)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
13881 CONTINUE
13882 CONTINUE
      RETURN
13800 CONTINUE
      ITERM=0
      TEMP=EXP(-0.5*((D_XV(1)-A(2)+XOFF)/A(3))**2)
      YF=A(1)*TEMP
      IF (LFIT(1)) THEN
      ITERM=ITERM+1
      XF(ITERM)=TEMP
      ENDIF
      IF (LFIT(2)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*(D_XV(1)-A(2)+XOFF) /A(3)**2
      ENDIF
      IF (LFIT(3)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*(D_XV(1)-A(2)+XOFF)**2/A(3)**3
      ENDIF
      IMIN=4
      GOTO 13890
13810 CONTINUE
      ITERM=0
      YF=EXP(A(1)+(D_XV(1))*A(2))
      IF (LFIT(1)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF
      ENDIF
      IF (LFIT(2)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*D_XV(1)
      ENDIF
      IMIN=3
13890 CONTINUE
      TEMP=1
      DO 13901 I=IMIN,NTERMS
      IF (lfit(I) .or. lcoff(I)) THEN
      IF (LFIT(I)) THEN
      ITERM=ITERM+1
      XF(ITERM)=TEMP
      ENDIF
      IF (LCOFF(I)) YF=YF+TEMP*A(ITERM)
      ENDIF
      TEMP=TEMP*D_XV(1)
13901 CONTINUE
13902 CONTINUE
      RETURN
13820 CONTINUE
      ITERM=0
      TEMP=EXP(-0.5*( ((D_XV(1)-A(2)+XOFF)/A(3))**2+ 
     + ((D_XV(2)-A(4)+XOFF)/A(5))**2  ))
      YF=A(1)*TEMP
      IF (LFIT(1)) THEN
      ITERM=ITERM+1
      XF(1)=TEMP
      ENDIF
      IF (LFIT(2)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*(D_XV(1)-A(2)+XOFF) /A(3)**2
      ENDIF
      IF (LFIT(3)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*(D_XV(1)-A(2)+XOFF)**2/A(3)**3
      ENDIF
      IF (LFIT(4)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*(D_XV(2)-A(4)+XOFF) /A(5)**2
      ENDIF
      IF (LFIT(5)) THEN
      ITERM=ITERM+1
      XF(ITERM)=YF*(D_XV(2)-A(4)+XOFF)**2/A(5)**3
      ENDIF
      IMIN=6
      goto 13910
13830 CONTINUE
      ITERM=0
      IMIN=1
13910 CONTINUE
      continue
      ICOEF=IMIN
      IF (ICOEF .gt. NTERMS) RETURN
      TEMP=1.0
      IF(LCOFF(ICOEF)) YF=YF+A(ICOEF)*TEMP
      IF (LFIT(ICOEF)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
      DO 13921 I=1,5
      DO 13931 J=0,I
      ICOEF=ICOEF+1
      IF (ICOEF .gt. NTERMS) RETURN
      IF (LCOFF(ICOEF) .or. LFIT(ICOEF)) THEN
      IF (J .eq. 0) THEN
      TEMP=D_XV(1)**(I)
      ELSEIF (J .eq. I) THEN
      TEMP=D_XV(2)**(I)
      ELSE
      TEMP=D_XV(1)**(I-J)*D_XV(2)**(J)
      ENDIF
      IF(LCOFF(ICOEF)) YF=YF+A(ICOEF)*TEMP
      IF (LFIT(ICOEF)) THEN
      ITERM=ITERM+1
      XF(ITERM) = TEMP
      ENDIF
      ENDIF
13931 CONTINUE
13932 CONTINUE
13921 CONTINUE
13922 CONTINUE
      RETURN
      END
      FUNCTION TDUFUN(ITYPE,IORD,XV)
      TDUFUN=XV**IORD
      END
      SUBROUTINE T2_MDIV(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      LOGICAL LBINOM,LERR,LNERR,LVECT
      INTEGER ISET(3),IN(3),IOP,I,J,K,L,M,N,NSET,JSET,IDSET,JUMP, IS1,IS
     *2,IS3,IX1,IX2,IX3,IDX1,IDX2,IDX3, IY1,IY2,IY3,IDY1,IDY2,IDY3,INDY3
     *,IZ1,IZ2,IZ3, IDZ1,IDZ2,IDZ3, IMIN,IMAX,IZERO,IDSETS, JCOFF,JFIT,K
     *COFF,KFIT
      REAL WEIGHT(3),EWEIGHT(3)
      CHARACTER*1 C_XYZ(3)
      INTEGER ISETC(NSETD+2,3),II,NXYZ,IXYZ,IXYZMAX,NLIM
      REAL DX1,DX2,T1,T2,T,XYZ(19,3)
      REAL ONE 
      PARAMETER (ONE=1.0)
      REAL X2,Y1,Y2,DY1,DY2,DT,FAC1,FAC2,TS
      DOUBLE PRECISION D_XV,D_YV,D_ZV
      DOUBLE PRECISION D_XYZVAL(4)
      EQUIVALENCE (D_XYZVAL(1),D_XV),(D_XYZVAL(2),D_YV),(D_XYZVAL(3),D_Z
     *V)
      REAL HNONE
      CHARACTER*1 COPER(4)
      INTEGER T2BTRIM, IDEP
      EQUIVALENCE (IS1, ISETC(NSDATA,1)), (IS2, ISETC(NSDATA,2)), (IS3, 
     *ISETC(NSDATA,3)), (IX1, ISETC(NXDATA,1)), (IX2, ISETC(NXDATA,2)), 
     *(IX3, ISETC(NXDATA,3)), (IDX1, ISETC(NDXDATA,1)), (IDX2, ISETC(NDX
     *DATA,2)), (IDX3, ISETC(NDXDATA,3)), (IY1, ISETC(NYDATA,1)), (IY2, 
     *ISETC(NYDATA,2)), (IY3, ISETC(NYDATA,3)), (IDY1, ISETC(NDYDATA,1))
     *, (IDY2, ISETC(NDYDATA,2)), (IDY3, ISETC(NDYDATA,3)), (INDY3, ISET
     *C(NNDYDATA,3)), (IZ1, ISETC(NZDATA,1)), (IZ2, ISETC(NZDATA,2)), (I
     *Z3, ISETC(NZDATA,3)), (IDZ1, ISETC(NDZDATA,1)), (IDZ2, ISETC(NDZDA
     *TA,2)), (IDZ3, ISETC(NDZDATA,3))
      DATA C_XYZ/'X','Y','Z'/
      DATA HNONE /-666.666/
      DATA COPER/'*','/','+','-'/
      IOP=INTEG
      IDEP=0
      DO 13941 I=1,3
      ISET(I)=0
      WEIGHT(I)=1
      EWEIGHT(I)=0
13941 CONTINUE
13942 CONTINUE
      LBINOM=.false.
      LERR=.true.
      LVECT=.false.
      N_NAME=1
      C_NAME='%'
      NSET=0
      JSET=3
      IDSETS=MAX(1,NDSETS)
      IF (NPOINT.eq.0) IDSETS=0
      GOTO 13951
13960 CONTINUE
      NSTRNG=MAX(1,NSTRNG)
      DO 13971 I=1,NDSETS
      CALL T2GDSET(I,1, 2 147 483 647  ,1, 2 147 483 647,ISETC,HNONE,STR
     *NG(:NSTRNG))
      IF (ISETC(NPDATA,1) .gt. 1) THEN
      INTEG=I
      GOTO 13980
      ENDIF
13971 CONTINUE
13972 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,'*** ERRROR *** No such data set name',4)
     *
      RETURN
13990 CONTINUE
13980 CONTINUE
      IF (INTEG.lt.1 .or. INTEG.gt.IDSETS) THEN
14000 CONTINUE
      WRITE(OUTSTR,*)'*** ERROR *** Nonexistant data set (',IDSETS,')'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      RETURN
      ENDIF
14010 CONTINUE
      IF (NSET.gt.2 .or. ISET(JSET).ne.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Redundant options'),4)
      RETURN
      ENDIF
      ISET(JSET)=INTEG
      JSET=JSET-1
      IF (JSET.le.0) JSET=2
      NSET=NSET+1
      GOTO 13951
14040 CONTINUE
      JSET=INTEG
      GOTO 13951
14050 CONTINUE
      LAPPEN=LTOKEN
      GOTO 13951
14060 CONTINUE
      LCHECK=LTOKEN
      GOTO 13951
14070 CONTINUE
      LERR=LTOKEN
      GOTO 13951
14080 CONTINUE
      LBINOM=LTOKEN
      IF (LBINOM.and.(IOP.eq.1.or.IOP.eq.4)) CALL T2ERR(INFOIN,CARDIN,'*
     *** ERROR *** Illegal for multiply',4)
      GOTO 13951
14090 CONTINUE
      EWEIGHT(JSET)=FLOTNG
      GOTO 13951
14100 CONTINUE
      IF (NTERMS.le.0) goto 14000
      GOTO 14010
14110 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 13951
14120 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 13951
14130 CONTINUE
      LLOG=LTOKEN
      GOTO 13951
14140 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 13951
14150 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 13951
14160 CONTINUE
      GOTO 13980
14170 CONTINUE
      IDEP=INTEG
      GOTO 13951
14180 CONTINUE
      LVECT=LTOKEN
      GOTO 13951
14190 CONTINUE
      WEIGHT(JSET)=FLOTNG
      GOTO 13951
14020 GOTO ( 14040,14040,14040,14050,14060,14060,14070,14080,14090,14100
     *,14110,14120,14120,14130,14140,14150,14150,14160,14170,14170,14180
     *,14190,13955),KEYORD
13951 CALL TOKEN(INFOIN,CARDIN,'FROM:1,TO:1,BY:2,APPEND:Y,AVERAGE:Y,CHEC
     *K:Y,ERROR:Y,EFFICIENCY:Y,EWEIGHT::0,FIT:-1,LIMITED,LINES,ROWS,LOG:
     *Y,NAME:S,POINTS,COLUMNS,SET:1::0,Y:2,Z:3,VECTOR:Y,WEIGHT:::1,;')
      GOTO (13952,14020,13990,13990,13960,13955,13955,14020,13955),INTER
     *P
13955 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 13951
13952 CONTINUE
      IF (NSET.lt.2) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing data set numbers',
     *4)
      ENDIF
      DO 14201 I=1,2
      IF (ISET(I).eq.0) THEN
      EWEIGHT(I)=EWEIGHT(3)
      WEIGHT(I)=WEIGHT(3)
      ISET(I)=ISET(3)
      ENDIF
      IF (WEIGHT(I) .eq. 0) THEN
      EWEIGHT(I)=0
      ELSE
      EWEIGHT(I)=(EWEIGHT(I)/WEIGHT(I))**2
      ENDIF
14201 CONTINUE
14202 CONTINUE
      IF (ISET(1).le.0 ) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Fit may not be TO'),4)
      RETURN
      ENDIF
      ISET(3)=ISET(1)
      IF (LTRAP) RETURN
      IF (FLAGS(23)) RETURN
      DO 14211 J=1,3
      IN(J)=0
14211 CONTINUE
14212 CONTINUE
      DO 14221 J=1,2
      I=ISET(J)
      IF (ISET(J).le.0) I=ISET(1)
      CALL T2GDSET(I,N1,N2,N3,N4,ISETC(1,J),TLIM,'*')
      ISETC(NSETD+1,J)=MESH3
      ISETC(NSETD+2,J)=MESH2
      IF (MESH3 .ne. 3) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Mesh Z must be dependent v
     *ariable',4)
      RETURN
      ENDIF
      IF (ISETC(NBTYPE,J).eq.1) THEN
      ISETC(NINDAT+2,J)=ISETC(NINDAT,J)
      ELSE
      ISETC(NINDAT+1,J)=ISETC(NINDAT+1,j)*ISETC(NINDAT,J)
      IF (ISETC(NSETD+2,J).eq.1) THEN
      I=ISETC(NINDAT,J)
      ISETC(NINDAT,J)=ISETC(NINDAT+1,J)
      ISETC(NINDAT+1,J)=I
      I=ISETC(NXDATA,J)
      ISETC(NXDATA,J)=ISETC(NYDATA,J)
      ISETC(NYDATA,J)=I
      I=ISETC(NDXDATA,J)
      ISETC(NDXDATA,J)=ISETC(NDYDATA,J)
      ISETC(NDYDATA,J)=I
      I=ISETC(NNDXDATA,J)
      ISETC(NNDXDATA,J)=ISETC(NNDYDATA,J)
      ISETC(NNDYDATA,J)=I
      I=ISETC(NPDATA,J)
      ISETC(NPDATA,J)=ISETC(NLDATA,J)
      ISETC(NLDATA,J)=I
      ENDIF
      ENDIF
      IF (LVECT .and. IOP .eq. 1) THEN
      DO 14231 I=NDXDATA,NDXDATA+3*NCSIZE-1,NCSIZE
      IF (ISETC(I,J) .eq. 1) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR Data must have DX,DY,DZ for Ve
     *ctor Multiply',4)
      RETURN
      ENDIF
14231 CONTINUE
14232 CONTINUE
      ENDIF
14221 CONTINUE
14222 CONTINUE
      DO 14241 I=NSETD+1,NSETD+2
      ISETC(I,3)=ISETC(I,1)
14241 CONTINUE
14242 CONTINUE
      IF (FLAGS(23)) RETURN
      IN(2)=IN(1)
      IN(3)=IN(1)
      IF (ISETC(NBTYPE,1) .lt. ISETC(NBTYPE,2).or. ISETC(NSETD+1,1).ne.3
     * .or. (ISETC(NBTYPE,2) .eq. 2 .and. LVECT)) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Data mismatch (Mesh/Regula
     *r)',4)
      RETURN
      ENDIF
      IF (ISET(2).gt.0.and.LCHECK) THEN
      DO 14251 I=0,ISETC(NBTYPE,2)-1
      IF (ISETC(NPDATA+I,1).gt.ISETC(NPDATA+I,2)) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Output set bigger than inp
     *ut',4)
      RETURN
      ENDIF
14251 CONTINUE
14252 CONTINUE
      N=2
      IXYZMAX=2
      IF (ISETC(NBTYPE,2) .eq. 2) THEN
      N=1
      ELSEIF ( ISETC(NZDATA,2).gt.1 ) THEN
      IXYZMAX=3
      ENDIF
      IF (LVECT)N=1
      DO 14261 IXYZ=1,IXYZMAX,N
      J=NCSIZE*(IXYZ-1)+NXDATA
      DX1=0
      DX2=0
      NXYZ=1
      IF (LVECT .or. ISETC(J+1,1) .eq. 1 .or. ISETC(J+1,2) .eq. 1 ) THEN
     *
      NXYZ=0
      ENDIF
      IF (ISETC(NBTYPE,2) .eq. 1) THEN
      IMAX=ISETC(NPDATA,1)
      ELSE
      IMAX=ISETC(NPDATA+IXYZ-1,1)
      ENDIF
      DO 14271 I=1,IMAX
      IF (LTRAP) RETURN
      T1=DATBUF(ISETC(J,1))
      T2=DATBUF(ISETC(J,2))
      IF (NXYZ .ne. 0) THEN
      DX1=DATBUF(ISETC(J+1,1))
      DX2=DATBUF(ISETC(J+1,2))
      ENDIF
      T=0.01*MIN(ABS(DX1),ABS(DX2))
      IF (T.eq.0.0) T=0.0000002*ABS((T1+T2)/2)
      T=MAX(T,1.0E-35)
      IF (ABS(T1-T2).gt.T.or. ABS(DX1-DX2).gt.T) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** '//C_XYZ(IXYZ)// '/D'//C_X
     *YZ(IXYZ)//' values do not match',4)
      RETURN
      ENDIF
      DO 14281 L=1,2
      DO 14291 K=J,J+NXYZ
      ISETC(K,L)=ISETC(K,L)+ISETC(IXYZ+NINDAT-1,L)
14291 CONTINUE
14292 CONTINUE
14281 CONTINUE
14282 CONTINUE
14271 CONTINUE
14272 CONTINUE
14261 CONTINUE
14262 CONTINUE
      ENDIF
      NP=MIN(ISETC(NPDATA,1),ISETC(NPDATA,2))
      NL=ISETC(NLDATA,1)
      IF (ISETC(NBTYPE,2).eq.2) NL=MIN(NL,ISETC(NLDATA,2))
      IF (LAPPEN) THEN
      IF (ISETC(NBTYPE,1).eq.2) THEN
      CALL T2GDSET(ISET(1),N1,N2,N3,N4,ISETC(1,1),TLIM,'*')
      CALL T2NEWM(ISETC(NINDAT,1),ISETC(NINDAT+1,1),ISETC(NINDAT+2,1)  ,
     *C_NAME(:N_NAME))
      CALL T2GDSET(NDSETS,N1,N2,N3,N4,ISETC(1,1),TLIM,'*')
      ELSE
      CALL T2NEWS(ISETC(NPDATA,1),C_NAME(:N_NAME))
      ENDIF
      IF (FLAGS(23)) RETURN
      ISET(3)=NDSETS
      ENDIF
      DO 14301 I=1,3
      D_XYZVAL(I)=0
14301 CONTINUE
14302 CONTINUE
      DO 14311 J=3,1,-1
      IF (ISET(J).gt.0) THEN
      CALL T2GDSET(ISET(J),N1,N2,N3,N4,ISETC(1,J),TLIM,'*')
      IF (ISETC(NBTYPE,J).eq.2) THEN
      ISETC(NSDATA,j)=ISETC(NMDATA,J)
      ISETC(NINDAT+1,J)=ISETC(NINDAT+1,j)*ISETC(NINDAT,J)
      IF (ISETC(NSETD+2,J).eq.1) THEN
      I=ISETC(NINDAT,J)
      ISETC(NINDAT,J)=ISETC(NINDAT+1,J)
      ISETC(NINDAT+1,J)=I
      I=ISETC(NXDATA,J)
      ISETC(NXDATA,J)=ISETC(NYDATA,J)
      ISETC(NYDATA,J)=I
      I=ISETC(NDXDATA,J)
      ISETC(NDXDATA,J)=ISETC(NDYDATA,J)
      ISETC(NDYDATA,J)=I
      I=ISETC(NNDXDATA,J)
      ISETC(NNDXDATA,J)=ISETC(NNDYDATA,J)
      ISETC(NNDYDATA,J)=I
      I=ISETC(NPDATA,J)
      ISETC(NPDATA,J)=ISETC(NLDATA,J)
      ISETC(NLDATA,J)=I
      ENDIF
      ISETC(NINDAT+2,J)=ISETC(NINDAT+1,J)-NP*ISETC(NINDAT,J)
      ELSE
      ISETC(NINDAT+2,J)=-NP*ISETC(NINDAT,J)
      ENDIF
      IF (IDEP .eq. 3 .or. ISETC(NBTYPE,J) .eq. 2) THEN
      DO 14321 K=0,1
      I=ISETC(K+NYDATA,j)
      ISETC(K+NYDATA,j)=ISETC(K+NZDATA,j)
      ISETC(K+NZDATA,J)=I
14321 CONTINUE
14322 CONTINUE
      IF (ISETC(NYDATA,j) .le. 1) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing Z coordinate',4)
      RETURN
      ENDIF
      ENDIF
      ENDIF
14311 CONTINUE
14312 CONTINUE
      IF (LAPPEN) THEN
      DO 14331 J=IS1,ISETC(NBGDAT+1,1)
      DATBUF(IS3)=DATBUF(J)
      IS3=IS3+1
14331 CONTINUE
14332 CONTINUE
      ENDIF
      FLAGS(28)=.false.
      IF (LVECT .or. DATBUF(IDY1).eq.HNONE.or.DATBUF(IDY2).eq.HNONE) THE
     *N
      LERR=.false.
      ENDIF
      IZERO=0
      IF (LBINOM) THEN
      FAC1=0.5
      FAC2=0.5
      ELSE
      FAC1=1.0
      FAC2=1.0
      ENDIF
      TS=1
      IF (IOP.eq.4) TS=-1
      DY2=0
      DY1=0
      NXYZ=0
      DO 14341 K=1,3
      DO 14351 J=1,19
      XYZ(J,K)=0
14351 CONTINUE
14352 CONTINUE
14341 CONTINUE
14342 CONTINUE
      IF (LVECT) THEN
      DO 14361 K=1,3
      DO 14371 J=NDXDATA,NDZDATA,NCSIZE
      IF (ISETC(J,K) .ne. 1) NXYZ=J
14371 CONTINUE
14372 CONTINUE
14361 CONTINUE
14362 CONTINUE
      DO 14381 I=1,NP
      IF (LTRAP) GOTO 14390
      DO 14401 K=1,2
      DO 14411 J=1,3
      IF (ISETC(NCSIZE*(J-1)+NDXDATA,K) .gt. 1) THEN
      XYZ(J,K)=DATBUF(ISETC(NCSIZE*(J-1)+NDXDATA,K))
      ENDIF
14411 CONTINUE
14412 CONTINUE
14401 CONTINUE
14402 CONTINUE
      IF (FLAGS(27)) THEN
      IF (FLAGS(91)) THEN
      CALL T2SPHCV(XYZ(1,1),XYZ(2,1),XYZ(3,1), XYZ(1,1),XYZ(2,1),XYZ(3,1
     *),-2,19,.false.,RADANG)
      ELSE
      CALL T2POLCV(XYZ(1,1),XYZ(2,1), XYZ(1,1),XYZ(2,1),-2,19,.false.,RA
     *DANG)
      ENDIF
      ENDIF
14420 GOTO (14430,14440,14450,14460),IOP
14440 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,' Undefined operation',4)
      RETURN
14430 CONTINUE
      CALL T2_CROSS(XYZ(1,1),XYZ(1,2),XYZ(1,3))
      GOTO 14422
14450 CONTINUE
      DO 14471 J=1,3
      XYZ(J,3)=XYZ(J,1)+XYZ(J,2)
14471 CONTINUE
14472 CONTINUE
      GOTO 14422
14460 CONTINUE
      DO 14481 J=1,3
      XYZ(J,3)=XYZ(J,1)-XYZ(J,2)
14481 CONTINUE
14482 CONTINUE
      GOTO 14422
14422 CONTINUE
      IF (FLAGS(27)) THEN
      IF (FLAGS(91)) THEN
      CALL T2SPHCV(XYZ(1,3),XYZ(2,3),XYZ(3,3), XYZ(1,3),XYZ(2,3),XYZ(3,3
     *),1,19,.false.,RADANG)
      ELSE
      CALL T2POLCV(XYZ(1,3),XYZ(2,3), XYZ(1,3),XYZ(2,3),1,19,.false.,RAD
     *ANG)
      ENDIF
      ENDIF
      DO 14491 J=1,3
      IF (ISETC(NCSIZE*(J-1)+NDXDATA,3) .gt. 1) THEN
      DATBUF(ISETC(NCSIZE*(J-1)+NDXDATA,3))=XYZ(J,3)
      ENDIF
14491 CONTINUE
14492 CONTINUE
      DO 14501 K=1,3
      DO 14511 J=NDXDATA,NXYZ,NCSIZE
      IF (ISETC(J,K) .gt. 1) ISETC(J,K)=ISETC(J,K)+ISETC(NINDAT,K)
14511 CONTINUE
14512 CONTINUE
14501 CONTINUE
14502 CONTINUE
14381 CONTINUE
14382 CONTINUE
      ELSE
      LNERR=LERR .and. DATBUF(INDY3) .ne. HNONE
      DO 14521 II=1,NL
      DO 14531 I=1,NP
      IF (LTRAP) GOTO 14390
      ICPOIN(1)=IY1
      ICPOIN(2)=IY2
      Y1=DATBUF(IY1)*WEIGHT(1)
      IF (ISET(2).gt.0) THEN
      Y2=DATBUF(IY2)*WEIGHT(2)
      ELSE
      X2=DATBUF(IX1)-XOFF
      IF (LXLOG) X2=LOG(X2)
      D_XV=X2
      CALL T2FUNC(XF,NTERMS,D_XV,IFIT,LCOF1,LCOF1,ACOEF,D_YV,SEXPR,NEXPR
     *)
      Y2=D_YV
      IF (LYLOG) Y2=EXP(Y2)
      IF (LERR) THEN
      DY2=0
      DO 14541 J=1,NCOFF
      DO 14551 K=1,NCOFF
      DY2=DY2+EMATRX(K,J)*XF(K)*XF(J)
14551 CONTINUE
14552 CONTINUE
14541 CONTINUE
14542 CONTINUE
      DY2=SQRT(ABS(DY2))
      IF (LYLOG) DY2=DY2*Y2
      ENDIF
      ENDIF
      IF (IOP.eq.1) THEN
      T=Y2
      ELSEIF (IOP.eq.2) THEN
      IF (Y2.ne.0) THEN
      T=1./Y2
      ELSE
      T=0
      IF (Y1.ne.0) IZERO=IZERO+1
      ENDIF
      ENDIF
      IF (LERR) THEN
      DY1=DATBUF(IDY1)*WEIGHT(1)
      IF (ISET(2).gt.0) then
      DY2=DATBUF(IDY2)
      ENDIF
      DY2=DY2*WEIGHT(2)
      IF ( EWEIGHT(1) .ne. 0 .and. Y1 .ne. 0) THEN
      DY1=SQRT((DY1/Y1)**2+EWEIGHT(1))
      DY1=DY1*Y1
      ENDIF
      IF ( EWEIGHT(2) .ne. 0 .and. Y2 .ne. 0) THEN
      DY2=SQRT((DY2/Y2)**2+EWEIGHT(2))
      DY2=DY2*Y2
      ENDIF
      DY1=ABS(DY1)
      DY2=ABS(DY2)
      ENDIF
      IF (IOP.eq.3.or.IOP.eq.4) THEN
      IF (LERR) THEN
      DY1=DY1**2
      DY2=DY2**2
      IF (LBINOM) THEN
      IF (DY1.eq.0.and.Y1.ne.0) DY1=1
      IF (DY2.eq.0.and.Y2.ne.0) DY2=1
      T=DY1+DY2
      IF (T.gt.0) THEN
      IF (DY1 .eq. 0) THEN
      DATBUF(IDY3)=SQRT(DY2)
      FAC2=1
      ELSEIF (DY2 .eq. 0) THEN
      DATBUF(IDY3)=SQRT(DY1)
      FAC1=1
      ELSE
      DATBUF(IDY3)=SQRT(1/(1/DY1+1/DY2))
      FAC1=DY2/T
      FAC2=DY1/T
      ENDIF
      ENDIF
      ELSE
      DT=FAC1*DY1+FAC2*DY2
      DATBUF(IDY3)=SQRT(DT)
      ENDIF
      ENDIF
      DATBUF(IY3)=FAC1*Y1+TS*FAC2*Y2
      ELSE
      DATBUF(IY3)=Y1*T
      IF (LERR) THEN
      IF (LBINOM) THEN
      DATBUF(IDY3)=SQRT( MAX(ONE,Y1)*MAX(ONE,Y2-Y1)*T)*T
      ELSE
      IF (Y1.eq.0.or.Y2.eq.0) THEN
      DATBUF(IDY3)=DY1*T
      ELSE
      DATBUF(IDY3)=DATBUF(IY1)*  SQRT((DY1/Y1)**2+  (DY2/Y2)**2)
      ENDIF
      ENDIF
      ENDIF
      ENDIF
      IF (LNERR) DATBUF(INDY3)=DATBUF(IDY3)
      DO 14561 K=1,3
      DO 14571 J=NXDATA,NNDYDATA
      ISETC(J,K)=ISETC(J,K)+ISETC(NINDAT,K)
14571 CONTINUE
14572 CONTINUE
14561 CONTINUE
14562 CONTINUE
14531 CONTINUE
14532 CONTINUE
      IX1=IX1-ISETC(NINDAT,1)*NP
      DO 14581 K=1,3
      DO 14591 J=NYDATA,NNDYDATA
      ISETC(J,K)=ISETC(J,K)+ISETC(NINDAT+2,K)
14591 CONTINUE
14592 CONTINUE
14581 CONTINUE
14582 CONTINUE
14521 CONTINUE
14522 CONTINUE
      ENDIF
14390 CONTINUE
      LLOG=LLOG .or. LTRAP
      IF (IZERO.gt.0) THEN
      WRITE(OUTSTR,*)'*** WARNING *** ',IZERO,' attempts to divide by 0.
     *0'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ENDIF
      IF (NP*NL .ne. 0) DATDAT(1,1)=HNONE
      IF (LLOG) THEN
      I=ISET(1)
      IF (LAPPEN)I=NDSETS
      IF (ISET(2).gt.0) THEN
      WRITE(OUTSTR,*)'  Data set( ',I,' ) ( '  ,NP*NL,' points) =set( ',
     *ISET(1),' ) '  ,'*',WEIGHT(1),' +-',EWEIGHT(1),' '  ,COPER(IOP),' 
     *set(',ISET(2),' )'  ,'*',WEIGHT(2),' +-',EWEIGHT(2)
      ELSE
      WRITE(OUTSTR,*)'  Data set( ',I,' ) ( '  ,NP*NL,' points) =set( ',
     *ISET(1),' ) '  ,'*',WEIGHT(1),' +-',EWEIGHT(1),' '  ,COPER(IOP),' 
     *FIT'  ,'*',WEIGHT(2),' +-',EWEIGHT(2)
      ENDIF
      IF (LVECT) OUTSTR(:T2BTRIM(OUTSTR)+1)='Vector'
      IF (LBINOM)OUTSTR(:T2BTRIM(OUTSTR)+1)='Binomial'
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
      END
      SUBROUTINE T2VFTB(INFOIN,CARDIN,VALUE,ISTAT,LGET)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER *(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER ISTAT,ICOUNT,LGET,NCOUNT
      REAL PARM(4),VALUE
      SAVE ICOUNT,NCOUNT,PARM
      IF (ISTAT .eq. 0) THEN
      NCOUNT=0
      ICOUNT=0
      ELSEIF (NCOUNT.gt.0) THEN
      NCOUNT=NCOUNT-1
      ICOUNT=ICOUNT+1
      VALUE=PARM(1)+ICOUNT*PARM(3)
      ISTAT=ISTAT+1
      RETURN
      ENDIF
      GOTO 14601
14630 CONTINUE
      INFOIN(9)=-1
      CALL T2FTBY(INFOIN,CARDIN,PARM,0)
      IF (FLAGS(23)) THEN
      ISTAT=-1
      RETURN
      ENDIF
      NCOUNT=NINT(PARM(4))-1
      ICOUNT=0
      VALUE=PARM(1)
      ISTAT=ISTAT+1
      GOTO 14602
14610 GOTO ( 14630,14630,14630,14630,14630,14630,14630,14605),KEYORD
14640 CONTINUE
      VALUE=FLOTNG
      ISTAT=ISTAT+1
      GOTO 14602
14605 CONTINUE
      INFOIN(9)=-1
      ISTAT=-1
      GOTO 14602
14601 CALL TOKEN(INFOIN,CARDIN,'FROM,TO,BY,WIDTH,STEP,N,NUMBER,;')
      GOTO (14605,14610,14640,14640,14605,14605,14605,14610,14605),INTER
     *P
14602 CONTINUE
      END
      SUBROUTINE T2FTBY(INFOIN,CARDIN,PARM,LGET)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER *(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      REAL PARM(4)
      INTEGER I,ITSAVE,IVALS,J,LGET,NBINS
      INTEGER T2BTRIM
      LOGICAL LSET(5)
      INTEGER IAND
      DATA HNONE /-666.666/
      J=1
      DO 14651 I=1,4
      LSET(I)=.false.
      IF (IAND(J,LGET).eq.0) PARM(I)=0
      J=J*2
14651 CONTINUE
14652 CONTINUE
      IVALS=0
      ITSAVE=0
      GOTO 14661
14690 CONTINUE
      IF (ITSAVE.eq.0) ITSAVE=INFOIN(5)
      I=INTEG
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
14710 CONTINUE
      IF (LSET(I)) THEN
14720 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Redundant value'),4)
      ELSEIF (I.le.2 .or. (FLOTNG.ge.1) .or. (I.eq.3.and.FLOTNG.ne.0)) T
     *HEN
      PARM(I)=FLOTNG
      LSET(I)=.true.
      IVALS=IVALS+1
      IF (IVALS.ge.3) GOTO 14730
      ELSE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Value too small'),4)
      ENDIF
      ENDIF
      GOTO 14661
14670 GOTO ( 14690,14690,14690,14690,14690,14690,14690,14665),KEYORD
14740 CONTINUE
      IF (ITSAVE.eq.0) ITSAVE=INFOIN(5)
      I=1
      IF (LSET(1)) I=2
      IF (.not. LSET(2)) PARM(2)=FLOTNG
      GOTO 14710
14665 CONTINUE
      INFOIN(9)=-1
      GOTO 14662
14661 CALL TOKEN(INFOIN,CARDIN,'FROM:1,TO:2,BY:3,STEP:3,WIDTH:3,N:4,NUMB
     *ER:4,;')
      GOTO (14662,14670,14740,14740,14665,14665,14665,14670,14665),INTER
     *P
14662 CONTINUE
14730 CONTINUE
      IF (FLAGS(23)) RETURN
      IF (IVALS.lt.3 .and. IAND(15,LGET).ne.0) THEN
      J=1
      DO 14751 I=1,4
      IF (.not. LSET(I) .and. IAND(J,LGET).ne.0) THEN
      LSET(I)=.TRUE.
      IVALS=IVALS+1
      IF(IVALS .ge. 3)GOTO 14752
      ENDIF
      J=J*2
14751 CONTINUE
14752 CONTINUE
      ENDIF
      IF (IVALS.lt.3) THEN
      IF (ITSAVE.ne.0) INFOIN(5)=ITSAVE
      ENDIF
      CALL T2FPAR1(INFOIN,CARDIN,PARM,LSET,(IAND(16,LGET).NE.0))
      END
      SUBROUTINE T2FPAR1(INFOIN,CARDIN,PARM,LSET,LBINS)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      CHARACTER*6 CFRTO(4)
      LOGICAL LSET(4),LBINS
      INTEGER NBINS,I,IVALS
      INTEGER T2BTRIM
      REAL PARM(4),T
      DATA CFRTO/'FROM,','TO,','BY,','N,'/
      IVALS=0
      DO 14761 I=1,4
      IF (LSET(I)) IVALS=IVALS+1
14761 CONTINUE
14762 CONTINUE
      IF (IVALS.lt.3) THEN
      OUTSTR=' '
      DO 14771 I=1,4
      IF (.not. LSET(I)) THEN
      OUTSTR(T2BTRIM(OUTSTR)+1:)=CFRTO(I)
      ENDIF
14771 CONTINUE
14772 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing either'//OUTSTR(:T
     *2BTRIM(OUTSTR)-1),4)
      RETURN
      ENDIF
      NBINS=0
      IF (LSET(4)) THEN
      NBINS = NINT(PARM(4))-1
      IF (LBINS) NBINS=NBINS+1
      PARM(4)=NBINS+1
      ENDIF
      IF (.not.LSET(1))THEN
      PARM(1)=PARM(2)-PARM(3)*NBINS
      ELSEIF (.not.LSET(2)) THEN
      PARM(2)=PARM(1)+PARM(3)*NBINS
      ELSEIF (.not.LSET(3)) THEN
      PARM(3)=(PARM(2)-PARM(1))/MAX(1,NBINS)
      ELSEIF (.not.LSET(4)) THEN
      T=PARM(3)
      IF (T .eq. 0) THEN
      IF (PARM(2) .ne. PARM(1)) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** TO = 0.0',4)
      ENDIF
      PARM(4)=0
      ELSE
      PARM(4)=(PARM(2)-PARM(1))/T
      ENDIF
      IF (PARM(4).lt.0) THEN
      PARM(3)=-PARM(3)
      PARM(4)=-PARM(4)
      ENDIF
      IF (LBINS) THEN
      NBINS=PARM(4)+1.0-.0001
      ELSE
      NBINS=PARM(4)+.0001
      PARM(2)=PARM(1)+PARM(3)*NBINS
      ENDIF
      ENDIF
      IF (LBINS) THEN
      PARM(4)=NBINS
      ELSE
      PARM(4)=NBINS+1
      ENDIF
      END
      SUBROUTINE T2_SYMBOL(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER I,J,K,ISET,MAXD,NSYM,JLIM,KLIM
      REAL T,TSYM,TXSYM
      CHARACTER*6 SYM
      DATA HNONE /-666.666/
      NSYM=0
      JLIM=0
      GOTO 14781
14810 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,JLIM)
      GOTO 14781
14820 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 14781
14830 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 14781
14840 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 14781
14790 GOTO ( 14810,14820,14830,14840,14785),KEYORD
14785 CONTINUE
      IF (NSTRNG.gt.0) SYM=STRNG(1:NSTRNG)
      NSYM=NSTRNG
      GOTO 14781
14781 CALL TOKEN(INFOIN,CARDIN,'LIMITED,POINTS,SETS,SELECT:S,;')
      GOTO (14782,14790,14785,14785,14785,14785,14785,14790,14785),INTER
     *P
14782 CONTINUE
      IF (FLAGS(23).and.FLAGS(92)) RETURN
      IF (NSYM .eq. 0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Missing symbol'),4)
      ELSE
      TSYM=TXSYM(SYM(1:NSYM))
      FLAGS(28)=.FALSE.
      DO 14851 ISET=NS1,NS2
      CALL T2GDSET(NS1,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF(I7 .eq. 1)GOTO 14851
      KLIM=3
      IF (i3 .eq. 1) KLIM=2
      I7=I7-NINCR0
      DO 14861 I=N1,NP
      I7=I7+NINCR0
      IF (JLIM.gt.0) THEN
      DO 14871 J=1,JLIM,2
      DO 14881 K=1,KLIM
      T=DATBUF(ISETD(NCSIZE*(K-1)+NXDATA))
      IF(T .lt. TLIM(K,J) .or. T .gt. TLIM(K,J+1))GOTO 14881
14881 CONTINUE
14882 CONTINUE
      DO 14891 K=NXDATA,NXDATA+NCSIZE*(KLIM-1),NCSIZE
      ISETD(K)=ISETD(K)+NINCR0
14891 CONTINUE
14892 CONTINUE
      GOTO 14872
14871 CONTINUE
14872 CONTINUE
      IF(J .gt. JLIM)GOTO 14861
      ENDIF
      DATBUF(I7)=TSYM
14861 CONTINUE
14862 CONTINUE
14851 CONTINUE
14852 CONTINUE
      ENDIF
      END
      SUBROUTINE T2_SWAP(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL LERR,LDEFERR,LEXIST1,LEXIST2
      CHARACTER*7 CORD1,CORD2
      INTEGER IXYZ1,IXYZ2, IXYZ(2),I,J,K,IMAX
      INTEGER IPOINT,JSET,ISET
      REAL TEMP
      REAL HNONE
      DATA HNONE /-666.666/
      IXYZ(1)=0
      IXYZ(2)=0
      IF (NPOINT+NMESH1.le.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** Warning *** No data available'),4)
      RETURN
      ENDIF
      J=0
      LERR=REVLEV .ge. 5.0
      LDEFERR=.true.
      GOTO 14901
14930 CONTINUE
      LERR=LTOKEN
      LDEFERR=.false.
      GOTO 14901
14940 CONTINUE
      LLOG=LTOKEN
      GOTO 14901
14950 CONTINUE
      J=J+1
      IF (J.le.2) THEN
      IXYZ(J)=I_VORDER(INTEG,1)
      IF (MOD(IXYZ(J)-N_XDATA,NCSIZE) .ne. 0 .and. LDEFERR) LERR=.false.
     *
      ELSE
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Too many coordinates',4)
      ENDIF
      GOTO 14901
14960 CONTINUE
      CONTINUE
      GOTO 14901
14970 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 14901
14980 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 14901
14990 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 14901
14901 CALL TOKEN(INFOIN,CARDIN,'ERROR:Y,LOG:Y,X:2,DX:3,Y:4,DY:5,Z:6,DZ:7
     *,NDX:8,NDY:9,NDZ:10,U:11,DU:12,NDU:13,V:14,DV:15,NDV:16,W:17,DW:18
     *,NDW:19,THETA:2,DTHETA:3,RADIUS:4,DRADIUS:5,PHI:6,DPHI:7,NDTHETA:8
     *,NDRADIUS:9,NDPHI:10,WITH,POINTS,SETS,SELECT:S,;')
      GOTO (14902,14907,14905,14905,14905,14905,14901,14907, 14905),INTE
     *RP
14905 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 14901
14907 GOTO ( 14930,14940,14950,14950,14950,14950,14950,14950,14950,14950
     *,14950,14950,14950,14950,14950,14950,14950,14950,14950,14950,14950
     *,14950,14950,14950,14950,14950,14950,14950,14950,14960,14970,14980
     *,14990,14905),KEYORD
14902 CONTINUE
      IF (FLAGS(23)) RETURN
      IF (J.lt.2) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Missing option(s)'),4)
      RETURN
      ENDIF
      IF (LERR .and. MOD(IXYZ(1)-N_XDATA,NCSIZE)+MOD(IXYZ(2)-N_XDATA,NCS
     *IZE) .gt. 0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** ERROR=ON illegal with DX,D
     *Y,...',4)
      RETURN
      ENDIF
      IPOINT=0
      JSET=0
      DO 15001 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,HNONE,C_SELECT(:N_SELECT))
      IF (FLAGS(23)) RETURN
      IF(NP .LT. N1)GOTO 15001
      DO 15011 J=1,2
      IF (IBTYPE.eq.2) THEN
      I=(IXYZ(J)-N_XDATA)/NCSIZE+1
      IF (I.eq.MESH3 .or. MOD(IXYZ(J)-N_XDATA,NCSIZE) .ne.0) THEN
      CALL T2GVNM(IXYZ(J),CORD1)
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Illegal mesh coordinate:'/
     */CORD1,4)
      RETURN
      ENDIF
      ENDIF
      I=ISETD(IXYZ(J)+NXDATA-N_XDATA)
      IF (DATBUF(I).eq.HNONE) THEN
      CALL T2GVNM(IXYZ(J),CORD1)
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Data type not in storage:'
     *//CORD1,4)
      RETURN
      ENDIF
15011 CONTINUE
15012 CONTINUE
15001 CONTINUE
15002 CONTINUE
      DO 15021 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,HNONE,C_SELECT(:N_SELECT))
      IF(NP .lt. N1 .or. NL .lt. N3)GOTO 15021
      JSET=JSET+1
      IF (IBTYPE.eq.2) THEN
      IPOINT=IPOINT+(NINCR1-1)*(NINCR2-2)
      IXYZ1=(IXYZ(1)-N_XDATA)/NCSIZE+1
      IXYZ2=(IXYZ(2)-N_XDATA)/NCSIZE+1
      I=MESHN(IXYZ1)
      MESHN(IXYZ1)=MESHN(IXYZ2)
      MESHN(IXYZ2)=I
      DATBUF(IVRPTR(8))=MESH1+MESH2*4
      ELSE
      IMAX=0
      IF (LERR) THEN
      DO 15031 J=0,NCSIZE-1
      LEXIST2=ISETD(NXDATA-N_XDATA+IXYZ(2)+J).ne.1
      LEXIST1=ISETD(NXDATA-N_XDATA+IXYZ(1)+J).ne.1
C     IF( LEXIST1 .XOR. LEXIST2) THEN
      IF( .NOT. ( LEXIST1 .AND. LEXIST2 )
     &    .AND. ( LEXIST1 .OR.  LEXIST2 ) ) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR Missing error coordinates',4)
      RETURN
      ELSEIF (LEXIST1) THEN
      IMAX=J
      ELSE
      GOTO 15032
      ENDIF
15031 CONTINUE
15032 CONTINUE
      ENDIF
      IXYZ1=ISETD(NXDATA-N_XDATA+IXYZ(1))
      IXYZ2=ISETD(NXDATA-N_XDATA+IXYZ(2))
      IF (DATBUF(IXYZ1).ne.HNONE .and. DATBUF(IXYZ2).ne.HNONE) THEN
      DO 15041 I=N1,NP
      IPOINT=IPOINT+1
      DO 15051 J=0,IMAX
      TEMP=DATBUF(J+IXYZ1)
      DATBUF(J+IXYZ1)=DATBUF(J+IXYZ2)
      DATBUF(J+IXYZ2)=TEMP
15051 CONTINUE
15052 CONTINUE
      IXYZ1=IXYZ1+NINCR0
      IXYZ2=IXYZ2+NINCR0
      IM=IM+NINCR0
15041 CONTINUE
15042 CONTINUE
      ENDIF
      ENDIF
15021 CONTINUE
15022 CONTINUE
      IF (IPOINT .ne. 0) DATDAT(1,1)=HNONE
      IF (LLOG .or. IPOINT .le. 0) THEN
      CALL T2GVNM(IXYZ(1),CORD1)
      CALL T2GVNM(IXYZ(2),CORD2)
      WRITE(OUTSTR,*)'  Swapped ',IPOINT,' points ',CORD1,' with ',CORD2
     *, ' in ',JSET,' sets Error=',LERR
      CALL T2WRSQ(OUTSTR,.true.,6,3)
      ENDIF
      END
      SUBROUTINE T2DSUM(X,NORDER,Y,DY,XSUM,YSUM,Y2SUM)
C
C SUBROUTINE TO ACCUMULATE SUMS FOR A LEAST SQUARES FIT TO:
C
C Y= A(1)*X(1) + A(2)*X(2) . . . + A(NORDER)*X(NORDER)
C WHERE X,Y ARE GIVEN A'S ARE TO BE FOUND
C
C X IS THE ARRAY OF LINEAR FUNCIONS.  THE FIRST VALUE OF X MUST BE
C 1.0.  X(1)= 1.0
C
C Y IS THE ACTUAL Y VALUE CORRESPONDING TO THE X'S
C
C WEIGHTIS THE WEIGHTING FACTOR = 1./SIGY**2
C WHERE SIGY= THE Y STANDARD DEVIATION
C
C XSUM,YSUMARE ARRAYS ACCUMULATED FOR THE LATER FIT.
C XSUM IS A 2 DIM. ARRAY, AND YSUM 1 DIMENSION.
C
C THE FINAL ANSWER IS EVALUATED BY SUBROUTINE T2DVAL
C
      IMPLICIT   REAL*8(A-H,O-Z)
      INTEGER    I,J,K
      REAL*8     X(NORDER),YSUM(NORDER),XSUM(NORDER,NORDER),XA,WEIGHT
      REAL*8     DY
      IF (DY .eq. 0) RETURN
      WEIGHT= 1/DY**2
      Y2SUM= Y2SUM + Y*Y*WEIGHT
      DO 100 I= 1,NORDER
        XA= WEIGHT*X(I)
        YSUM(I)= YSUM(I)  + Y*XA
        DO 100 J= 1,I
          XSUM(I,J)= XSUM(I,J) + XA*X(J)
 100  CONTINUE
      END
      SUBROUTINE   T2DVAL(NORDER,NPTS,XSUM,YSUM,Y2SUM,
     1                    A,DA,CHISQR,FTEST,RMUL,B,EMATRX)
C
C THIS SUBROUTINE TAKES THE ARRAYS XSUM,YSUM GENERATED BY REGSUM
C AND THE NUMBER OF DATA POINTS (NPTS) AND FINISHES THE LEAST
C SQUARE FIT TO A LINEAR COMBINATION OF FUNCTIONS. IT CALCULATES THE
C COEFFICIENTS (ARRAY A(NORDER) ), THE ERRORS
C ON THESE COEFFICIENTS(DA), THE REDUCED CHI SQUARED/DEGREE-OF-FREEDOM
C AND FTEST (SEE BEVINGTON pp 164-177).
C THE SCRATCH 2 DIMENSIONAL ARRAY B IS USED BY THIS PROGRAM.
C
      IMPLICIT   REAL*8(A-H,O-Z)
      INTEGER    I,J,K,NORDER,NPTS
      LOGICALL   TEST
      REAL*8     ZERO
      PARAMETER (ZERO=0.0D0)
      REAL*8     XSUM(NORDER,NORDER),YSUM(NORDER),B(NORDER,NORDER)
      REAL*8     A(NORDER),DA(NORDER),Y2SUM,CHISQR,FTEST,RMUL
      REAL*8     SUM,FREEN,EMATRX(NORDER,NORDER)
C
C SYMMETRIZE THE ARRAY A
C
      CHISQR=-1.
      IF (NORDER .LT. 1) RETURN
      FTEST= 0.
      RMUL= 0.
      DO 5 I= 1,NORDER
        A(I)= 0
 5      DA(I)= 0
C     Now fill in missing rows and columns
      DO 10 I= 1,NORDER-1
        DO 10 J= I+1,NORDER
 10   XSUM(I,J)= XSUM(J,I)
      DO 12 J= 1,NORDER
        DO 12 I= 1,NORDER
 12       B(I,J)= XSUM(I,J)
      CALL DMATNV(B,NORDER,LTEST)
      IF (.not.LTEST) RETURN ! Bad matrix inversion
      CALL DMATML(NORDER,B,NORDER,YSUM,1,A)! The result
C
C CALCULATE THE REDUCED CHI SQUARED/POINT AND THE ERROR
C
      FREEN= NPTS - NORDER ! Freedom
      SUM= Y2SUM
      RSUM= SUM
      CHISQR= -1
      IF (FREEN .LT. .5) RETURN ! Too few points
      DO 30 I= 1,NORDER
        SUM= SUM - 2.*A(I)*YSUM(I)
        IF (I.eq.1) RSUM=RSUM-2.*A(I)*YSUM(I)
        DO 30 J= 1,NORDER
          SUM= SUM + A(I)*A(J)*XSUM(J,I)
          IF (I.eq.1.and.J.eq.1) RSUM=RSUM+A(I)*A(J)*XSUM(J,I)
 30   CONTINUE
      IF (SUM.eq.0) RETURN
      CHISQR= MAX(ZERO,SUM/FREEN)
      DO 36 I= 1,NORDER
        DO 35 J= 1,NORDER
          DO 35 K= 1,NORDER
 35         DA(I)= DA(I) + B(J,I)*B(K,I)*XSUM(K,J)
        DA(I)= SQRT(ABS(DA(I)))! The error
 36   CONTINUE
      RSUM=RSUM/SUM
      DO 42 I= 1,NORDER
        DO 42 J= 1,NORDER
          SUM=0
          DO 41 K= 1,NORDER
            DO 41 L= 1,NORDER
 41            SUM= SUM+B(K,I)*B(L,J)*XSUM(L,K)
          EMATRX(J,I)= SUM
 42   CONTINUE
      IF (1-RSUM .EQ. 0.) RETURN
      FTEST= (RSUM/NORDER)/((1.-RSUM)/FREEN)
      RMUL= SQRT(ABS(RSUM))
      END
      SUBROUTINE DMATML(IX,A,IY,B,IZ,C)
C
C THIS SUBROUTINE MULTIPLIES 2 MATRICES A,B TOGETHER TO FORM C
      IMPLICIT   REAL*8(A-H,O-Z)
      DIMENSION  A(IX,IY),B(IY,IZ),C(IX,IZ)
      DO 10 I= 1,IX
        DO 10 J= 1,IZ
          C(I,J)= 0.
          DO 10 K= 1,IY
 10         C(I,J)= C(I,J) + A(I,K)*B(K,J)
      END
      SUBROUTINE DMATNV(ARRAY,N,LTEST)
C
C MATRIX INVERSION ROUTINE--BEVINGTON,P.302 - Modified
C
C INPUT:
C     ARRAY is the square,symmetric matrix to be inverted
C     N is the order
C OUTPUT:
C     THE INVERTED MATRIX REPLACES THE ORIGINAL ONE
c     LTEST=.true. if the inversion was successful
C
C
c This routine has been optimized for virtual memory
c
      IMPLICIT   REAL*8 (A-H, O-Z)
      INTEGER    NMAX           ! Max terms
      PARAMETER (NMAX=50)       ! Max terms
      LOGICAL    LTEST
      REAL*8     ARRAY(N,N)
      INTEGER    IK(NMAX),JK(NMAX)
      LTEST =.false.
      IF (N .gt. NMAX) RETURN   ! N too large ??
      DO 1 I=1,NMAX
        IK(I)=0
 1      JK(I)=0
      DO 100 K= 1,N
C
C  FIND LARGEST ELEMENT,REORDER SO IT IS ON THE DIAGONAL
C  PARTIAL PIVOTING
C
        AMAX= 0.0
        DO 30 J= K,N
          DO 30 I= K,N
            IF (ABS(AMAX).le.ABS(ARRAY(I,J))) THEN
              AMAX= ARRAY(I,J)
              IK(K)= I
              JK(K)= J
            ENDIF
 30     CONTINUE
        IF (AMAX .eq. 0.) RETURN ! Matrix element too small ?
        I= IK(K)
        IF (I.ne.K) THEN        ! Not Current col ?
          DO 50 J= 1,N          ! Reorder columns
            SAVE= ARRAY(K,J)
            ARRAY(K,J)= ARRAY(I,J)
 50         ARRAY(I,J)= -SAVE
        ENDIF
        J= JK(K)
        IF (J.ne.K) THEN        ! Not Current row ?
          DO 60 I= 1,N          ! Reorder rows
            SAVE= ARRAY(I,K)
            ARRAY(I,K)= ARRAY(I,J)
 60         ARRAY(I,J)= -SAVE
        ENDIF
C
C  DIAGONALIZE MATRIX
C
        DO 80 J= 1,N
          IF (J .ne. K) THEN
            ARRAY(K,J)= -ARRAY(K,J)/AMAX
            SAVE= ARRAY(K,J)
            DO 70 I= 1,N
              IF (I.ne.K)ARRAY(I,J)= ARRAY(I,J)+SAVE*ARRAY(I,K)
 70         CONTINUE
          ENDIF
 80     CONTINUE
        ARRAY(K,K)= 1.
        DO 90 I= 1,N
          ARRAY(I,K)= ARRAY(I,K)/AMAX
 90     CONTINUE

 100  CONTINUE
C
C  RESTORE ORDERING OF MATRIX
C
      DO 130 L= 1,N
        K= N-L+1
        J= IK(K)
        IF (J.gt.K)THEN         ! reorder ?
          DO 110 I= 1,N
            SAVE= ARRAY(I,K)
            ARRAY(I,K)= -ARRAY(I,J)
            ARRAY(I,J)= SAVE
 110      CONTINUE
        ENDIF
        I= JK(K)
        IF (I.gt.K)THEN         ! reorder ?
          DO 120 J= 1,N
            SAVE= ARRAY(K,J)
            ARRAY(K,J)= -ARRAY(I,J)
            ARRAY(I,J)= SAVE
 120      CONTINUE
        ENDIF
 130  CONTINUE
      LTEST=.true.
      END
      integer function t2btrim (string)

c   Integer function to determine the length of a character string with
c   trailing blanks and tabs removed.
c   Routine written at CMU PSYA::

      implicit integer*4 (a-z)
      integer countr
      character*(*) string
      character*1 tab, NUL, space
c      data tab/'\t'/
      data space/' '/
      NUL = char(0)
      tab = char(9)
      
      do 10 countr = len (string), 1, -1
        if (string (countr:countr) .ne. NUL .and.
     *      string (countr:countr) .ne. space .and.
     *      string (countr:countr) .ne. tab) then
          t2btrim = countr
          return
        endif
 10   continue

c     t2btrim = 1
      t2btrim = 0
      end

      subroutine getxoff(myxoff)
      real myxoff

      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER tNTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 

      myxoff = xoff
      return
      end
