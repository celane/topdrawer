C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
      SUBROUTINE T2CNTR(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      LOGICAL LLAB,LDLAB,LEXPAN, LIN, LOUT, LPARAL, LPERP, LDOUBL
      LOGICAL LCYCLE, LFILL, LTITLE
      LOGICAL LSAVE, T2_VIRT
      INTEGER I,J,K,IMAX,IDUM, ISEGMN
      INTEGER ITXTUR,INTEN,NUM,IPRI,IFMT,ITXSAV,ISET,ICYCLE
      INTEGER NBUFSIZ,NCOL(2,2),N1MAX,N2MAX,ICOL
      REAL SIZE,TEMP,SSAV
      PARAMETER (NBUFSIZ=400/2)
      REAL FRTO(4)
      INTEGER EFLG,BDFG,NLIM, IBUFFER, NBUFFER, JINDEX, JDIM, M1, M2, M3
     *
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      LOGICAL T2CNT5,DMMY
      DATA HNONE /-666.666/
      ITXTUR=0
      INTEN=0
      ICOL=0
      NUM=0
      LLAB=.false.
      LDLAB=.true.
      IPRI=1
      IFMT=9
      LOUT=.true.
      LIN=.true.
      LPERP=.FALSE.
      LPARAL=.FALSE.
      LDOUBL=.FALSE.
      SIZE=0
      LSAVE=.false.
      LEXPAN=FLAGS(17)
      LCYCLE=.false.
      DO 10011 J=1,2
      DO 10021 I=1,2
      NCOL(I,J)=0
10021 CONTINUE
10022 CONTINUE
10011 CONTINUE
10012 CONTINUE
      C_NAME='Contour %%'
      N_NAME=9
      LTITLE=FLAGS(108)
      LFILL=.false.
      ISEGMN=1
      GOTO 10031
10060 CONTINUE
      LEXPAN=LTOKEN
      GOTO 10031
10070 CONTINUE
      LFILL=LTOKEN
      GOTO 10031
10080 CONTINUE
      INFOIN(9)=-1
      CALL T2FTBY(INFOIN,CARDIN,FRTO,0)
      IF (FLAGS(23)) RETURN
      IMAX=NINT(FRTO(4))
      DO 10091 I=1,IMAX
      NUM=NUM+1
      IF (NUM.gt.NBUFSIZ) GOTO 10100
      TEMP=FRTO(1)+(I-1)*FRTO(3)
      BUFFER(NUM)=TEMP
      IF (LLAB) THEN
      IBUFFR(NUM)=IFMT
      ELSE
      IBUFFR(NUM)=1
      ENDIF
      IBUFFR(NUM)=IPRI*ABS(IBUFFR(NUM))
10091 CONTINUE
10092 CONTINUE
      GOTO 10031
10110 CONTINUE
      ISEGMN=INTEG
      GOTO 10031
10120 CONTINUE
      CALL T2ROWS(INFOIN,CARDIN,N3,N4)
      GOTO 10031
10130 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10031
10140 CONTINUE
      LSAVE=LTOKEN
      GOTO 10031
10150 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10031
10160 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10031
10170 CONTINUE
      CALL T2GTEX(ITXTUR)
      GOTO 10031
10180 CONTINUE
      INTEN=INTEG
      GOTO 10031
10190 CONTINUE
      LCYCLE=LTOKEN
      GOTO 10031
10200 CONTINUE
      ICOL=INTEG
      GOTO 10031
10210 CONTINUE
      LLAB=LTOKEN
      LDLAB=LLAB
      GOTO 10031
10220 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 10031
10230 CONTINUE
      LIN=LTOKEN
      GOTO 10031
10240 CONTINUE
      C_NAME=STRNG
      N_NAME=MAX(1,NSTRNG)
      GOTO 10031
10250 CONTINUE
      LOUT=LTOKEN
      GOTO 10031
10260 CONTINUE
      LPARAL=LTOKEN
      GOTO 10031
10270 CONTINUE
      LPERP=LTOKEN
      GOTO 10031
10280 CONTINUE
      LDOUBL=LTOKEN
      GOTO 10031
10290 CONTINUE
      IPRI=INTEG-2
      GOTO 10031
10300 CONTINUE
      CALL TOKEN(INFOIN,CARDIN,';')
      IF(INTERP.NE.3.AND.INTERP.NE.4)THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      ELSE
      SIZE=FLOTNG
      ENDIF
      GOTO 10031
10320 CONTINUE
      LTITLE=LTOKEN
      GOTO 10031
10040 GOTO ( 10060,10070,10080,10080,10080,10080,10110,10120,10120,10130
     *,10130,10140,10150,10160,10170,10170,10170,10170,10170,10170,10170
     *,10170,10170,10170,10170,10170,10180,10180,10190,10200,10200,10200
     *,10200,10200,10200,10200,10210,10220,10230,10240,10250,10260,10270
     *,10280,10290,10290,10300,10320,10200,10035),KEYORD
10330 CONTINUE
      IF (NUM.lt.NBUFSIZ) THEN
      NUM=NUM+1
      BUFFER(NUM)=FLOTNG
      IF (LLAB) THEN
      IBUFFR(NUM)=IFMT
      ELSE
      IBUFFR(NUM)=1
      ENDIF
      IBUFFR(NUM)=IPRI*ABS(IBUFFR(NUM))
      ELSE
10100 CONTINUE
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** Too many contours'),4)
      RETURN
      ENDIF
      GOTO 10031
10031 CALL TOKEN(INFOIN,CARDIN,'EXPAND:Y,FILL:T,FROM,TO,BY,N,JOIN:1:20:5
     *,LINES,ROWS,POINTS,COLUMNS,SAVE:Y,SETS,SELECT:S,DO:1,DOT:1,DOTS:1,
     *DOTTED:1,DASHES:2,DA:2,DOT-DASH:3,DOTDASHED:3,SOLID:4,FUNNY:5,PATT
     *ERNED:6,DAASHES:7,INTENSITY:1:7:2,WIDTH:1:7:2,CYCLE:Y,WHITE:1,RED:
     *2,GREEN:3,BLUE:4,YELLOW:5,MAGENTA:6,CYAN:7,LABEL:Y,LIMITED,INSIDE:
     *Y,NAME:S,OUTSIDE:Y,PARALLEL:Y,PERPENDICULAR:Y,DOUBLE:Y,PRIMARY:3,S
     *ECONDARY:1,SIZE,TITLE:T,BLACK:8,;')
      GOTO (10032,10040,10330,10330,10035,10035,10035,10040,10035),INTER
     *P
10035 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10031
10032 CONTINUE
      IF(FLAGS(23).and.FLAGS(92)) RETURN
      IF (.not. LCYCLE) THEN
      IF (ITXTUR.eq.0) ITXTUR=LINTEX
      IF (ICOL.eq.0) ICOL=LINCOL
      IF (INTEN.eq.0) INTEN=LINWID
      ENDIF
      ITXTUR=8*INTEN+64*ITXTUR+512*ICOL
      CALL T2CWTS(ITXTUR,ITXSAV)
      IF (FLAGS(121)) CALL TXXMT
      SSAV=LBLSIZ
      IF (SIZE.ne.0) LBLSIZ=SIZE
      IF (LEXPAN) THEN
      DO 10341 I=1,2
      DO 10351 J=1,3
      EXYZLIM(J,I)=TLIM(J,I)
10351 CONTINUE
10352 CONTINUE
10341 CONTINUE
10342 CONTINUE
      ENDIF
      DO 10361 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N1,N2,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF(NP .lt. N1)GOTO 10361
      IF (IBTYPE.eq.2) THEN
      M1=MESH1
      M2=MESH2
      M3=MESH3
      NCOL(1,1)=(I1-IM)/NINCR0
      NCOL(1,2)=NP-N1+NCOL(1,1)
      NCOL(2,1)=(I2-IM)/(NINCR0*NINCR1)
      NCOL(2,2)=NL-N3+NCOL(2,1)
      IF(NCOL(1,1) .GT. NCOL(1,2) .OR. NCOL(2,1) .GT. NCOL(2,2))GOTO 103
     *61
      FLAGS(28) = .TRUE.
      IF (.NOT.FLAGS(75)) THEN
      FLAGS(56)=NDIMNS(1).eq.3
      IF(MESH2D.eq.0)MESH2D=MESH3
      IF (LEXPAN) THEN
      NXYLIM(1,1)=NCOL(1,1)
      NXYLIM(1,2)=NCOL(1,2)
      NXYLIM(2,1)=NCOL(2,1)
      NXYLIM(2,2)=NCOL(2,2)
      NXYLIM(3,1)=NS1
      NXYLIM(3,2)=NS2
      ENDIF
      CALL T23LIM(DATBUF(IM),NINCR0,NINCR1,NINCR2)
      ENDIF
      CALL T2CWTS(ITXSAV,IDUM)
      IF (.not. LSAVE) THEN
      CALL T2AXES
      CALL TXSCIS(2)
      ELSE
      LTITLE=.false.
      ENDIF
      IF (NUM.eq.0) THEN
      CALL T2STCK(NONLIN(MESH3), XYZLIM(MESH3,1),XYZLIM(MESH3,2), NXYZ1(
     *MESH3),NXYZ2(MESH3), SCLPRM(1,MESH3), NBUFSIZ, NUM,BUFFER,IBUFFR)
      IF (.not.LDLAB) THEN
      DO 10371 I=1,NUM
      IBUFFR(I)=ISIGN(1,IBUFFR(I))
10371 CONTINUE
10372 CONTINUE
      ENDIF
      ENDIF
      IF (LTRAP) RETURN
      IF(FLAGS(23).and.FLAGS(92)) RETURN
      JDIM=((NINCR1-1)*(NINCR2-1)+15)/16
      IF (LSAVE) THEN
      J=IM
      CALL T2_GET_MEMORY(DATBUF,NINCR1*NINCR2,IM)
      IF (IM .eq. 0) RETURN
      DO 10381 I=IM,IM+NINCR1*NINCR2-1
      DATBUF(I)=DATBUF(J)
      J=J+NINCR0
10381 CONTINUE
10382 CONTINUE
      NINCR0=1
      CALL T2_GET_MEMORY(DATBUF,JDIM,JINDEX)
      IF (JINDEX .eq. 0) THEN
      CALL T2_FREE_MEMORY(DATBUF,IM,NINCR1*NINCR2)
      RETURN
      ENDIF
      ELSE IF (.not. T2_VIRT(JDIM)) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Not enough storage',4)
      RETURN
      ELSE
      CALL T2GDSET(ISET,N1,N2,N1,N2,ISETD,TLIM,C_SELECT(:N_SELECT))
      JINDEX=IVRPTR(12)
      ENDIF
C     CALL T2CNT5(0,0,0,0,0,0,0,0,0)
      DMMY=T2CNT5(0,0,0,0,0,0,0,0,0)	! for unix-fortran
      ICYCLE=1
      IF (LCYCLE) THEN
      CALL T2CWTS(ITX_CYCLE(ICYCLE),IDUM)
      ENDIF
      DO 10391 J=1,NUM
      IF(LTRAP .or. EFLG.ne.0)GOTO 10392
      IF (IBUFFR(J).gt.0) THEN
      IF (LCYCLE) THEN
      CALL T2CWTS(ITX_CYCLE(ICYCLE),IDUM)
      ENDIF
      CALL T2CWTS(ITXTUR,IDUM)
      ICYCLE=ICYCLE+1
      IF (ICYCLE .gt. N_CYCLE) ICYCLE=1
      ELSE
      IF (LCYCLE) THEN
      CALL T2CWTS(ITX_CYCLE(ICYCLE),IDUM)
      ENDIF
      CALL T2CWTS(ITXSEC,IDUM)
      ENDIF
      CALL TXSDEF
      BDFG=0
      IF (.not. LSAVE) THEN
      IF (LOUT) BDFG=BDFG+32
      IF (LIN) BDFG=BDFG+1
      IF (LDOUBL) BDFG=BDFG+64
      IF (LPERP) BDFG=BDFG+4
      IF (LPARAL) BDFG=BDFG+2
      ENDIF
      CALL T2CNT0(DATBUF(IM),NINCR0,NINCR1,NINCR2  ,IBUFFR(J),BUFFER(J) 
     * ,DATBUF(JINDEX),JDIM,EFLG,NCOL,BDFG,LSAVE,M1,M2,M3)
      IF (EFLG.ne.0) THEN
      WRITE(OUTSTR,*)'*** ERROR ***',EFLG,' in T2CNT0'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ENDIF
10391 CONTINUE
10392 CONTINUE
      CALL T2CWTS(ITXSAV,IDUM)
      IF (LTITLE) CALL T2_PLOT_TITLE(ISET,.false.)
      C_NAME='Contour %%'
      N_NAME=9
      IF (LSAVE) THEN
      CALL T2_FREE_MEMORY(DATBUF,JINDEX,JDIM)
      CALL T2_FREE_MEMORY(DATBUF,IM,NINCR1*NINCR2)
      ENDIF
      ELSE
      CALL T2ERR(INFOIN,CARDIN,'*** WARNING *** Non mesh data skipped',4
     *)
      ENDIF
10361 CONTINUE
10362 CONTINUE
      LBLSIZ=SSAV
      IF (FLAGS(121)) CALL TXXMT
      CALL T2CWTS(ITXSAV,IDUM)
      if (FLAGS(75)) CALL TXSCIS(1)
      IF (LTRAP) RETURN
      IF (.not. LSAVE .and. FLAGS(75)) CALL T2TCKS(8)
      END
      SUBROUTINE T2CNT0(ARAY,LDIM,MDIM,NDIM,MCNT,ZCNT, WKAR,JDIM,EFLG,NC
     *OL,BDFG,LSAVE,M1,M2,M3)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LSAVE
      REAL CNTR
      INTEGER LDIM,MDIM,NDIM
      REAL ARAY(LDIM,MDIM,NDIM+1)
      INTEGER*4 WKAR(*)
      INTEGER JDIM,KDIM, EFLG, M1, M2, M3
      INTEGER NCNT,ICNT,MCNT,IROW,ICOL
      INTEGER MINCOL,MINROW,MAXCOL,MAXROW,NCOL(2,2)
      REAL ZCNT
      INTEGER BDFG
      INTEGER I,J
      IF (LTRAP) RETURN
      EFLG=0
      IF (MDIM.lt.3 .or. NDIM.lt.3) THEN
      EFLG=2
      RETURN
      ENDIF
      IF ((MDIM-1)*(NDIM-1).gt.16*JDIM) THEN
      EFLG=3
      RETURN
      ENDIF
      IF (LTRAP) RETURN
      KDIM=MIN(((MDIM-1)*(NDIM-1)+16)/16,JDIM)
      DO 10401 I=1,KDIM
      WKAR(I)=0
10401 CONTINUE
10402 CONTINUE
      MINROW=NCOL(1,1)+2
      MAXROW=NCOL(1,2)+1
      MINCOL=NCOL(2,1)+2
      MAXCOL=NCOL(2,2)+1
      MINCOL=MAX(MINCOL,3)
      MAXCOL=MIN(NDIM,MAXCOL)
      MINROW=MAX(MINROW,3)
      MAXROW=MIN(MDIM,MAXROW)
      DO 10411 ICOL=MINCOL,MAXCOL
      IF (LTRAP.or.EFLG.ne.0) RETURN
      CALL T2CNT1(1,MINROW,ICOL,ARAY,LDIM,MDIM,MAXCOL,ZCNT,WKAR,BDFG,MCN
     *T,EFLG, MINROW,MINCOL,MAXROW,LSAVE,M1,M2,M3)
      IF (LTRAP.or.EFLG.ne.0) RETURN
      CALL T2CNT1(3,MAXROW,ICOL,ARAY,LDIM,MDIM,MAXCOL,ZCNT,WKAR,BDFG,MCN
     *T,EFLG, MINROW,MINCOL,MAXROW,LSAVE,M1,M2,M3)
10411 CONTINUE
10412 CONTINUE
      DO 10421 IROW=MINROW,MAXROW
      IF (LTRAP.or.EFLG.ne.0) RETURN
      CALL T2CNT1(0,IROW,MINCOL,ARAY,LDIM,MDIM,MAXCOL,ZCNT,WKAR,BDFG,MCN
     *T,EFLG, MINROW,MINCOL,MAXROW,LSAVE,M1,M2,M3)
      IF (LTRAP.or.EFLG.ne.0) RETURN
      CALL T2CNT1(2,IROW,MAXCOL,ARAY,LDIM,MDIM,MAXCOL,ZCNT,WKAR,BDFG,MCN
     *T,EFLG, MINROW,MINCOL,MAXROW,LSAVE,M1,M2,M3)
10421 CONTINUE
10422 CONTINUE
      DO 10431 ICOL=MINCOL,MAXCOL
      DO 10441 IROW=MINROW,MAXROW
      IF (LTRAP.or.EFLG.ne.0) RETURN
      CALL T2CNT1(0,IROW,ICOL,ARAY,LDIM,MDIM,MAXCOL, ZCNT,WKAR,-BDFG,MCN
     *T,EFLG, MINROW,MINCOL,MAXROW,LSAVE,M1,M2,M3)
10441 CONTINUE
10442 CONTINUE
10431 CONTINUE
10432 CONTINUE
      END
      SUBROUTINE T2CNT1(ISID,IROW,ICOL,ARAY,LDIM,MDIM,NDIM,ZCNT,WKAR,BDF
     *G,MCNT,EFLG, MINROW,MINCOL,MAXROW,LSAVE,M1,M2,M3)
      IMPLICIT NONE
      LOGICAL LSAVE
      INTEGER I
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD  ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      CHARACTER*20 TEXT,CASE
      INTEGER NTEXT,NCASE
      REAL HEIGHT,WIDTH
      LOGICAL LBDONE,LTEST,T2CNT5
      INTEGER ISID,IROW,ICOL
      INTEGER LDIM,MDIM,NDIM, M1, M2, M3
      REAL ARAY(LDIM,MDIM,NDIM+1)
      REAL ZCNT
      INTEGER*4 WKAR(*)
      INTEGER BDFG,MCNT
      INTEGER EFLG
      INTEGER JROW,JCOL,JSID,KSID,MINROW,MINCOL,MAXROW,MAXCOL
      REAL SLOP,XSAVE,YSAVE,XYZ2(3,4)
      REAL XYZ(3)
      INTEGER INFG,MKFG
      INTEGER IAND
      DATA HNONE /-666.666/
      MAXCOL=NDIM
      EFLG=0
      JROW=IROW
      JCOL=ICOL
      JSID=ISID
      XYZ(M3)=ZCNT
      CALL T2CNT3(1,JSID,JROW,JCOL,MDIM,WKAR,MKFG)
      IF (MKFG.ne.0) RETURN
      DO 10451 I=1,4
      XYZ2(1,I)=HNONE
10451 CONTINUE
10452 CONTINUE
      LBDONE=.true.
      IF (ABS(MCNT).gt.1 .and. IAND(64+1+32,ABS(BDFG)) .ne. 0) THEN
      CALL T2CNT7(ZCNT,MCNT,TEXT,NTEXT,CASE,NCASE,HEIGHT,WIDTH,M3)
      LBDONE=.false.
      ENDIF
      CALL T2CNT2(JSID,JROW,JCOL,ZCNT ,XYZ(M2),XYZ(M1),ARAY,LDIM,MDIM,ND
     *IM,INFG)
      IF (INFG.NE.0) THEN
      CALL T2CNT4(XYZ,0,XYZ2(1,2),LSAVE)
      IF (.not. LBDONE .and. BDFG.GE.32) THEN
      LBDONE=T2CNT5(XYZ2(1,2),ZCNT,JSID,MCNT,1,M1,M2,M3)
      ENDIF
      IF (.not. LBDONE) CALL T2CNT6(XYZ2,HEIGHT,WIDTH,JSID,JROW,JCOL,ARA
     *Y, LDIM,MDIM,NDIM,BDFG,M1,M2,M3)
101   JSID=MOD(JSID+2,4)
      IF (LTRAP) RETURN
      CALL T2CNT3(0,JSID,JROW,JCOL,MDIM,WKAR,MKFG)
      IF (MKFG.eq.0) THEN
      CALL T2CNT2(JSID,JROW,JCOL,ZCNT ,XYZ(M2),XYZ(M1),ARAY,LDIM,MDIM,ND
     *IM,INFG)
      IF (INFG.NE.0) GO TO 102
      END IF
      JSID=MOD(JSID+1,4)
      CALL T2CNT3(0,JSID,JROW,JCOL,MDIM,WKAR,MKFG)
      IF (MKFG.eq.0) THEN
      CALL T2CNT2(JSID,JROW,JCOL,ZCNT ,XYZ(M2),XYZ(M1),ARAY,LDIM,MDIM,ND
     *IM,INFG)
      IF (INFG.NE.0) GO TO 102
      END IF
      JSID=MOD(JSID+2,4)
      CALL T2CNT3(0,JSID,JROW,JCOL,MDIM,WKAR,MKFG)
      IF (MKFG.ne.0) GO TO 202
      CALL T2CNT2(JSID,JROW,JCOL,ZCNT ,XYZ(M2),XYZ(M1),ARAY,LDIM,MDIM,ND
     *IM,INFG)
      IF (INFG.EQ.0) GO TO 202
102   CONTINUE
      CALL T2CNT4(XYZ,1,XYZ2(1,2),LSAVE)
      KSID=JSID
      IF (.not. LBDONE) CALL T2CNT6(XYZ2,HEIGHT,WIDTH, JSID,JROW,JCOL,AR
     *AY,LDIM,MDIM,NDIM,BDFG,M1,M2,M3)
      IF (JSID.EQ.3) THEN
      IF (JROW.GE.MAXROW) GO TO 103
      JROW=JROW+1
      JSID=1
      ELSE IF (JSID.EQ.2) THEN
      IF (JCOL.GE.MAXCOL) GO TO 103
      JCOL=JCOL+1
      JSID=0
      ELSE IF (JSID.EQ.1) THEN
      IF (JROW.LE.MINROW) GO TO 103
      JROW=JROW-1
      JSID=3
      ELSE
      IF (JCOL.LE.MINCOL) GO TO 103
      JCOL=JCOL-1
      JSID=2
      END IF
      IF ((JROW.EQ.IROW).AND.(JCOL.EQ.ICOL).AND.(JSID.EQ.ISID)) GO TO 20
     *1
      GO TO 101
103   CONTINUE
      IF ((.NOT. LBDONE .or. BDFG.gt.64) .AND. BDFG.ge.32) LBDONE=T2CNT5
     *(XYZ2(1,2),ZCNT,KSID,MCNT,1,M1,M2,M3)
      JROW=IROW
      JCOL=ICOL
      JSID=ISID
      END IF
      CALL T2CNT3(0,JSID,JROW,JCOL,MDIM,WKAR,MKFG)
201   IF ( .not. LBDONE) THEN
      IF (IAND(ABS(BDFG),1) .NE. 0) THEN
      LBDONE=T2CNT5(XYZ2,ZCNT,0,MCNT,0,M1,M2,M3)
      ENDIF
      ENDIF
      RETURN
202   EFLG=1
      END
      SUBROUTINE T2CNT6(XYZ2,HEIGHT,WIDTH, JSID,JROW,JCOL,ARAY,LDIM,MDIM
     *,NDIM,BDFG,M1,M2,M3)
      IMPLICIT NONE
      LOGICAL LTEST
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL PLIM(4,4),ZSCRN(2),XLLINE,YLLINE,XTLINE,YTLINE,XFRMFC, PAT(2
     *0),PATCUM,PATTOT,PATMOD,CCSCIS(4),DISPL, RESOL(2)
      INTEGER NPTS,IDDEVC,IPAT,NPAT,LMOVE,IROTAX,IROTAF
      COMMON/TXCOM/PLIM,ZSCRN, XLLINE,YLLINE,XTLINE,YTLINE,XFRMFC, IPA
     *T,NPAT,PAT,PATTOT, NPTS,IDDEVC,CCSCIS,LMOVE,IROTAX,DISPL,IROTAF,P
     *ATCUM,PATMOD, RESOL
      REAL HNONE
      INTEGER ISID,JSID,BDFG, M1, M2, M3
      REAL SLSAVE,ZCNT,SLOPE
      SAVE SLSAVE
      REAL DX,DY,DENOM
      INTEGER LDIM,MDIM,NDIM,JROW,JCOL,I,J
      REAL ARAY(LDIM,MDIM,NDIM+1),FMIN,FMAX
      REAL XYZ2(3,4),T1,T2,TEMP,HEIGHT,WIDTH,XYZ3(3),XYZ4(3,2,2)
      REAL TOLR,DX1,DY1,DX2,DY2
      INTEGER IAND
      DATA HNONE /-666.666/
      IF (XYZ2(1,2) .ne. HNONE) THEN
      IF (XYZ2(1,3) .ne. HNONE) THEN
      XYZ2(1,4)=XYZ2(1,2)
      XYZ2(2,4)=XYZ2(2,2)
      IF (FLAGS(56)) THEN
      SLOPE=-XYZ2(1,2)
      DX=1
      DY=0
      XYZ2(1,4)=XYZ2(1,4)+WIDTH
      ELSE
      DO 10461 J=1,2
      DO 10471 I=1,2
      XYZ3(M1)=ARAY(1,JROW+I-2,1)
      XYZ3(M2)=ARAY(1,1,JCOL+J-2)
      XYZ3(M3)=ARAY(1,JROW+I-2,JCOL+J-2)
      CALL T2XFRM(3,1,XYZ3,NONLIN,XFRM12,3,XYZ4(1,I,J))
10471 CONTINUE
10472 CONTINUE
10461 CONTINUE
10462 CONTINUE
      DX=XYZ4(1,2,2)-XYZ4(1,1,1)
      DY=XYZ4(2,2,2)-XYZ4(2,1,1)
      IF (DX*DY .EQ. 0) RETURN
      IF (M1.eq.1) THEN
      DX=(XYZ4(3,2,1)-XYZ4(3,1,1))/DX
      DY=(XYZ4(3,1,2)-XYZ4(3,1,1))/DY
      ELSE
      DY=(XYZ4(3,2,1)-XYZ4(3,1,1))/DY
      DX=(XYZ4(3,1,2)-XYZ4(3,1,1))/DX
      ENDIF
      SLOPE=DX**2+DY**2
      DX=XYZ2(1,2)-XYZ2(1,3)
      DY=XYZ2(2,2)-XYZ2(2,3)
      DENOM=DX**2+DY**2
      IF (DENOM .LT. 0.001**2) RETURN
      DENOM=SQRT(DENOM)
      DX=DX/DENOM
      DY=DY/DENOM
      IF (DY .LT. 0) THEN
      DX=-DX
      DY=-DY
      ENDIF
      XYZ2(1,4)=XYZ2(1,2)+DY*0.6*HEIGHT
      XYZ2(2,4)=XYZ2(2,2)+DX*0.6*HEIGHT
      ENDIF
      IF (SLSAVE.gt.SLOPE) THEN
      XYZ2(3,4)=0
      IF(IAND(ABS(BDFG),4).ne.0) THEN
      DX1=DX
      DX=-DY
      DY=DX1
      ELSEIF (IAND(ABS(BDFG),2).EQ.0) THEN
      DX=1
      DY=0
      ENDIF
      IF (DX .LT. 0) THEN
      DX=-DX
      DY=-DY
      ENDIF
      LTEST=XYZ2(1,4)-DX*WIDTH-DY*HEIGHT .ge.CCSCIS(1) .and.  XYZ2(1,4)+
     *DX*WIDTH+DY*HEIGHT .le.CCSCIS(2) .and.  XYZ2(2,4)-DY*WIDTH-DX*HEIG
     *HT .ge.CCSCIS(3) .and.  XYZ2(2,4)+DY*WIDTH+DX*HEIGHT .le.CCSCIS(4)
     * 
      DO 10481 I=1+400/2,400-3,4
      IF(.not. LTEST)GOTO 10482
      IF(BUFFER(I) .eq. HNONE)GOTO 10482
      DX1=BUFFER(I)-XYZ2(1,4)-DX*WIDTH/2
      DY1=BUFFER(I+1)-XYZ2(2,4)-DY*WIDTH/2
      DX2=BUFFER(I)-XYZ2(1,4)-DX1
      DY2=BUFFER(I+1)-XYZ2(2,4)-DY1
      DX2=DX2*DX+DY2*DY
      LTEST=LTEST.and.(DX1**2+DY1**2.gt.HEIGHT**2 .or.  DX2.gt.WIDTH+2*H
     *EIGHT .or.  DX2.lt.-2*HEIGHT)
10481 CONTINUE
10482 CONTINUE
      IF (LTEST) THEN
      XYZ2(3,4)=ATAN2(DY,DX)*57.29577951308
      SLSAVE=SLOPE
      DO 10491 I=1,3
      XYZ2(I,1)=XYZ2(I,4)
10491 CONTINUE
10492 CONTINUE
      ENDIF
      ENDIF
      ELSE
      SLSAVE=1.0E35
      DO 10501 I=1,3
      XYZ2(I,1)=XYZ2(I,2)
10501 CONTINUE
10502 CONTINUE
      XYZ2(3,1)=0
      ENDIF
      DO 10511 I=1,3
      XYZ2(I,3)=XYZ2(I,2)
10511 CONTINUE
10512 CONTINUE
      XYZ2(1,2)=HNONE
      ENDIF
      END
      SUBROUTINE T2CNT7(ZCNT,MCNT,TEXT,NTEXT,CASE,NCASE,HEIGHT,WIDTH, M3
     *)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      CHARACTER*20 TEXT,CASE
      INTEGER MCNT,II,IWID,IFIRST, M3
      REAL ZCNT,TXXCSZ,HEIGHT,WIDTH
      INTEGER NTEXT,NCASE
      REAL VM
      IF (LTRAP) RETURN
      II=IABS(MCNT)
      NTEXT=0
      IF (II.gt.1) THEN
      VM = AMAX1(ABS(XYZLIM(M3,1)),ABS(XYZLIM(M3,2)))
      VM = AMAX1(VM,1.0E-35)
      IF (II.eq.2) THEN
      IWID=ALOG10(VM)
      IWID=5-IWID
      IWID=MIN(MAX(IWID,0),9)
      ELSE
      IWID=6
      ENDIF
      CALL T2TLAB(II,ZCNT,SCLPRM(1,M3),IWID,1,TEXT,NTEXT,CASE,NCASE,IFIR
     *ST)
      HEIGHT=ABS(0.1*REDUCE(2)*LBLSIZ)
      WIDTH=TXXCSZ(TEXT(1:NTEXT),CASE(1:NCASE),HEIGHT)
      IF (WIDTH.eq.0) WIDTH=HEIGHT
      ENDIF
      END
      SUBROUTINE T2_CNT_SAVE(XYZ,BBIT,NAME)
      IMPLICIT NONE
      CHARACTER*(*) NAME
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL XYZ(3)
      REAL XYZDAT(19)
      INTEGER BBIT,I,J
      LOGICAL T2_VIRT,DMMY
      DATA XYZDAT/19*0.0/
      DATA HNONE /-666.666/
      IF( LTRAP ) RETURN
      IF (BBIT .eq. 0) THEN
      CALL T2NEWS(1,NAME)
      XYZDAT(1)=SYMBOL
      ELSE
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) THEN
C     CALL T2_VIRT(500*NINCR)
C     IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) CALL T2_VIRT(100*NINCR)
C     IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) CALL T2_VIRT(512)
      DMMY=T2_VIRT(500*NINCR)				! for unix-fortran
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) DMMY=T2_VIRT(100*NINCR)	!
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) DMMY=T2_VIRT(512)		!
      IF ((NPTMAX-IVRPTR(12)+1)/NINCR.le.0) THEN
      CALL T2ERR(0,' ','*** ERROR *** Not enough storage',3)
      LTRAP=.true.
      RETURN
      ENDIF
      ENDIF
      IVRPTR(12)=IVRPTR(12)+NINCR
      DATBUF(IVRPTR(15)+2)=DATBUF(IVRPTR(15)+2)+NINCR
      ENDIF
      DO 10521 I=1,3
      XYZDAT(2*I)=XYZ(I)
10521 CONTINUE
10522 CONTINUE
      DO 10531 I=1,19
      IF (IVRPTR(I) .gt. 1) THEN
      DATBUF(IVRPTR(I))=XYZDAT(I)
      IVRPTR(I)=IVRPTR(I)+NINCR
      ENDIF
10531 CONTINUE
10532 CONTINUE
      END
      SUBROUTINE T2CNT4(XYZ1,BBIT,XYZ2,LSAVE)
      IMPLICIT NONE
      REAL TOLR
      PARAMETER (TOLR=0.001)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LSAVE
      REAL XYZ1(3),XYZ2(3)
      REAL XCRD,YCRD,ZCRD
      INTEGER BBIT,LBIT,LPEN
      SAVE XSAV,YSAV
      REAL XSAV,YSAV,TEMP
      IF( LTRAP ) RETURN
      IF (LSAVE) THEN
      CALL T2_CNT_SAVE(XYZ1,BBIT,C_NAME(:ABS(N_NAME)))
      IF (BBIT .eq. 0) THEN
      C_NAME='%'
      N_NAME=1
      ENDIF
      RETURN
      ENDIF
      CALL T2XFRM(3,1,XYZ1,NONLIN,XFRM14,2,XYZ2)
      IF (BBIT.eq.0 .or. LBIT.eq.0 .or. (ABS(XYZ2(1)-XSAV)+ABS(XYZ2(2)-Y
     *SAV)).GE.TOLR) THEN
      IF (BBIT.ne.0) THEN
      LPEN=-1
      ELSE
      LPEN= 1
      ENDIF
      CALL TXLINE(XYZ2(1),XYZ2(2),LPEN,LINTEX)
      XSAV=XYZ2(1)
      YSAV=XYZ2(2)
      ENDIF
      LBIT=BBIT
      END
      LOGICAL FUNCTION T2CNT5(XYZ2,ZC,ISIDE,MCNT,BDFG,M1,M2,M3)
      IMPLICIT NONE
      CHARACTER*20 TEXT,CASE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      REAL HNONE
      REAL PLIM(4,4),ZSCRN(2),XLLINE,YLLINE,XTLINE,YTLINE,XFRMFC, PAT(2
     *0),PATCUM,PATTOT,PATMOD,CCSCIS(4),DISPL, RESOL(2)
      INTEGER NPTS,IDDEVC,IPAT,NPAT,LMOVE,IROTAX,IROTAF
      COMMON/TXCOM/PLIM,ZSCRN, XLLINE,YLLINE,XTLINE,YTLINE,XFRMFC, IPA
     *T,NPAT,PAT,PATTOT, NPTS,IDDEVC,CCSCIS,LMOVE,IROTAX,DISPL,IROTAF,P
     *ATCUM,PATMOD, RESOL
      INTEGER ISIDE,BDFG,MCNT, M1, M2, M3
      REAL ZC,TEMP,TEMP1,TXXCSZ
      INTEGER NTEXT,NCASE,IAXSAV,IDUM
      REAL VM,CHSIZ,DY,DX,XS,YS
      INTEGER I,II,NBUFFR,IWID,IFIRST
      SAVE NBUFFR
      REAL XYZ2(3)
      INTEGER IAND
      DATA HNONE /-666.666/
      T2CNT5=.FALSE.
      IF (XYZ2(1) .eq. HNONE) RETURN
      IF (MCNT.eq.0) THEN
      NBUFFR=1+400/2
      DO 10541 I=NBUFFR,400
      BUFFER(I)=HNONE
10541 CONTINUE
10542 CONTINUE
      RETURN
      ENDIF
      IF( LTRAP ) RETURN
      II=IABS(MCNT)
      IF (II.gt.1) THEN
      VM = AMAX1(ABS(XYZLIM(M3,1)),ABS(XYZLIM(M3,2)))
      VM = AMAX1(VM,1.0E-35)
      IF (II.eq.2) THEN
      IWID=ALOG10(VM)
      IWID=5-IWID
      IWID=MIN(MAX(IWID,0),9)
      ELSE
      IWID=6
      ENDIF
      CALL T2TLAB(II,ZC,SCLPRM(1,M3),IWID,1,TEXT,NTEXT,CASE,NCASE,IFIRST
     *)
      CHSIZ=ABS(0.1*REDUCE(2)*LBLSIZ)
      TEMP=CHSIZ/2
      TEMP1=TXXCSZ(TEXT(1:NTEXT),CASE(1:NCASE),0.1*REDUCE(2)*LBLSIZ)
      IF (TEMP1.eq.0) TEMP1=TEMP
      DX=0
      DY=0
      IF (BDFG .NE.0) THEN
      IF (1+IAND(ISIDE,1).eq.M1) THEN
      DX=-TEMP1/2
      DY=1.1*TEMP
      IF (ISIDE.le.1) DY=-DY
      ELSE
      DX=TEMP
      IF (ISIDE.le.1) DX=-TEMP1
      ENDIF
      IF (XYZ2(1)+DX-TEMP .lt. CCSCIS(1)) DX=CCSCIS(1)-XYZ2(1)+TEMP
      IF (ABS(DX) .gt. TEMP1+TEMP) RETURN
      IF (XYZ2(1)+DX+TEMP1.gt. CCSCIS(2)) DX=CCSCIS(2)-XYZ2(1)-TEMP1
      IF (ABS(DX) .gt. TEMP1+TEMP) RETURN
      IF (XYZ2(2)+DY-TEMP .lt. CCSCIS(3)) DY=0
      IF (XYZ2(2)+DY-TEMP .lt. CCSCIS(3)) DY=2*TEMP
      IF (XYZ2(2)+DY+TEMP .gt. CCSCIS(4)) DY=0
      IF (XYZ2(2)+DY+TEMP .gt. CCSCIS(4)) DY=-2*TEMP
      IF (XYZ2(1)+DX-TEMP .lt. CCSCIS(1) .or. XYZ2(1)+DX+TEMP1.gt. CCSCI
     *S(2)) RETURN
      IF (XYZ2(2)+DY-TEMP .lt. CCSCIS(3) .or. XYZ2(2)+DY+TEMP .gt. CCSCI
     *S(4)) RETURN
      XYZ2(1)=XYZ2(1)+DX
      XYZ2(2)=XYZ2(2)+DY
      DO 10551 I=1+400/2,400-3,4
      IF(BUFFER(I) .eq. HNONE)GOTO 10552
      IF (XYZ2(1)+TEMP1 .gt. BUFFER(I) .and. XYZ2(1).lt. BUFFER(I)+BUFFE
     *R(I+3) .and. XYZ2(2)-2*TEMP .lt. BUFFER(I+1) .and. XYZ2(2)+2*TEMP 
     *.gt. BUFFER(I+1)) RETURN
10551 CONTINUE
10552 CONTINUE
      ENDIF
      IF (XYZ2(1)-TEMP .ge.CCSCIS(1) .and. XYZ2(1)+TEMP .le.CCSCIS(2) .a
     *nd. XYZ2(2)-TEMP .ge.CCSCIS(3) .and. XYZ2(2)+TEMP .le.CCSCIS(4)) T
     *HEN
      BUFFER(NBUFFR)=XYZ2(1)
      BUFFER(NBUFFR+1)=XYZ2(2)
      BUFFER(NBUFFR+3)=TEMP1
      BUFFER(NBUFFR+2)=XYZ2(3)
      NBUFFR=NBUFFR+4
      IF (NBUFFR+3.gt.400) NBUFFR=1+400/2
      CALL T2CWTS(IAXTEX,IAXSAV)
      CALL T2CWTS(LABTEX,IDUM)
      CALL TXSDEF
      T2CNT5=.TRUE.
      IF (FLAGS(123)) CALL TXXMT
      CALL TXTEXT(XYZ2(1),XYZ2(2),LBLSIZ,XYZ2(3)  ,TEXT(1:NTEXT),CASE(1:
     *NCASE))
      IF (FLAGS(123)) CALL TXXMT
      CALL T2CWTS(IAXSAV,IDUM)
      CALL TXSDEF
      ENDIF
      ENDIF
      END
      SUBROUTINE T2CNT2(ISID,IROW,ICOL,ZCNT,XCRD,YCRD,                          
     X                  ARAY,LDIM,MDIM,NDIM,OFLG)                               
C                                                                               
C *******************  THE UNIFIED GRAPHICS SYSTEM  *******************         
C *                DETERMINE CONTOUR-SIDE INTERSECTION                *         
C *                                                                   *         
C *  THIS SUBROUTINE IS USED BY T2CNTR TO DETERMINE IF A SIDE IS      *         
C *  INTERSECTED BY A CONTOUR LINE.                                   *         
C *                                                                   *         
C *  THE CALLING SEQUENCE IS:                                         *         
C *    CALL T2CNT2(ISID,IROW,ICOL,ZCNT,XCRD,YCRD,                     *         
C *                ARAY,LDIM,MDIM,NDIM,OFLG)                               *    
C *                                                                   *         
C *  THE PARAMETERS IN THE CALLING SEQUENCE ARE:                      *         
C *    ISID  INDEX OF THE SIDE BEING PROCESSED.                       *         
C *    IROW  INDEX OF THE ROW BEING PROCESSED.                        *         
C *    ICOL  INDEX OF THE COLUMN BEING PROCESSED.                     *         
C *    ZCNT  VALUE OF THE CONTOUR LINE.                               *         
C *    XCRD  X COORDINATE OF THE INTERSECTION.                        *         
C *    YCRD  Y COORDINATE OF THE INTERSECTION.                        *         
C *    ARAY  THE ARRAY DEFINING THE CONTOUR DATA.                     *         
C *    MDIM  THE EXTENT OF THE CONTOUR DATA IN THE X DIRECTION.       *         
C *    NDIM  THE EXTENT OF THE CONTOUR DATA IN THE Y DIRECTION.       *         
C *    OFLG  AN OUTPUT FLAG INDICATING IF AN INTERSECTION WAS FOUND.  *         
C *                                                                   *         
C *                                                                   *         
C *********************************************************************         
C                                                                               
      IMPLICIT      NONE                                                        
      INTEGER       ISID                                                        
      REAL          ZCNT                                                        
      REAL          XCRD,YCRD                                                   
      INTEGER       LDIM,MDIM,NDIM,IROW,ICOL                                    
      REAL          ARAY(LDIM,MDIM,NDIM+1)                                      
      INTEGER       OFLG                                                        
C                                                                               
      REAL          IVR1,IVR2,DVR1,DVR2                                         
      LOGICAL       VFLG                                                        
C                                                                               
      REAL          FLT1                                                        
C                                                                               
C  OBTAIN THE INDEPENDENT AND DEPENDENT VARIABLES.                              
      IF (ISID.EQ.0) THEN                                                       
        DVR1=ARAY(1,IROW-1,ICOL-1)                                              
        DVR2=ARAY(1,IROW,ICOL-1)                                                
        XCRD=ARAY(1,1,ICOL-1)                                                   
        VFLG=.TRUE.                                                             
      ELSE IF (ISID.EQ.1) THEN                                                  
        DVR1=ARAY(1,IROW-1,ICOL-1)                                              
        DVR2=ARAY(1,IROW-1,ICOL)                                                
        YCRD=ARAY(1,IROW-1,1)                                                   
        VFLG=.FALSE.                                                            
      ELSE IF (ISID.EQ.2) THEN                                                  
        DVR1=ARAY(1,IROW-1,ICOL)                                                
        DVR2=ARAY(1,IROW,ICOL)                                                  
        XCRD=ARAY(1,1,ICOL)                                                     
        VFLG=.TRUE.                                                             
      ELSE                                                                      
        DVR1=ARAY(1,IROW,ICOL-1)                                                
        DVR2=ARAY(1,IROW,ICOL)                                                  
        YCRD=ARAY(1,IROW,1)                                                     
        VFLG=.FALSE.                                                            
      END IF                                                                    
      IF (VFLG) THEN                                                            
        IVR1=ARAY(1,IROW-1,1)                                                   
        IVR2=ARAY(1,IROW,1)                                                     
      ELSE                                                                      
        IVR1=ARAY(1,1,ICOL-1)                                                   
        IVR2=ARAY(1,1,ICOL)                                                     
      END IF                                                                    
C                                                                               
C  CHECK FOR AN INTERSECTION.                                                   
      IF (((DVR1.LT.ZCNT).AND.(DVR2.LT.ZCNT)).OR.                               
     X  ((DVR1.GE.ZCNT).AND.(DVR2.GE.ZCNT))) GO TO 101                          
C  COMPUTE THE OTHER COORDINATE.                                                
                                                                                
      FLT1=IVR1+(ZCNT-DVR1)*(IVR2-IVR1)/(DVR2-DVR1)                             
      IF (VFLG) THEN                                                            
        YCRD=FLT1                                                               
      ELSE                                                                      
        XCRD=FLT1                                                               
      END IF                                                                    
C                                                                               
C  RETURN WITH INTERSECTION.                                                    
      OFLG=1                                                                    
      GO TO 102                                                                 
C  RETURN WITHOUT INTERSECTION.                                                 
  101 OFLG=0                                                                    
  102 RETURN                                                                    
C                                                                               
      END                                                                       
      SUBROUTINE T2CNT3(FLAG,ISID,IROW,ICOL,MDIM,WKAR,OFLG)                     
C                                                                               
C *******************  THE UNIFIED GRAPHICS SYSTEM  *******************         
C *                   MARK/CHECK SIDES AS PROCESSED                   *         
C *                                                                   *         
C *  THIS SUBROUTINE IS USED BY T2CNTR TO MARK A GIVEN SIDE AS        *         
C *  PROCESSED OR CHECK IF THE SIDE HAS BEEN PROCESSED.               *         
C *                                                                   *         
C *  THE CALLING SEQUENCE IS:                                         *         
C *    CALL T2CNT3(FLAG,ISID,IROW,ICOL,MDIM,WKAR,OFLG)                *         
C *                                                                   *         
C *  THE PARAMETERS IN THE CALLING SEQUENCE ARE:                      *         
C *    FLAG  0 MEANS MARK, 1 MEANS CHECK.                             *         
C *    ISID  INDEX OF THE SIDE BEING PROCESSED.                       *         
C *    IROW  INDEX OF THE ROW BEING PROCESSED. (Y)                    *         
C *    ICOL  INDEX OF THE COLUMN BEING PROCESSED. (X)                 *         
C *    MDIM  THE EXTENT OF THE CONTOUR DATA IN THE X DIRECTION.       *         
C *    WKAR  A WORK ARRAY.                                            *         
C *    OFLG  A RETURN VALUE INDICATING IF THE SIDE HAS BEEN           *         
C *          PROCESSED.                                               *         
C *                                                                   *         
C *                                                                   *         
C *********************************************************************         
C                                                                               
      INTEGER       FLAG,ISID,IROW,ICOL,MDIM                                    
      INTEGER*4     WKAR(*)                                                     
      INTEGER       OFLG                                                        
C                                                                               
      INTEGER       KROW,KCOL,KSID                                              
      INTEGER*4     XMNB,XMNW,XMNO,XMWD,XMLP,XMUP,XMP0,XMP1                     
C                                                                               
C  PERFORM THE REQUIRED OPERATION.                                              
      KROW=IROW                                                                 
      KCOL=ICOL                                                                 
      KSID=ISID                                                                 
      IF (KSID.EQ.2) THEN                                                       
        KSID=0                                                                  
        KCOL=KCOL+1                                                             
      ELSE IF (KSID.EQ.3) THEN                                                  
        KSID=1                                                                  
        KROW=KROW+1                                                             
      END IF                                                                    
      XMNB=2*((KROW-3)+(MDIM-1)*(KCOL-3))+KSID                                  
      XMNW=1+XMNB/32                                                            
      XMNO=  MOD(XMNB,32)                                                       
      XMP0=ISHFT(1,XMNO)                                                        
      XMWD=WKAR(XMNW)                                                           
      IF (IAND(XMP0,XMWD).eq.0) THEN                                            
         OFLG=0                                                                 
         IF (FLAG.EQ.0) WKAR(XMNW)=IOR(XMWD,XMP0)                               
      ELSE                                                                      
         OFLG=1                                                                 
      ENDIF                                                                     
C                                                                               
C  RETURN TO CALLING SUBROUTINE.                                                
      RETURN                                                                    
C                                                                               
      END                                                                       
