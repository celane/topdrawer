C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
      SUBROUTINE T2_SPLINE(INFOIN,CARDIN)
      IMPLICIT NONE
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      CHARACTER*1 CXYZ(3)
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL LAPPEN, LCONF, LMONITOR, LCHECK, LLOG
      INTEGER N1,N2,N3,N4,NS1,NS2
      REAL TLIM(3,2)
      COMMON /T2SELECT/N1 ,N2 ,N3 ,N4 ,NS1 ,NS2 ,TLIM ,LMONITOR ,LAPPEN
     * ,LCONF ,LLOG ,LCHECK
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      LOGICAL ZEXIST, CLOSED, LTEST
      REAL TWOPI
      PARAMETER (TWOPI=6.2831 85307 18 D0)
      INTEGER I,J,K,L,M,N, NJ, JJTYPE, ICLOSED
      INTEGER NLIM,ISET
      INTEGER MINX, MINY, MAXX, MAXY, MAXM1, MAXPNT, NBUFF
      INTEGER FIRST, LAST, FIRSTJ, OVERLP, IMIN, IMAX, JMAX
      INTEGER IXMONO, IXB, IYB, IZB, ISB, IYP, II, NXYZ
      EQUIVALENCE (ISB,ISETC(NSDATA)), (IXB,ISETC(NXDATA)), (IYB,ISETC(N
     *YDATA))
      EQUIVALENCE (IZB,ISETC(NZDATA))
      INTEGER JPOINTS, JSETS, IDSETS, LEVEL, ISETC(NSETD)
      REAL XYZ(19)
      REAL X, Y, Z, YP, YPP, YPPP, ZP, ZPP, ZPPP, DX, DXX, TEMP1, TEMP2
      DATA CXYZ/'X','Y','Z'/
      DATA HNONE /-666.666/
      JJTYPE=2
      JPOINTS=0
      JSETS=0
      N_NAME=8
      C_NAME='Spline %'
      LEVEL=2
      IDSETS=NDSETS
      ICLOSED=0
      GOTO 10011
10040 CONTINUE
      LAPPEN=LTOKEN
      GOTO 10011
10050 CONTINUE
      ICLOSED=1
      IF (LTOKEN) ICLOSED=-1
      GOTO 10011
10060 CONTINUE
      JJTYPE=INTEG
      GOTO 10011
10070 CONTINUE
      LEVEL=INTEG
      GOTO 10011
10080 CONTINUE
      CALL T2XYZC(INFOIN,CARDIN,TLIM,2,NLIM)
      GOTO 10011
10090 CONTINUE
      LLOG=LTOKEN
      GOTO 10011
10100 CONTINUE
      LMONITOR=LTOKEN
      GOTO 10011
10110 CONTINUE
      N_NAME=MAX(1,NSTRNG)
      C_NAME=STRNG(:N_NAME)
      GOTO 10011
10120 CONTINUE
      CALL T2PNTS(INFOIN,CARDIN,N1,N2)
      GOTO 10011
10130 CONTINUE
      CALL T2NSET(INFOIN,CARDIN,NS1,NS2)
      GOTO 10011
10140 CONTINUE
      C_SELECT=STRNG
      N_SELECT=MAX(1,NSTRNG)
      GOTO 10011
10011 CALL TOKEN(INFOIN,CARDIN,'APPEND:Y,CLOSED:Y,GENERAL:2,SPLINE:1,LEV
     *EL:2:10:2,LIMITED,LOG:Y,MONITOR:Y,NAME:S,POINTS,COLUMNS,SETS,SELEC
     *T:S,;')
      GOTO (10012,10017,10015,10015,10015,10015,10011,10017, 10015),INTE
     *RP
10015 CALL T2ERR(INFOIN,CARDIN,' ',5)
      GOTO 10011
10017 GOTO ( 10040,10050,10060,10060,10070,10080,10090,10100,10110,10120
     *,10120,10130,10140,10015),KEYORD
10012 CONTINUE
      IF (FLAGS(23)) RETURN
      DO 10151 ISET=NS1,NS2
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      IF(IBTYPE .ne. 1)GOTO 10151
      JMAX=NP-N1+1
      IF(JMAX .le. 0)GOTO 10151
      CALL T2NEWS(LEVEL*(JMAX-1)+1,c_name(:N_NAME))
      IF (FLAGS(23)) GOTO 10160
      DO 10171 I=1,19
      XYZ(I)=0
10171 CONTINUE
10172 CONTINUE
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETC,TLIM,C_SELECT(:N_SELECT))
      CALL T2GDSET(NDSETS,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      JSETS=JSETS+1
      ZEXIST=ISETC(NZDATA) .ne. 1
      IF (JJTYPE.EQ.1) THEN
      IF (JMAX.LT.4) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** WARNING *** Spline fit needs 4 poin
     *ts. General fit used.'),4)
      GOTO 10180
      ENDIF
      MINX=ISETC(NXDATA)
      MAXX=MINX+NINCR0*(JMAX-2)
      MINY=ISETC(NYDATA)
      MAXY=MINY+NINCR0*(JMAX-2)
10190 CONTINUE
10191 CONTINUE
      DO 10201 I=MINX,MAXX,NINCR0
      IF (DATBUF(I+NINCR0).LE.DATBUF(I)) THEN
      DO 10211 J=MINX,MAXX,NINCR0
      IF (DATBUF(J+NINCR0).GE.DATBUF(J)) THEN
      DO 10221 K=MINY,MAXY,NINCR0
      IF (DATBUF(K+NINCR0).LE.DATBUF(K)) THEN
      DO 10231 L=MINY,MAXY,NINCR0
      IF (DATBUF(L+NINCR0).GE.DATBUF(L)) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** WARNING *** Spline fit needs ' //'mo
     *notonic points.  ' //'General fit used.',4)
      GOTO 10180
      ENDIF
10231 CONTINUE
10232 CONTINUE
      IXMONO=0
      GOTO 10192
      ENDIF
10221 CONTINUE
10222 CONTINUE
      IXMONO=0
      GOTO 10192
      ENDIF
10211 CONTINUE
10212 CONTINUE
      IXMONO=1
      GOTO 10192
      ENDIF
10201 CONTINUE
10202 CONTINUE
      IXMONO=1
10192 CONTINUE
      IF (IXMONO.NE.1) THEN
      DO 10241 J=NXDATA,NXDATA+1
      I=ISETC(J)
      ISETC(J)=ISETC(NCSIZE+J)
      ISETC(NCSIZE+J)=I
      I=ISETD(J)
      ISETD(J)=ISETD(NCSIZE+J)
      ISETD(NCSIZE+J)=I
10241 CONTINUE
10242 CONTINUE
      ENDIF
      N=3
      IF (ZEXIST) N=6
      IYP=IENDAT-N*JMAX+1
      CALL T2SPLN(NINCR0,JMAX,DATBUF(IXB),DATBUF(IYB)  ,N,DATBUF(IYP), D
     *ATBUF(IYP+1),DATBUF(IYP+2))
      IF (ZEXIST) CALL T2SPLN(NINCR0,JMAX,DATBUF(IXB),DATBUF(IZB) ,N,DAT
     *BUF(IYP+3), DATBUF(IYP+4),DATBUF(IYP+5))
      DO 10251 I=1,JMAX-1
      IF (LTRAP) GOTO 10160
      X=DATBUF(IXB)
      DXX=(DATBUF(IXB+NINCR0)-X)/FLOAT(LEVEL)
      DO 10261 L=1,19
      IF(ISETC(L+NSDATA-1) .ne. 1) THEN
      XYZ(L)=DATBUF(ISETC(L+NSDATA-1))
      ISETC(L+NSDATA-1)=ISETC(L+NSDATA-1)+NINCR0
      ENDIF
10261 CONTINUE
10262 CONTINUE
      Y=XYZ(N_YDATA)
      XYZ(N_DXDATA)=DXX/2
      XYZ(N_NDXDATA)=DXX/2
      YP=DATBUF(IYP)
      IYP=IYP+1
      YPP=DATBUF(IYP)
      IYP=IYP+1
      YPPP=DATBUF(IYP)
      IYP=IYP+1
      IF (ZEXIST) THEN
      ZP=DATBUF(IYP)
      IYP=IYP+1
      ZPP=DATBUF(IYP)
      IYP=IYP+1
      ZPPP=DATBUF(IYP)
      IYP=IYP+1
      Z=XYZ(N_ZDATA)
      ENDIF
      DO 10271 J=1,LEVEL
      DX=(J-1)*DXX
      XYZ(N_XDATA)=X + DX
      XYZ(N_YDATA)=Y + DX*(YP+DX*(YPP+DX*YPPP))
      IF (ZEXIST) XYZ(N_ZDATA)=Z + DX*(ZP+DX*(ZPP+DX*ZPPP))
      JPOINTS=JPOINTS+1
      DO 10281 L=1,19
      IF(ISETD(L+NSDATA-1) .ne. 1) THEN
      DATBUF(ISETD(L+NSDATA-1))=XYZ(L)
      ISETD(L+NSDATA-1)=ISETD(L+NSDATA-1)+NINCR0
      ENDIF
10281 CONTINUE
10282 CONTINUE
10271 CONTINUE
10272 CONTINUE
10251 CONTINUE
10252 CONTINUE
      IF (ISETD(NSDATA) .GT. IENDAT) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Data overrun',4)
      GOTO 10160
      ENDIF
      JPOINTS=JPOINTS+1
      DO 10291 L=1,7
      IF(ISETC(L+NSDATA-1) .ne. 1) THEN
      XYZ(L)=DATBUF(ISETC(L+NSDATA-1))
      ISETC(L+NSDATA-1)=ISETC(L+NSDATA-1)+NINCR0
      ENDIF
10291 CONTINUE
10292 CONTINUE
      XYZ(N_DXDATA)=DXX/2
      XYZ(N_NDXDATA)=DXX/2
      DO 10301 L=1,7
      IF(ISETD(L+NSDATA-1) .ne. 1) THEN
      DATBUF(ISETD(L+NSDATA-1))=XYZ(L)
      ISETD(L+NSDATA-1)=ISETD(L+NSDATA-1)+NINCR0
      ENDIF
10301 CONTINUE
10302 CONTINUE
      ELSE
10180 CONTINUE
      CLOSED=JMAX.GT.2 .and. LEVEL.gt.1
      TEMP1=DATBUF(ISETC(NXDATA))
      TEMP2=DATBUF(ISETC(NXDATA)+(JMAX-1)*NINCR0)
      IF (FLAGS(27)) THEN
      TEMP1=MOD(TEMP1*RADANG,TWOPI)
      TEMP2=MOD(TEMP2*RADANG,TWOPI)
      IF(TEMP1.lt.0) TEMP1=TEMP1+TWOPI
      IF(TEMP2.lt.0) TEMP2=TEMP2+TWOPI
      ENDIF
      IF (ABS(TEMP1-TEMP2) .gt. 0.0000002*(ABS(TEMP1)+ABS(TEMP2))) CLOSE
     *D=.FALSE.
      TEMP1=DATBUF(ISETC(NYDATA))
      TEMP2=DATBUF(ISETC(NYDATA)+(JMAX-1)*NINCR0)
      IF (ABS(TEMP1-TEMP2) .gt. 0.0000002*(ABS(TEMP1)+ABS(TEMP2))) CLOSE
     *D=.FALSE.
      IF (ZEXIST) THEN
      TEMP1=DATBUF(ISETC(NZDATA))
      TEMP2=DATBUF(ISETC(NZDATA)+(JMAX-1)*NINCR0)
      IF (FLAGS(27).AND.FLAGS(91)) THEN
      TEMP1=MOD(TEMP1*RADANG,TWOPI)
      TEMP2=MOD(TEMP2*RADANG,TWOPI)
      IF(TEMP1.lt.0) TEMP1=TEMP1+TWOPI
      IF(TEMP2.lt.0) TEMP2=TEMP2+TWOPI
      ENDIF
      IF (ABS(TEMP1-TEMP2) .gt. 0.0000002*(ABS(TEMP1)+ABS(TEMP2))) CLOSE
     *D=.FALSE.
      ENDIF
      OVERLP= 2
      NXYZ=2
      IF (ZEXIST) NXYZ=4
      NBUFF= 400/(NXYZ)
      MAXM1=(NBUFF-1)/LEVEL
      CLOSED= CLOSED .and. ICLOSED .le. 0
      IF (CLOSED .or. ICLOSED .eq. -1) THEN
      FIRST=JMAX-OVERLP
      IF (CLOSED) JMAX=JMAX-1
      LAST=2*JMAX+OVERLP+1
      FIRSTJ=OVERLP*LEVEL
      CLOSED=.true.
      ELSE
      FIRST=1
      LAST=JMAX
      FIRSTJ=0
      ENDIF
      MAXPNT=MAXM1-2*OVERLP
      XYZ(N_SYMBOL)=SYMBOL
      TEMP1=0
      TEMP2=0
      IF (FLAGS(27) .and. CLOSED) THEN
      TEMP1=-DATBUF(IXB+NINCR0*JMAX)+DATBUF(IXB)
      IF (FLAGS(91) .and. ZEXIST) TEMP2=-DATBUF(IZB+NINCR0*JMAX)+DATBUF(
     *IXB)
      ENDIF
      DO 10311 IMIN=FIRST,LAST,MAXPNT
      II=1
      IMAX=MIN(LAST,IMIN+MAXM1-1)
      DO 10321 I=IMIN,IMAX
      J=MOD(I-1,JMAX)+1
      IF (FLAGS(27) .and. CLOSED .and. J.eq.1) THEN
      IF ((I-1)/JMAX .eq. 1) THEN
      TEMP1=0
      TEMP2=0
      ELSE
      TEMP1=DATBUF(IXB+NINCR0*JMAX)-DATBUF(IXB)
      IF (FLAGS(91) .and. ZEXIST) TEMP2=DATBUF(IZB+NINCR0*JMAX)-DATBUF(I
     *XB)
      ENDIF
      ENDIF
      BUFFER(II)=DATBUF(ISETC(NXDATA)+NINCR0*(J-1))+TEMP1
      II=II+1
      BUFFER(II)=DATBUF(ISETC(NYDATA)+NINCR0*(J-1))
      II=II+1
      IF (ZEXIST) THEN
      BUFFER(II)=DATBUF(ISETC(NXDATA)+NINCR0*(J-1))
      II=II+1
      BUFFER(II)=DATBUF(ISETC(NZDATA)+NINCR0*(J-1))+TEMP2
      II=II+1
      ENDIF
10321 CONTINUE
10322 CONTINUE
      N=IMAX-IMIN+1
      NJ=(N-1)*LEVEL+1
      IF (ZEXIST) CALL T2CFIT(NXYZ,N,BUFFER(3),BUFFER(4), LEVEL,NJ,BUFFE
     *R(3),BUFFER(4))
      CALL T2CFIT(NXYZ,N,BUFFER(1),BUFFER(2), LEVEL,NJ,BUFFER(1),BUFFER(
     *2))
      IF (IMAX .LT. LAST .OR. CLOSED) NJ=NJ-OVERLP*LEVEL
      NJ=NJ-FIRSTJ
      II=1+NXYZ*FIRSTJ
      DO 10331 I=1,NJ
      XYZ(N_XDATA)=BUFFER(II)
      II=II+1
      XYZ(N_YDATA)=BUFFER(II)
      II=II+1
      IF (ZEXIST) THEN
      II=II+1
      XYZ(N_ZDATA)=BUFFER(II)
      II=II+1
      ENDIF
      IF (ISETD(NSDATA) .GT. IENDAT) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Data overrun',4)
      GOTO 10160
      ENDIF
      JPOINTS=JPOINTS+1
      DO 10341 L=1,7
      IF(ISETD(L+NSDATA-1) .ne. 1) THEN
      DATBUF(ISETD(L+NSDATA-1))=XYZ(L)
      ISETD(L+NSDATA-1)=ISETD(L+NSDATA-1)+NINCR0
      ENDIF
10341 CONTINUE
10342 CONTINUE
10331 CONTINUE
10332 CONTINUE
      FIRSTJ=OVERLP*LEVEL
      IF(IMAX .ge. LAST)GOTO 10312
10311 CONTINUE
10312 CONTINUE
      ENDIF
      IF (LMONITOR .and. IBTYPE .eq. 1) THEN
      CALL TXVOID
      IF (NDSETS .gt. IDSETS+1) CALL T2WAIT('Interpolate:',LTEST)
      CALL TXNEXT
      CALL T2REST
      NXYLIM(3,1)=NDSETS
      NXYLIM(3,2)=NDSETS
      DO 10351 I=1,2
      DO 10361 J=1,3
      EXYZLIM(J,I)=TLIM(J,I)
10361 CONTINUE
10362 CONTINUE
10351 CONTINUE
10352 CONTINUE
      CALL T2GDSET(ISET,N1,N2,N3,N4,ISETD,TLIM,C_SELECT(:N_SELECT))
      CALL T2JOIN(DATBUF(I1),DATBUF(I2),DATBUF(I3), 0,1,NP-N1+1,NINCR0)
      CALL T2GDSET(NDSETS,1, 2 147 483 647,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      CALL T2JOIN(DATBUF(I1),DATBUF(I2),DATBUF(I3), ITXSEC,1,NP,NINCR0)
      CALL T2_PLOT_TITLE(ISET,.false.)
      CALL TXVOID
      ENDIF
      IF (.NOT. LAPPEN) THEN
      CALL T2GDSET(ISET,1, 2 147 483 647  ,1, 2 147 483 647,ISETD,HNONE,
     *'*')
      CALL T2GDSET(NDSETS,1, 2 147 483 647  ,1, 2 147 483 647,ISETC,HNON
     *E,'*')
      N=IVRPTR(15)-IBGDAT
      K=IENDAT-IBGDAT+1
      IENDAT=IBGDAT+IVRPTR(12)-IVRPTR(15)-1
      IVRPTR(12)=IVRPTR(12)-K
      NDSETS=NDSETS-1
      NPOINT=NPOINT-NP
      IF (N .eq. K) K=IENDAT-IBGDAT+1
      DO 10371 I=IBGDAT,IENDAT,K
      DO 10381 J=I,MIN(I+K-1,IENDAT)
      DATBUF(J)=DATBUF(J+N)
10381 CONTINUE
10382 CONTINUE
      L=MIN(K,IENDAT-J+1)
      IF ( L .gt. 0) THEN
      DO 10391 M=J+L+N-K-1,J+L,-1
      DATBUF(M)=DATBUF(M-L)
10391 CONTINUE
10392 CONTINUE
      ENDIF
10371 CONTINUE
10372 CONTINUE
      ENDIF
10151 CONTINUE
10152 CONTINUE
10160 CONTINUE
      IF (JPOINTS .ne. 0) DATDAT(1,1)=HNONE
      IF (LTRAP .OR. LLOG .or. JPOINTS .le. 0) WRITE(6,*) '  Interpolate
     * ',JPOINTS,' points ', JSETS,' Sets by ',level
      END
