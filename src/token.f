C        MORTRAN 2.79 (BRACKETED KEYWORD MACROS OF 09/28/81)          
      BLOCK DATA TOKDAT
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      DATA TYPTAB / 08,13,13,13,13,13,13,13, 13,06,08,06,06,08,13,13, 13
     *,13,13,13,13,13,13,13, 13,13,13,13,13,13,13,13, 06,12,09,12,12,12,
     *12,09, 10,11,12,03,07,03,02,05, 01,01,01,01,01,01,01,01, 01,01,12,
     *08,12,07,12,12, 12,05,05,05,04,04,05,05, 05,05,05,05,05,05,05,05, 
     *05,05,05,05,05,05,05,05, 05,05,05,12,12,12,12,05, 12,05,05,05,04,0
     *4,05,05, 05,05,05,05,05,05,05,05, 05,05,05,05,05,05,05,05, 05,05,0
     *5,12,12,12,12,13,128*13/
      DATA TYPTB2   / 08,13,13,13,13,13,13,13, 13,06,08,06,06,08,13,13, 
     *13,13,13,13,13,13,13,13, 13,13,13,13,13,13,13,13, 06,12,09,12,12,1
     *2,12,09, 14,19,17,15,07,16,02,18, 01,01,01,01,01,01,01,01, 01,01,1
     *2,08,14,07,19,12, 12,05,05,05,04,04,05,05, 05,05,05,05,05,05,05,05
     *, 05,05,05,05,05,05,05,05, 05,05,05,10,12,11,12,05, 12,05,05,05,04
     *,04,05,05, 05,05,05,05,05,05,05,05, 05,05,05,05,05,05,05,05, 05,05
     *,05,12,12,12,12,13,128*13/
      DATA UPCHAR( 1:32)  /'????????? ??????????????????????'/
      DATA UPCHAR(33:64)  /' !"#$%&''()*+,-./0123456789:;<=>?'/
      DATA UPCHAR(65:96)  /'@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_'/
      DATA UPCHAR(97:128) /'`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~?'/
      DATA UPCHAR(129:160)/'????????????????????????????????'/
      DATA UPCHAR(161:192)/'????????????????????????????????'/
      DATA UPCHAR(193:224)/'????????????????????????????????'/
      DATA UPCHAR(225:256)/'????????????????????????????????'/
      DATA OKCHAR( 1:32)  /'????????? ??????????????????????'/
      DATA OKCHAR(33:64)  /' !"#$%&''()*+,-./0123456789:;<=>?'/
      DATA OKCHAR(65:96)  /'@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_'/
      DATA OKCHAR(97:128) /'`abcdefghijklmnopqrstuvwxyz{|}~?'/
      DATA OKCHAR(129:160)/'????????????????????????????????'/
      DATA OKCHAR(161:192)/'????????????????????????????????'/
      DATA OKCHAR(193:224)/'????????????????????????????????'/
      DATA OKCHAR(225:256)/'????????????????????????????????'/
      DATA DNCHAR( 1:32)  /'????????? ??????????????????????'/
      DATA DNCHAR(33:64)  /' !"#$%&''()*+,-./0123456789:;<=>?'/
      DATA DNCHAR(65:96)  /'@abcdefghijklmnopqrstuvwxyz[\]^_'/
      DATA DNCHAR(97:128) /'`abcdefghijklmnopqrstuvwxyz{|}~?'/
      DATA DNCHAR(129:160)/'????????????????????????????????'/
      DATA DNCHAR(161:192)/'????????????????????????????????'/
      DATA DNCHAR(193:224)/'????????????????????????????????'/
      DATA DNCHAR(225:256)/'????????????????????????????????'/
      END
      SUBROUTINE TOKEN(INFOIN,CARDIN,KEYS)
      IMPLICIT NONE
      EXTERNAL TOKDAT
      INTEGER INFOIN(10)
      CHARACTER*(*) CARDIN
      CHARACTER*(*) KEYS
      CHARACTER*1 CCHAR,QUOTE
      LOGICAL INTRAC,TDGETV,TDGETS
      LOGICAL LLIM
      REAL FLIM(3)
      DOUBLE PRECISION T2TIMF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      REAL HNONE
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER I,J,K,II
      INTEGER IAGAIN
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      INTEGER CHARAC,KEYLET
      INTEGER CHTYPE,KEYTYP
      LOGICAL LFIN
      INTEGER ICOL, JCOL, MINCOL, MAXCOL, MINJOU, MAXJOU
      INTEGER ICASE, IBRKT, ISAVE, KSAVE
      INTEGER MAXCHR, MAXKEY, NSTR, KEYNUM, KEYEND, IFIRST, ILAST
      INTEGER ISTRNG, INEXT
      INTEGER IS, ID, IDIGIT, JDIGIT, INODIG, IE, IEXP, IDATE, JNTEG
      REAL F60, SAVEN, Y
      INTEGER MINMCH 
      PARAMETER (MINMCH=2)
      INTEGER NXPC 
      PARAMETER (NXPC=30)
      REAL XPC(NXPC),DATE(4)
      DATA XPC/1.E01,1.E02,1.E03,1.E04,1.E05,1.E06,1.E07,1.E08,1.E09,1.E
     *10, 1.E11,1.E12,1.E13,1.E14,1.E15,1.E16,1.E17,1.E18,1.E19,1.E20, 1
     *.E21,1.E22,1.E23,1.E24,1.E25,1.E26,1.E27,1.E28,1.E29,1.E30/
      DATA HNONE /-666.666/
      KEYORD=0
      IF (INFOIN(9).lt.0) THEN
      INFOIN(9)=0
      IF (NSTRNG.le.0 .or. INTERP.eq.1 .or. (INTERP.ge.3 .and. INTERP.le
     *.5)) RETURN
      NSTJOU=LSTJOU
      goto 10010
      ENDIF
      INTERP=0
      MAXCOL=LEN(CARDIN)
      IF (INFOIN(1).eq.0) THEN
      INFOIN(1)=MAXCOL
      ELSE
      MAXCOL=MIN(MAXCOL,INFOIN(1))
      ENDIF
      LLIM=.true.
      FLIM(1)=-1.0E35
      FLIM(2)=1.0E35
      MINJOU=INFOIN(3)+1
      INFOIN(4)=INFOIN(3)
      IAGAIN=0
      ICASE=0
      LTOKEN=.TRUE.
10020 CONTINUE
      NSTRNG=0
10031 CONTINUE
      MINCOL=INFOIN(3)+1
      DO 10041 ICOL=MINCOL,MAXCOL
      CCHAR=CARDIN(ICOL:ICOL)
      CHARAC=ICHAR(CCHAR)
      CHTYPE=TYPTAB(CHARAC+1)
      GOTO ( 10050,10060,10070,10080,10080, 10090,10100,10110,10120,1013
     *0, 10140,10140,10140 ) CHTYPE
10100 CONTINUE
      IF (IAGAIN.ne.0.and.CCHAR.ne.'=') GOTO 10150
10090 CONTINUE
10041 CONTINUE
10042 CONTINUE
      ICOL=MAXCOL+1
      GOTO 10110
10070 CONTINUE
      if (IAGAIN.lt.-1) goto 10150
      IF (CCHAR.eq.'-') THEN
      IS=-1
      ELSE
      IS= 1
      ENDIF
      ID=0
      IDIGIT=-9
      INTEG=0
      INODIG=NSTRNG+1
      GOTO 10160
10060 CONTINUE
      if (IAGAIN.lt.-1) goto 10150
      IS=1
      ID=NSTRNG+1
      IDIGIT=-9
      INTEG=0
      INODIG=NSTRNG+1
      GOTO 10160
10050 CONTINUE
      if (IAGAIN.lt.-1) goto 10150
      IS=1
      ID=0
      IDIGIT=-9
      INTEG=(CHARAC-ICHAR('0'))
      IF (INTEG.gt.0) IDIGIT=IDIGIT+1
      INODIG=NSTRNG
10160 CONTINUE
      IF (IAGAIN.eq.0) INFOIN(5)=ICOL
      IE=0
      IEXP=0
      MINCOL=ICOL+1
      MAXCOL=MIN(MAXCOL,LEN(STRNG)+MINCOL+1)
      NSTRNG=NSTRNG+1
      STRNG(NSTRNG:NSTRNG)=CCHAR
      F60=0.0
      IDATE=0
      DO 10171 ICOL=MINCOL,MAXCOL
      CCHAR=CARDIN(ICOL:ICOL)
      CHARAC=ICHAR(CCHAR)
      CHTYPE=TYPTAB(CHARAC+1)
      GOTO (10180,10190 ,10200 ,10210 ,10080, 10220,10220,10220,10220,10
     *220) CHTYPE
      IF (CHTYPE.eq.14) GOTO 10220
      INODIG=INODIG+1
      IF (CCHAR.eq.':') THEN
      IF (F60.eq.0) THEN
      F60=IS
      SAVEN=0
      ENDIF
      IS=1
      SAVEN=SAVEN+INTEG/F60
      F60=F60*60
      INTEG=0
      IDIGIT=-9
      IEXP=0
      IF (IE+ID.ne.0.or.ABS(F60).ge.3601) goto 10080
      ELSEIF (CCHAR.eq.'\') THEN
      IF (IDATE.gt.2 .or. ID+IE.ne.0) GOTO 10080
      IF (IDATE.eq.0) THEN
      DO 10231 J=1,4
      DATE(J)=0
10231 CONTINUE
10232 CONTINUE
      DATE(2)=1
      DATE(3)=1
      JCOL=-5
      ENDIF
      IDATE=IDATE+1
      IF (JCOL.lt.ICOL) DATE(IDATE)=ISIGN(INTEG,IS)
      INTEG=0
      IDIGIT=-9
      IEXP=0
      JCOL=ICOL+1
      IS=1
      ELSE
      GOTO 10080
      ENDIF
      NSTRNG=NSTRNG+1
      STRNG(NSTRNG:NSTRNG)=CCHAR
      GOTO 10171
10190 CONTINUE
      IF (IE+ID.gt.0) GOTO 10080
      INODIG=INODIG+1
      ID=NSTRNG+1
      GOTO 10240
10200 CONTINUE
      IF(NSTRNG.ne.IE)GOTO 10172
      INODIG=INODIG+1
      IF (CCHAR.eq.'-') THEN
      IS=-1
      ELSE
      IS= 1
      ENDIF
      GOTO 10240
10210 CONTINUE
      IF (INODIG.ge.NSTRNG) GOTO 10080
      INODIG=NSTRNG+1
      IF (IE.gt.0) GOTO 10080
      CCHAR=UPCHAR(CHARAC+1:CHARAC+1)
      IE=NSTRNG+1
      JNTEG=ISIGN(INTEG,IS)
      JDIGIT=IDIGIT
      INTEG=0
      IS=1
      IDIGIT=-9
      GOTO 10240
10180 CONTINUE
      IF (IDIGIT.ge.0) THEN
      IEXP=IEXP+1
      ELSE
      INTEG=INTEG*10+(CHARAC-ICHAR('0'))
      IF (INTEG.gt.0) IDIGIT=IDIGIT+1
      ENDIF
10240 CONTINUE
      NSTRNG=NSTRNG+1
      STRNG(NSTRNG:NSTRNG)=CCHAR
10171 CONTINUE
10172 CONTINUE
10220 CONTINUE
      IF (INODIG.ge.NSTRNG) GOTO 10080
      IF (INTERP.eq.0) INTERP=3
      IF (ID+IE.gt.0 .and. INTERP.eq.3) INTERP=4
      INTEG=ISIGN(INTEG,IS)
      IF (IE .gt. 0) THEN
      IEXP=INTEG+IEXP
      INTEG=JNTEG
      IDIGIT=JDIGIT
      ELSE
      IE=NSTRNG+1
      ENDIF
      IF (ID.ne.0) IEXP=IEXP-IE+ID+1
      IF (9+IDIGIT+IEXP.gt.31) GOTO 10250
      FLOTNG=INTEG
      IF (IEXP.ne.0) THEN
      I=IABS(IEXP)
10261 CONTINUE
      J=MIN(I,NXPC)
      Y=XPC(J)
      IF (IEXP.LT.0) THEN
      FLOTNG=FLOTNG/Y
      ELSE
      FLOTNG=FLOTNG*Y
      ENDIF
      I=I-J
      IF(.NOT.(I.eq.0))GOTO 10261
10262 CONTINUE
      ENDIF
      IF (F60.ne.0) FLOTNG=SAVEN+FLOTNG/F60
      IF (IDATE.ne.0) THEN
      IF (INTERP.eq.3) INTERP=4
      IF (JCOL.lt.ICOL) DATE(IDATE+1)=FLOTNG
      FLOTNG=T2TIMF(DATE(1),DATE(2),DATE(3),DATE(4),0.,0.)/3600
      ENDIF
      INFOIN(3)=ICOL-1
10270 CONTINUE
      INTEG=NINT(MIN(MAX(FLOTNG,-2.0E9),2.0E9))
      IF (LLIM) GOTO 10150
      IF (FLOTNG.ge.FLIM(1) .and. FLOTNG.le.FLIM(2)) GOTO 10150
10250 CONTINUE
      WRITE(OUTSTR,10280)FLIM(1),FLIM(2)
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,4)
10280 FORMAT ('*** ERROR *** Number out of range ',1P,G10.3,' to ',G10.3
     *)
      INTEG=0
      FLOTNG=0
      INTERP=7
      GOTO 10150
10080 CONTINUE
      IF (IAGAIN.gt.0.and.ICOL.eq.MAXCOL) GOTO 10150
      IF (IAGAIN.eq.0) INFOIN(5)=ICOL
      MINCOL=ICOL
      MAXCOL=MIN(MAXCOL,LEN(STRNG)+ICOL-NSTRNG)
      IBRKT=0
      DO 10291 ICOL=MINCOL,MAXCOL
      CCHAR=CARDIN(ICOL:ICOL)
      CHARAC=ICHAR(CCHAR)
      CHTYPE=TYPTAB(CHARAC+1)
      GOTO (10300,10300,10310,10320,10320, 10310,10310,10330,10330,10330
     *, 10330,10340,10330,10310 ),CHTYPE 
10330 CONTINUE
      GOTO 10292
10310 CONTINUE
      IF (IBRKT.gt.0) GOTO 10300
      GOTO 10292
10340 CONTINUE
      IF (CCHAR.eq.'[') THEN
      IBRKT=IBRKT+1
      ELSEIF (CCHAR.eq.']') THEN
      IBRKT=IBRKT-1
      ENDIF
      GOTO 10300
10320 CONTINUE
      CCHAR=UPCHAR(CHARAC+1:CHARAC+1)
10300 CONTINUE
      NSTRNG=NSTRNG+1
      STRNG(NSTRNG:NSTRNG)=CCHAR
10291 CONTINUE
10292 CONTINUE
      IF (IBRKT.ne.0) THEN
      ISAVE=INFOIN(3)
      INFOIN(3)=ICOL-1
      CALL T2ERR(INFOIN,CARDIN,'*** WARNING *** Mismatched brakets []',4
     *)
      INFOIN(3)=ISAVE
      ENDIF
      IF (IAGAIN.ge.0 .and. NSTRNG.ge.3 .and. STRNG(1:2).eq.'V_') THEN
      IF (TDGETV(STRNG(ISTRNG+1:NSTRNG),FLOTNG)) THEN
      IF (INTERP.eq.0) INTERP=4
      INFOIN(3)=ICOL-1
      GOTO 10270
      ENDIF
      ELSEIF (IAGAIN.eq.-3) THEN
      I=INDEX(',ON,YES,TRUE,OFF,NO,FALSE',','//STRNG(1:NSTRNG))
      IF (I.eq.0) GOTO 10150
      IF ( (I.lt.13.and.NSTRNG.gt.1) .or. (I.eq.8)) then
      INFOIN(3)=ICOL-1
      ELSEIF ( (I.ge.13.and.NSTRNG.gt.1) .or. (I.eq.20) ) then
      LTOKEN=.not.LTOKEN
      INFOIN(3)=ICOL-1
      ENDIF
      GOTO 10150
      ELSEIF (IAGAIN.le.0 .and. NSTRNG.ge.3 .and. STRNG(1:2).eq.'S_') TH
     *EN
      IF (TDGETS(STRNG(1:NSTRNG))) THEN
      IF (INTERP.eq.0) INTERP=5
      INFOIN(3)=ICOL-1
      GOTO 10150
      ENDIF
      ENDIF
      IF(INTERP.eq.0) THEN
      INTERP=2
      ELSE
      IF (IAGAIN.eq.-1) THEN
      INFOIN(3)=ICOL-1
      IF (ICASE.eq.1) THEN
      CALL T2DNCS(STRNG(:NSTRNG))
      ELSEIF (ICASE.eq.2) THEN
      STRNG=CARDIN(INFOIN(3)-NSTRNG+1:INFOIN(3))
      ENDIF
      ELSE
      NSTRNG=0
      ENDIF
      GOTO 10150
      ENDIF
      GOTO 10032
10120 CONTINUE
      IF ( (IAGAIN.gt.0 .and. IAGAIN .ne.3) .or.IAGAIN.lt.-2) GOTO 10150
     *
      IF (IAGAIN.eq.0) INFOIN(5)=ICOL
      QUOTE=CCHAR
      IF (INTERP.eq.0) INTERP=5
      ICOL=ICOL+1
      LFIN=.false.
10351 CONTINUE
      IF(LFIN.or.ICOL.gt. MAXCOL)GOTO 10352
      INEXT=INDEX(CARDIN(ICOL:MAXCOL),QUOTE)+ICOL-1
      IF (INEXT.lt.ICOL) INEXT=MAXCOL+1
      LFIN=.true.
      IF (INEXT.lt.MAXCOL) THEN
      IF (CARDIN(INEXT+1:INEXT+1).eq.QUOTE) THEN
      LFIN=.false.
      INEXT=INEXT+1
      ENDIF
      ENDIF
      J=NSTRNG+INEXT-ICOL
      IF (J.gt.LEN(STRNG)) THEN
      J=LEN(STRNG)
      INFOIN(3)=ICOL+J-NSTRNG
      CALL T2ERR(INFOIN,CARDIN,('*** ERROR *** String too long - truncat
     *ed'),4)
      ENDIF
      IF (J.gt.NSTRNG) STRNG(NSTRNG+1:J)=CARDIN(ICOL:INEXT-1)
      NSTRNG=J
      ICOL=INEXT+1
      GOTO 10351
10352 CONTINUE
      IF (IAGAIN .eq. 3) THEN
      DO 10361 I=1,NDSETS
      CALL T2GDSET(I,1, 2 147 483 647  ,1, 2 147 483 647,ISETD,HNONE ,ST
     *RNG(:MAX(1,NSTRNG)))
      IF (ISETD(NPDATA) .gt. 1) THEN
      INTEG=I
      GOTO 10362
      ENDIF
10361 CONTINUE
10362 CONTINUE
      IF (INTEG .eq. 0) CALL T2ERR(INFOIN,CARDIN,'*** ERRROR *** No such
     * data set name',4)
      ENDIF
      GOTO 10032
10130 CONTINUE
      MINCOL=ICOL+1
      J=1
      DO 10371 ICOL=MINCOL,MAXCOL
      CHARAC=ICHAR(CARDIN(ICOL:ICOL))
      CHTYPE=TYPTAB(CHARAC+1)
      GOTO ( 10380,10380,10380,10380,10380, 10380,10380,10110,10380,1039
     *0, 10400) CHTYPE
      GOTO 10380
10400 CONTINUE
      J=J-1
      IF(J.le.0)GOTO 10372
      GOTO 10380
10390 CONTINUE
      J=J+1
10380 CONTINUE
10371 CONTINUE
10372 CONTINUE
      INFOIN(3)=ICOL
      GOTO 10031
10110 CONTINUE
      IF (IAGAIN.ne.0) GOTO 10150
      INFOIN(5)=ICOL
      INTERP=1
      INFOIN(3)=ICOL-1
      RETURN
10140 CONTINUE
      IF (CCHAR .eq. '<') THEN
      IF (IAGAIN.lt.-1)GOTO 10150
      INFOIN(3)=ICOL-1
      INFOIN(5)=ICOL
      ISAVE=INTERP
      KSAVE=KEYORD
      CALL T2EXPR(INFOIN,CARDIN,0,1)
      INTERP=ISAVE
      KEYORD=KSAVE
      IF (FLAGS(23)) THEN
      INTERP=7
      ELSE
      IF (INTERP.eq.0) INTERP=4
      GOTO 10270
      ENDIF
      ENDIF
      IF (IAGAIN.gt.0 .or. IAGAIN.lt.-1) GOTO 10150
      IF (IAGAIN.eq.0) INFOIN(5)=ICOL
      IF (CCHAR .eq. '[') GOTO 10080
      IF (INTRAC(I) .and. CCHAR .eq. '?') THEN
      CALL T2_SHOW_KEYS(KEYS)
      FLAGS(92)=.true.
      INFOIN(3)=ICOL
      GOTO 10020
      ENDIF
      IF (INTERP.eq.0) INTERP=9
      INTEG=0
      FLOTNG=0
      NSTRNG=1
      STRNG(1:2)=CCHAR
      ICOL=ICOL+1
10032 CONTINUE
      IF (NSTRNG.lt.LEN(STRNG)) STRNG(NSTRNG+1:NSTRNG+1)=' '
      INFOIN(3)=ICOL-1
      IF ((INTERP.eq.9.or.INTERP.eq.6.or.INTERP.eq.2).and.IAGAIN.eq.0) T
     *HEN
10010 CONTINUE
      MAXCHR=LEN(KEYS)
      IF (MAXCHR.le.2) THEN
      IF (INTERP.eq.2)INTERP=6
      GOTO 10150
      ENDIF
      MINCOL=1
      MAXKEY=MAXCHR-NSTRNG
      KEYORD=0
      NSTR=NSTRNG
      DO 10411 I=1,1000
      INEXT=INDEX(KEYS(MINCOL:MAXCHR),',')+MINCOL
      IF (INEXT.le.MINCOL.or.MINCOL.gt.MAXKEY) THEN
      IF (INTERP.eq.2) INTERP=6
      GOTO 10412
      ENDIF
      IF (STRNG(1:NSTRNG).eq.KEYS(MINCOL:MINCOL+NSTRNG-1)) THEN
      KEYNUM=INDEX(KEYS(MINCOL:INEXT),':')+MINCOL
      KEYEND=KEYNUM-1
      IF (KEYEND.le.MINCOL) KEYEND=INEXT-1
      INTERP=2
      IF (NSTRNG.ge.MIN(KEYEND-MINCOL,MINMCH)) THEN
      KEYORD=I
      IFIRST=KEYNUM
      ILAST=INEXT-1
      IS=1
      INTEG=0
      ID=-20
      DO 10421 J=KEYEND+1,ILAST-1
      CCHAR=KEYS(J:J)
      KEYLET=ICHAR(CCHAR)
      KEYTYP=TYPTAB(KEYLET+1)
      GO TO (10430,10440,10450,10460,10460) KEYTYP
      IAGAIN=IAGAIN+1
      IF (IAGAIN.gt.2) CALL T2STOP('*** FATAL *** in token')
      INTEG=SIGN(INTEG,IS)
      FLOTNG=INTEG
      IF (ID.gt.0) FLOTNG=FLOTNG/XPC(ID)
      IF (ID.ne.-20) THEN
      FLIM(IAGAIN)=FLOTNG
      LLIM=.false.
      ENDIF
      IS=1
      INTEG=0
      ID=-20
      GOTO 10421
10460 CONTINUE
      IF (CCHAR.eq.'S') THEN
      IAGAIN=-2
      ELSEIF (CCHAR.eq.'T') THEN
      IAGAIN=-1
      ELSEIF (CCHAR.eq.'Y') THEN
      IAGAIN=-3
      ELSEIF (CCHAR.eq.'N') THEN
      LTOKEN=.FALSE.
      IAGAIN=-3
      ELSEIF (CCHAR.eq.'F') THEN
      ICASE=IFILE_CASE
      IAGAIN=-1
      ELSEIF (CCHAR.eq.'D') THEN
      IF (IAGAIN .lt. 2) THEN
      FLIM(2)=NDSETS
      IF (IAGAIN .eq. 0) FLIM(1)=0
      ENDIF
      IAGAIN=3
      ELSE
      CALL T2STOP('Error in TOKEN')
      ENDIF
      IF (.not. LLIM) INTEG=FLIM(1)
      STRNG(1:1)=' '
      GOTO 10020
10450 CONTINUE
      IF (CCHAR.eq.'-') IS=-1
      GOTO 10421
10440 CONTINUE
      ID=0
      GOTO 10421
10430 CONTINUE
      INTEG=INTEG*10+(KEYLET-ICHAR('0'))
      ID=ID+1
10421 CONTINUE
10422 CONTINUE
      INTEG=SIGN(INTEG,IS)
      FLOTNG=INTEG
      IF (ID.gt.0) FLOTNG=FLOTNG/XPC(ID)
      IF (NSTRNG.eq.KEYEND-MINCOL) GOTO 10470
      NSTR=KEYEND-MINCOL
      STRNG(1:NSTR+1)=KEYS(MINCOL:KEYEND-1)
      DO 10481 II=1,10
      INEXT=INDEX(KEYS(MINCOL:MAXCHR),','//STRNG(1:NSTRNG))+MINCOL
      IF(INEXT.eq.MINCOL)GOTO 10482
      MINCOL=INEXT
      INEXT=INDEX(KEYS(MINCOL:MAXCHR),',')+MINCOL
      KEYNUM=INDEX(KEYS(MINCOL:INEXT),':')+MINCOL
      KEYEND=KEYNUM-1
      IF (KEYEND.le.MINCOL) KEYEND=INEXT-1
      IF (KEYS(IFIRST:ILAST).ne.KEYS(KEYNUM:INEXT-1)) THEN
      J=MIN(NSTR+KEYEND-MINCOL+1,LEN(STRNG))
      STRNG(NSTR+1:LEN(STRNG))=KEYS(MINCOL-1:KEYEND-1)
      NSTR=J
      INTERP=8
      ENDIF
10481 CONTINUE
10482 CONTINUE
      NSTRNG=NSTR
10470 CONTINUE
      IF (INTERP.eq.8) THEN
      CALL T2ERR(INFOIN,CARDIN,' ',5)
      INTERP=2
      ENDIF
      IF (IAGAIN.ne.0) GOTO 10020
      GOTO 10150
      ENDIF
      ENDIF
      MINCOL=INEXT
10411 CONTINUE
10412 CONTINUE
      ENDIF
10150 CONTINUE
      IF (INPFIL.ne.9.or.JOUFIL.eq.0.or.INFOIN(2).lt.-1) RETURN
      LSTJOU=NSTJOU
      MAXJOU=INFOIN(3)
      IF(MAXJOU.ge.MINJOU) THEN
      IF (LSTJOU+1.ge.LEN(STJOU)) RETURN
      NSTJOU=MIN(NSTJOU+MAXJOU-MINJOU+1,LEN(STJOU))
      STJOU(LSTJOU+1:NSTJOU)= CARDIN(MINJOU:MAXJOU)
      ENDIF
      END
      SUBROUTINE T2_SHOW_KEYS(KEYS)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      CHARACTER*(*) KEYS
      CHARACTER*30 CTEMP
      INTEGER I,J,K,JMIN,JMAX,ITYPE,IMIN,IMAX,IDEF
      INTEGER MAXTEST 
      PARAMETER (MAXTEST=6)
      CHARACTER*2 CTEST(MAXTEST)
      CHARACTER*12 CTYPE(7)
      DATA CTEST/':Y',':N',':T',':S',':D',':F'/
      DATA CTYPE/' ','=Number','=Logical','=Alpha','="String"'  ,
     *'=Data set','=File name'/
      JMIN=1
      WRITE (6,*)'  Options:'
      DO 10491 I=1,1000
      IF(LTRAP)GOTO 10492
      JMAX=INDEX(KEYS(JMIN:),',')+JMIN
      IF (JMAX.gt.JMIN+1) THEN
      ITYPE=1
      J=JMAX-1
      K=INDEX(KEYS(JMIN:J),':')
      IF (K.ne.0) THEN
      J=JMIN+K-1
      IMIN=JMIN+K-1
      IMAX=IMIN
      IDEF=IMIN
      K=INDEX(KEYS(IMIN+1:JMAX-1),':')
      IF (K.ne.0) THEN
      ITYPE=2
      IMAX=IMIN+K
      IDEF=IMAX
      K=INDEX(KEYS(IMAX+1:JMAX-1),':')
      IF (K.ne.0) IDEF=IMAX+K
      ENDIF
      DO 10501 K=1,MAXTEST
      IF (INDEX(KEYS(J:JMAX-2),CTEST(K)).ne.0) THEN
      ITYPE=2+K
      IF (ITYPE .gt. 3) ITYPE=ITYPE-1
      GOTO 10502
      ENDIF
10501 CONTINUE
10502 CONTINUE
      ENDIF
      IF (ITYPE .eq. 3) THEN
      WRITE(6,*) '   ',KEYS(JMIN:J-1),' ',CTYPE(ITYPE), ' Default',KEYS(
     *IDEF:MAX(IDEF,JMAX-2))
      ELSEIF (ITYPE .eq. 2) THEN
      WRITE(6,*) '   ',KEYS(JMIN:J-1),' ',CTYPE(ITYPE), ' Min',KEYS(IMIN
     *:MAX(IMIN,IMAX-1)), ' Max',KEYS(IMAX:MAX(IMAX,IDEF-1)), ' Default'
     *,KEYS(IDEF:MAX(IDEF,JMAX-2))
      ELSE
      WRITE(6,*) '   ',KEYS(JMIN:J-1),' ',CTYPE(ITYPE)
      ENDIF
      ELSEIF (JMAX.eq.JMIN) THEN
      GOTO 10492
      ENDIF
      JMIN=JMAX
10491 CONTINUE
10492 CONTINUE
      END
      SUBROUTINE TOKRED(INFOIN,CARDIN,LENG,INFILE,FORMT)
      IMPLICIT NONE
      INTEGER INFOIN(10),LENG,INFILE
      CHARACTER*(*) CARDIN,FORMT
      EXTERNAL TOKDAT
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*80 PRMP1, PRMP2
      INTEGER NPRMP1, NPRMP2
      COMMON /T2PRMP/NPRMP1, PRMP1, NPRMP2, PRMP2
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      INTEGER ISTAT,CHARAC,MAXCOL,ICOL,LENGTH,I,J,IMIN,IMAX
      LOGICAL INTRAC,LOPEN,LNTRAC,TDINIT
      DATA LOPEN,LNTRAC,TDINIT/.false.,.true.,.false./
      LENGTH=MIN(LEN(CARDIN),LENG)
      IF (INFOIN(1).LT.0) GO TO 10510
      NSTJOU=0
      LSTJOU=0
      IF (INFOIN(9).gt.0) THEN
      INFOIN(3)=INFOIN(8)
      INFOIN(9)=0
      ELSE
      INFOIN(9)=0
10531 CONTINUE
      IF (INFOIN(3).GE.INFOIN(1)) THEN
      IF (INFOIN(2) .lt. 0) THEN
      INFOIN(1)=-1
      RETURN
      ENDIF
      IMIN=1
10541 CONTINUE
      IF (TDINIT) THEN
      READ(98,'(A)',END=10551) CARDIN(IMIN:)
      GOTO 10558
10551 CLOSE(98)
      TDINIT=.FALSE.
      GOTO 10541
10558 CONTINUE
      ELSE
      IF (LNTRAC .and.INFILE .eq.9) THEN
      FLAGS(99)=.true.
      IF (INTRAC(0)) THEN
      IF (IMIN .eq. 1) THEN
      CALL READPR(PRMP1(1:NPRMP1),CARDIN(IMIN:),LENGTH)
      ELSE
      CALL READPR('_'//PRMP1(1:NPRMP1),CARDIN(IMIN:),LENGTH)
      ENDIF
      IF(LENGTH.lt.0) GOTO 10550
      LENGTH=LENGTH+IMIN-1
      ELSE
      READ(*,'(A)',END=10550) CARDIN(IMIN:)
      J=IMIN-1
      DO I=IMIN,LEN(CARDIN)  ! LENGTH
      IF (CARDIN(I:I).NE.' ') J=MAX(J,I)
      ENDDO
      LENGTH=J
      ENDIF
      ELSE
      FLAGS(99)=.false.
      READ (INFILE,FORMT,END=10550)  (CARDIN(J:J),J=IMIN,LENGTH)
      ENDIF
      ENDIF
      IF(INFILE.le.NINMAX) NINP(INFILE)=NINP(INFILE)+1
      DO 10561 I=LENGTH,IMIN,-1
      IF(CARDIN(I:I).ne.' ')GOTO 10562
10561 CONTINUE
10562 CONTINUE
      IMAX=I
      IF (IMAX .le. 0) THEN
      IMAX=1
      CARDIN(1:1)=' '
      ENDIF
      IF (CARDIN(IMAX:IMAX) .eq. '-' .OR.
     *    CARDIN(IMAX:IMAX) .eq. '\') THEN
      CARDIN(IMAX:IMAX)=' '
      IMIN=IMAX
      GOTO 10541
      ENDIF
      IF(.NOT.(CARDIN(1:2).ne.'//'))GOTO 10541
10542 CONTINUE
      DO 10571 I=1,IMAX
      J=ICHAR(CARDIN(I:I))+1
      CARDIN(I:I)=OKCHAR(J:J)
10571 CONTINUE
10572 CONTINUE
      INFOIN(1)=IMAX
      INFOIN(2)=0
      INFOIN(3)=0
      INFOIN(6)=0
      INFOIN(7)=INFOIN(7)+1
      INFOIN(10)=0
      GOTO 10532
      ELSE
      CALL TOKEN(INFOIN,CARDIN,';')
      IF (INTERP.eq.1) THEN
      INFOIN(3)=INFOIN(3)+1
      IF(INFOIN(3).lt.INFOIN(1))GOTO 10532
      ENDIF
      ENDIF
      GOTO 10531
10532 CONTINUE
      ENDIF
      INFOIN(8)=INFOIN(3)
      INFOIN(4)=0
      INFOIN(5)=0
      INFOIN(6)=0
      NSTJOU=0
      LSTJOU=0
      RETURN
10550 CONTINUE
      IF (INFILE .gt.9) THEN
      CLOSE(UNIT=INFILE)
      INFILE=INFILE-1
      IF(INFILE.eq.9.and.LNTRAC ) CALL TXVOID
      INFOIN(1)=1
      CARDIN=' '
      ELSE
      INFOIN(1)=-1
      ENDIF
10510 CONTINUE
      IF (INFOIN(1).EQ.0) THEN
      CALL T2ERR(INFOIN,CARDIN,('*** WARNING *** No input file'),4)
      INFOIN(1)=-1
      INFOIN(3)=0
      INFOIN(4)=0
      INFOIN(5)=0
      INFOIN(9)=0
      INFOIN(10)=0
      ENDIF
      RETURN
      ENTRY SET_LNTRAC
      LNTRAC=.FALSE.
      RETURN
      ENTRY SET_TDINIT
      TDINIT=.TRUE.
      RETURN
      END
      SUBROUTINE T2UPCS(STRNG)
      IMPLICIT NONE
      CHARACTER STRNG*(*)
      INTEGER I,J
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      DO 10581 I=1,LEN(STRNG)
      J=1+ICHAR(STRNG(I:I))
      STRNG(I:I)=UPCHAR(J:J)
10581 CONTINUE
10582 CONTINUE
      END
      SUBROUTINE T2DNCS(STRNG)
      IMPLICIT NONE
      CHARACTER STRNG*(*)
      INTEGER I,J
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      DO 10591 I=1,LEN(STRNG)
      J=1+ICHAR(STRNG(I:I))
      STRNG(I:I)=DNCHAR(J:J)
10591 CONTINUE
10592 CONTINUE
      RETURN
      END
      SUBROUTINE T2TOKK(INFOIN,TOKEN,KEYS)
      IMPLICIT NONE
      EXTERNAL TOKDAT
      INTEGER MINMCH 
      PARAMETER (MINMCH=2)
      CHARACTER*1 CCHAR
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      INTEGER KEYLET
      INTEGER CHTYPE,KEYTYP
      INTEGER INFOIN(10)
      CHARACTER*(*) TOKEN,KEYS
      CHARACTER*200 TOKX 
      INTEGER ICOL ,NTOKEN ,MAXCHR ,MINCOL, MAXKEY
      INTEGER I ,J,INEXT ,KEYNUM, KEYEND ,IFIRST ,ILAST ,IS ,ISTR1 ,ISTR
     *2
      IF (TOKEN(1:1).eq.CHAR(0)) THEN
      RETURN
      ENDIF
      INFOIN(1)=6
      NTOKEN=LEN(TOKEN)
      MAXCHR=LEN(KEYS)
      IF (MAXCHR.le.1.or.NTOKEN.lt.1) GOTO 10150
      MINCOL=1
      MAXKEY=MAXCHR-NTOKEN
      INFOIN(2)=0
      DO 10601 I=1,1000
      INEXT=INDEX(KEYS(MINCOL:MAXCHR),',')+MINCOL
      IF (INEXT.le.MINCOL.or.MINCOL.gt.MAXKEY) THEN
      GOTO 10602
      ENDIF
      IF (TOKEN.eq.KEYS(MINCOL:MINCOL+NTOKEN-1)) THEN
      INFOIN(1)=2
      KEYNUM=INDEX(KEYS(MINCOL:INEXT),':')+MINCOL
      KEYEND=KEYNUM-1
      IF (KEYEND.le.MINCOL) KEYEND=INEXT-1
      IF (NTOKEN.ge.MIN(KEYEND-MINCOL,MINMCH)) THEN
      INFOIN(2)=I
      IFIRST=KEYNUM
      ILAST=INEXT-1
      IS=1
      INFOIN(3)=0
      DO 10611 J=KEYEND+1,ILAST-1
      CCHAR=KEYS(J:J)
      KEYLET=ICHAR(CCHAR)
      KEYTYP=TYPTAB(KEYLET+1)
      GO TO (10620,10630,10640) KEYTYP
10630 CONTINUE
      GOTO 10612
10640 CONTINUE
      IF (CCHAR.eq.'-') IS=-1
      GOTO 10611
10620 CONTINUE
      INFOIN(3)=INFOIN(3)*10+(KEYLET-ICHAR('0'))
10611 CONTINUE
10612 CONTINUE
      INFOIN(3)=SIGN(INFOIN(3),IS)
      IF (NTOKEN.eq.KEYEND-MINCOL) GOTO 10150
      ISTR1=MINCOL
      ISTR2=KEYEND-1
10651 CONTINUE
      TOKX = ','//TOKEN 
      INEXT=INDEX(KEYS(MINCOL:MAXCHR),TOKX(:LEN(TOKEN)+1))+MINCOL
      IF(INEXT.le.MINCOL)GOTO 10652
      MINCOL=INEXT
      INEXT=INDEX(KEYS(MINCOL:MAXCHR),',')+MINCOL
      KEYNUM=INDEX(KEYS(MINCOL:INEXT),':')+MINCOL
      KEYEND=KEYNUM-1
      IF (KEYEND.le.MINCOL) KEYEND=INEXT-1
      IF (KEYS(IFIRST:ILAST).ne.KEYS(KEYNUM:INEXT-1)) THEN
      TOKX = '*** ERROR *** '//TOKEN//' matches both '//  KEYS(ISTR1:IST
     *R2)//','//KEYS(MINCOL-1:KEYEND-1)
      CALL T2ERR(0,' ',TOKX(:LEN(TOKEN)+31+ISTR2-ISTR1+KEYEND-MINCOL),3)
     *
      INFOIN(1)=8
      GOTO 10652
      ENDIF
      GOTO 10651
10652 CONTINUE
      GOTO 10602
      ENDIF
      ENDIF
      MINCOL=INEXT
10601 CONTINUE
10602 CONTINUE
10150 CONTINUE
      END
      SUBROUTINE T2GSET(ISET,NMIN,NMAX,NINCR0,NINCR1,NINCR2,IBTYPE)
      IMPLICIT NONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      INTEGER J,ISET,NMIN,NMAX,NINCR0,NINCR1,NINCR2,IBTYPE
      NMAX=-1
      NMIN=0
      IF (ISET.gt.NDSETS) RETURN
      IF (ISET.eq.0) THEN
      IBTYPE=IBLKTP
      NMIN=IVRPTR(8)
      IF (IBTYPE.eq.1) THEN
      NMAX=IVRPTR(13)
      NINCR0=NINCR
      ELSE
      NMAX=NMIN+NMESH0*NMESH1*NMESH2
      NINCR0=NMESH0
      NINCR1=NMESH1
      NINCR2=NMESH2
      ENDIF
      ELSEIF (ISET.gt.0) THEN
      NMAX=IVRPTR(14)
      DO 10661 J=1,ISET
      NMIN=NMAX
      NMAX=DATBUF(NMIN+2)+NMIN
10661 CONTINUE
10662 CONTINUE
      IF (DATBUF(NMIN).ge.2.0E35) THEN
      IBTYPE=2
      NMIN=NMIN+NINT(DATBUF(NMIN+1))
      NINCR0=NINT(DATBUF(NMIN-3))
      NINCR1=NINT(DATBUF(NMIN-2))
      NINCR2=NINT(DATBUF(NMIN-1))
      NMAX=NMIN+NINCR0*NINCR1*NINCR2-1
      ELSE
      IBTYPE=1
      NMIN=NMIN+NINT(DATBUF(NMIN+1))
      NINCR0=NINCR
      NINCR1=0
      NINCR2=0
      NMAX=NMAX-1
      ENDIF
      ENDIF
      END
      LOGICAL FUNCTION TDGETS(CARDIN)
      IMPLICIT NONE
      CHARACTER *(*) CARDIN
      CHARACTER*128 CARDX 
      CHARACTER*11 FORMT 
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      LOGICAL TDGETV, T2_GET_ENV
      REAL VALUE
      INTEGER I ,J
      IF (TDGETV(CARDIN,VALUE)) THEN
      I=ISIGFG
      IF (I.le.0) I=6
      WRITE (FORMT, '(A8,I2.2,A1)' ) '(1P,G20.', I , ')' 
      WRITE( STRNG(1:20) , FORMT ) VALUE
      I=INDEX(STRNG(1:20),'E+00')
      IF (I.gt.0) STRNG(I:I+3)=' '
      CALL T2SQEZ(STRNG(1:20),NSTRNG)
      TDGETS=.true.
      ELSE
      IF ( INDEX(CARDIN,'S_SY') .eq.1 ) THEN
      IF (TDGETV(CARDIN,VALUE)) THEN
      I=NINT(VALUE)
      J=I/256
      I=I-J*256
      STRNG(1:3)=' '
      CALL SYMTXT(VALUE,STRNG(1:3))
      NSTRNG=2
      TDGETS=.true.
      RETURN
      ENDIF
      ENDIF
      CARDX = CARDIN 
      TDGETS=T2_GET_ENV('TD_'//CARDX(:LEN(CARDIN)),STRNG,NSTRNG)
      ENDIF
      END
      LOGICAL FUNCTION TDGETV(CARDIN,VALUE)
      IMPLICIT NONE
      CHARACTER*(*) CARDIN
      REAL VALUE 
      CHARACTER*128 CARDX 
      CHARACTER*5 FORMT 
      REAL HNONE
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER MAXTER, MAX_FIT_LIM 
      PARAMETER ( MAXTER = 20 )
      PARAMETER ( MAX_FIT_LIM = 12 )
      DOUBLE PRECISION COFF(MAXTER), DCOFF(MAXTER), ACOEF(MAXTER)
      DOUBLE PRECISION CHISQR, FTEST, XF(MAXTER), DACOEF(MAXTER), RMUL
      DOUBLE PRECISION EMATRX(MAXTER,MAXTER),D_CHISQ
      REAL XOFF, FIT_LIM(3,MAX_FIT_LIM)
      INTEGER NTERMS, IFIT, NFIT, NPFIT, NCOFF, NEXTER, NEXPR(MAXTER+1)
      INTEGER I_FIT(2,MAXTER), IDEP_FIT
      INTEGER N1_FIT, N2_FIT, N3_FIT, N4_FIT, NS1_FIT, NS2_FIT
      INTEGER N_FIT_LIM, IMESH_FIT
      LOGICAL LCOF1(MAXTER), LCOFF(MAXTER), LFIT(MAXTER), LXLOG, LYLOG
      LOGICAL LDY_FIT
      COMMON /T2FITS/ COFF, DCOFF, ACOEF, CHISQR, FTEST, XF, DACOEF, RMU
     *L, EMATRX, D_CHISQ, XOFF, FIT_LIM, NTERMS, IFIT, NFIT, NPFIT, NCOF
     *F, NEXTER, NEXPR, I_FIT, IDEP_FIT,  N1_FIT, N2_FIT, N3_FIT, N4_FI
     *T, NS1_FIT, NS2_FIT, N_FIT_LIM, IMESH_FIT, LCOF1, LCOFF, LFIT, LXL
     *OG, LYLOG, LDY_FIT 
      CHARACTER*80 FITSTR
      CHARACTER*(512+8+2*MAXTER) SEXPR
      COMMON /T2FITT/FITSTR, SEXPR
      INTEGER NSETD 
      PARAMETER (NSETD=19+9)
      INTEGER ISETD(NSETD),NINCR0,NINCR1,NINCR2,IBTYPE
      INTEGER I1,I2,I3,I4,I5,I6,I7,IM,NP,NL,IENDAT,IBGDAT
      INTEGER I_NDX,I_NDY,I_NDZ
      INTEGER N_SYMBOL 
      INTEGER N_XDATA 
      INTEGER N_DXDATA 
      INTEGER N_NDXDATA 
      INTEGER N_YDATA 
      INTEGER N_DYDATA 
      INTEGER N_NDYDATA 
      INTEGER N_ZDATA 
      INTEGER N_DZDATA 
      INTEGER N_NDZDATA 
      INTEGER N_UDATA 
      INTEGER N_DUDATA 
      INTEGER N_NDUDATA 
      INTEGER N_VDATA 
      INTEGER N_DVDATA 
      INTEGER N_NDVDATA 
      INTEGER N_WDATA 
      INTEGER N_DWDATA 
      INTEGER N_NDWDATA 
      INTEGER NCMAX 
      INTEGER NCSIZE 
      INTEGER NBTYPE 
      INTEGER NINDAT 
      INTEGER NSDATA 
      INTEGER NXDATA 
      INTEGER NDXDATA 
      INTEGER NNDXDATA 
      INTEGER NYDATA 
      INTEGER NDYDATA 
      INTEGER NNDYDATA 
      INTEGER NZDATA 
      INTEGER NDZDATA 
      INTEGER NNDZDATA 
      INTEGER NPDATA 
      INTEGER NLDATA 
      INTEGER NMDATA 
      INTEGER NBGDAT 
      INTEGER NENDAT 
      PARAMETER (N_SYMBOL=1) 
      PARAMETER (N_XDATA=2) 
      PARAMETER (N_DXDATA=3) 
      PARAMETER (N_NDXDATA=4) 
      PARAMETER (N_YDATA=5) 
      PARAMETER (N_DYDATA=6) 
      PARAMETER (N_NDYDATA=7) 
      PARAMETER (N_ZDATA=8) 
      PARAMETER (N_DZDATA=9) 
      PARAMETER (N_NDZDATA=10) 
      PARAMETER (N_UDATA=11) 
      PARAMETER (N_DUDATA=12) 
      PARAMETER (N_NDUDATA=13) 
      PARAMETER (N_VDATA=14) 
      PARAMETER (N_DVDATA=15) 
      PARAMETER (N_NDVDATA=16) 
      PARAMETER (N_WDATA=17) 
      PARAMETER (N_DWDATA=18) 
      PARAMETER (N_NDWDATA=19) 
      PARAMETER (NCMAX=6) 
      PARAMETER (NCSIZE=3) 
      PARAMETER (NBTYPE=1) 
      PARAMETER (NINDAT=2) 
      PARAMETER (NSDATA=5) 
      PARAMETER (NXDATA=NSDATA+1) 
      PARAMETER (NDXDATA=NXDATA+1) 
      PARAMETER (NNDXDATA=NXDATA+2) 
      PARAMETER (NYDATA=NXDATA+NCSIZE) 
      PARAMETER (NDYDATA=NYDATA+1) 
      PARAMETER (NNDYDATA=NYDATA+2) 
      PARAMETER (NZDATA=NYDATA+NCSIZE) 
      PARAMETER (NDZDATA=NZDATA+1) 
      PARAMETER (NNDZDATA=NZDATA+2) 
      PARAMETER (NPDATA=NSDATA+19) 
      PARAMETER (NLDATA=NPDATA+1) 
      PARAMETER (NMDATA=NLDATA+1) 
      PARAMETER (NBGDAT=NMDATA+1) 
      PARAMETER (NENDAT=NBGDAT+1) 
      EQUIVALENCE (IBTYPE,ISETD(NBTYPE))
      EQUIVALENCE (NINCR0,ISETD(NINDAT))
      EQUIVALENCE (NINCR1,ISETD(NINDAT+1))
      EQUIVALENCE (NINCR2,ISETD(NINDAT+2))
      EQUIVALENCE (I7,ISETD(NSDATA))
      EQUIVALENCE (I1,ISETD(NXDATA))
      EQUIVALENCE (I4,ISETD(NDXDATA))
      EQUIVALENCE (I2,ISETD(NYDATA))
      EQUIVALENCE (I5,ISETD(NDYDATA))
      EQUIVALENCE (I3,ISETD(NZDATA))
      EQUIVALENCE (I6,ISETD(NDZDATA))
      EQUIVALENCE (I_NDX,ISETD(NNDXDATA))
      EQUIVALENCE (I_NDY,ISETD(NNDYDATA))
      EQUIVALENCE (I_NDZ,ISETD(NNDZDATA))
      EQUIVALENCE (NP,ISETD(NPDATA))
      EQUIVALENCE (NL,ISETD(NLDATA))
      EQUIVALENCE (IM,ISETD(NMDATA))
      EQUIVALENCE (IBGDAT,ISETD(NBGDAT))
      EQUIVALENCE (IENDAT,ISETD(NENDAT))
      INTEGER MINTUPL , MAXTUPL , SIZTUPL 
      PARAMETER (MINTUPL=-6) 
      PARAMETER (MAXTUPL=128) 
      PARAMETER (SIZTUPL=MAXTUPL-MINTUPL+1) 
      CHARACTER*8 CTUPL(MINTUPL:MAXTUPL) 
      REAL VTUPL(MINTUPL:MAXTUPL,4),LIMTUPL(MINTUPL:MAXTUPL,2)
      EQUIVALENCE (VTUPL(1,3),LIMTUPL(1,1))
      COMMON /T2HBOOK/VTUPL
      COMMON /T2HBOOKS/CTUPL
      INTEGER LISTPT,NPTMAX,NDSETS
      REAL DATBUF(10248)
      COMMON /T2XPNT/ LISTPT,NPTMAX,NDSETS,DATBUF
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      LOGICAL T2_GET_ENV,ISTAT
      INTEGER T2_HIST_ID
      INTEGER IBRA,IKET,IMIN,IMAX,JMIN,JMAX,NMIN,NMAX
      INTEGER IJUMP1,IJUMP2,INLEN
      INTEGER I,J,K
      REAL CPULIM,CPUTIM,RELTIM
      REAL STATS(3,3),VALSTR
      EQUIVALENCE (OUTSTR,VALSTR)
      EQUIVALENCE (STATS,H2STAT)
      CHARACTER TKSTR*887
      DATA HNONE /-666.666/
      TDGETV=.true.
      MAXSTR=LEN(CARDIN)
      IBRA=INDEX(CARDIN,'[')
      IF (IBRA.gt.0) MAXSTR=IBRA-1
      IF (MAXSTR.eq.3) GOTO 10670
      IF (MAXSTR.lt.3) THEN
      TDGETV=.false.
      RETURN
      ENDIF
      IF (CARDIN(3:3).ne.CHAR(0)) THEN
      DO 10681 I=1,3
      IINDEX(I)=0
10681 CONTINUE
10682 CONTINUE
      IF (IBRA.gt.0) THEN
      IBRA=IBRA+1
      IKET=INDEX(CARDIN,']')-1
      IF (IKET.le.0) THEN
      IKET=LEN(CARDIN)
      ELSEIF (IKET.ne.LEN(CARDIN)-1) THEN
      GOTO 10690
      ENDIF
      IF (IKET.ge.IBRA) THEN
      IMIN=IBRA
      DO 10701 I=1,3
      IMAX=INDEX(CARDIN(IMIN:IKET),',')
      IF (IMAX.le.0) THEN
      IMAX=IKET
      ELSE
      IMAX=IMAX+IMIN-2
      ENDIF
      IF (IMAX.ge.IMIN) THEN
      WRITE ( FORMT , '(A2,I2.2,A1)' ) '(I' , 1+IMAX-IMIN , ')' 
      READ (CARDIN(IMIN:IMAX),FORMT,ERR=10710)K 
      IINDEX(I)=K
      ENDIF
      IMIN=IMAX+2
      IF(IMIN.gt.IKET)GOTO 10702
10701 CONTINUE
10702 CONTINUE
      ENDIF
      ENDIF
      ENDIF
      I1=IINDEX(1)
      I2=IINDEX(2)
      I3=IINDEX(3)
      GOTO 10721
10750 CONTINUE
      IF (INFOTOKK(3).gt.100) THEN
      IF (.not.FLAGS(91).and. INFOTOKK(3).gt.200) THEN
      CALL T2ERR(0,' ','*** ERROR *** Spherical coordinates not ON',3)
      GOTO 10690
      ELSEIF (.not.FLAGS(27)) THEN
      CALL T2ERR(0,' ','*** ERROR *** Polar coordinates not ON',3)
      GOTO 10690
      ENDIF
      INFOTOKK(3)=MOD(INFOTOKK(3),100)
      ENDIF
      I=I_VORDER(INFOTOKK(3),1)
      CALL T2GSET(I3,NMIN,NMAX,NINCR0,NINCR1,NINCR2,IBTYPE)
      IF (NMIN.le.0) GOTO 10710
      IF (IBTYPE.eq.1) THEN
      IF (I2.lt.0 .or. I2.gt.1) goto 10710
      I=IVPTR(I)
      IF (I.le.0) goto 10760
      IF (I1.eq.0) I1=(ICPOIN(1)-IVRPTR(8))/NINCR+1
      I1=NMIN+NINCR0*(I1-1)
      IF (I1.lt.NMIN .or. I1.gt.NMAX) GOTO 10710
      VALUE=DATBUF(I1+I-1)
      ELSEIF (IBTYPE.eq.2 ) THEN
      J=MOD(I-N_XDATA,NCSIZE)
      IF (J .lt. 0 .or. J .gt. NINCR0) goto 10760
      IF (I .lt. n_XDATA) goto 10760
      I4=(I-N_XDATA)/NCSIZE +1
      IJUMP2=0
      IJUMP1=1
      IMAX=NINCR1
      I=ICPOIN(1)-IVRPTR(8)
      IF (I4.eq.MESH1) THEN
      IF (I1.eq.0) I1=MOD(I,NINCR1*NINCR0)/NINCR0
      ELSEIF (I4.eq.MESH2) THEN
      IF (I1.eq.0) I1=I/(NINCR1*NINCR0)
      IMAX=NINCR2
      IJUMP1=NINCR1
      ELSEIF (I4.eq.MESH3) THEN
      IF (I1.eq.0) I1=MOD(I,NINCR1*NINCR0)/NINCR0
      IF (I2.eq.0) I2=I/(NINCR1*NINCR0)
      IJUMP2=NINCR1
      IF (I2.le.0.or.I2.ge.NINCR2) goto 10710
      ELSE
      GOTO 10760
      ENDIF
      IF (I1.le.0.or.I1.ge.IMAX) GOTO 10710
      VALUE=DATBUF(NMIN+NINCR0*(I1*IJUMP1+I2*IJUMP2)+J)
      ELSE
      GOTO 10760
      ENDIF
      GOTO 10722
10770 CONTINUE
      VALUE=INPFIL-9
      GOTO 10722
10780 CONTINUE
      VALUE=NDSETS
      GOTO 10722
10790 CONTINUE
      I=INFOTOKK(3)/10
      J=MOD(INFOTOKK(3),10)
      VALUE=MAX(1,INT(ABS(XYPART(J,I))))
      GOTO 10722
10800 CONTINUE
      VALUE=MAX(1,INT(ABS(XYPART(1,1))))+  MAX(0,INT(ABS(XYPART(2,1)))-1
     *)*MAX(1,INT(ABS(XYPART(1,2))))
      GOTO 10722
10810 CONTINUE
      VALUE=NCSETS
      GOTO 10722
10820 CONTINUE
      VALUE=T2_HIST_ID()
      GOTO 10722
10830 CONTINUE
      VALUE=NCCOL
      GOTO 10722
10840 CONTINUE
      VALUE=NCROW
      GOTO 10722
10850 CONTINUE
      VALUE=MAX(1,INT(ABS(XYPART(1,2))))*MAX(1,INT(ABS(XYPART(2,2))))
      GOTO 10722
10860 CONTINUE
      VALUE=NMESH1
      GOTO 10722
10870 CONTINUE
      VALUE=NMESH2
      GOTO 10722
10880 CONTINUE
      VALUE=NPLOTS
      GOTO 10722
10890 CONTINUE
      IF (I1.lt.MINTUPL.or.I1.gt.MAXTUPL) goto 10710
      IF (I2.lt.0 .or. I2 .gt. 3) goto 10710
      IF (I2.eq.0) THEN
      I2=1
      ELSE
      I2=I2+2
      ENDIF
      VALUE=VTUPL(I1,I2)
      GOTO 10722
10900 CONTINUE
      VALUE=TTHETA
      GOTO 10722
10910 CONTINUE
      VALUE=TPHI
      GOTO 10722
10920 CONTINUE
      VALUE=SCRD
      GOTO 10722
10930 CONTINUE
      VALUE=EYEDIS
      GOTO 10722
10940 CONTINUE
      VALUE=EYESEP
      GOTO 10722
10950 CONTINUE
      IF (DATDAT(1,1).eq.HNONE) THEN
      CALL TDSTAT(HNONE,1, 2 147 483 647, 1, 2 147 483 647,1,NDSETS,.TRU
     *E.,2,'*')
      ENDIF
      I=INFOTOKK(3)/10
      J=MOD(INFOTOKK(3),10)
      VALUE=DATDAT(J,I)
      GOTO 10722
10960 CONTINUE
      IF (I1.eq.0) I1=LEVREP
      IF (I1.lt.0) I1=LEVREP-I1
      IF (I1.le.0 .or. I1.gt.MAXREP) GOTO 10710
      VALUE=IREPCT(I1)
      GOTO 10722
10970 CONTINUE
      VALUE=CPULIM(0.0)
      IF (VALUE.le.0) VALUE=9999.
      GOTO 10722
10980 CONTINUE
      VALUE=CPUTIM(0.0)
      GOTO 10722
10990 CONTINUE
      VALUE=RELTIM(0.0)
      GOTO 10722
11000 CONTINUE
      VALUE=CHISQR
      GOTO 10722
11010 CONTINUE
      VALUE=FTEST
      GOTO 10722
11020 CONTINUE
      VALUE=NTERMS
      GOTO 10722
11030 CONTINUE
      VALUE=NFIT
      GOTO 10722
11040 CONTINUE
      VALUE=NPFIT
      GOTO 10722
11050 CONTINUE
      I1=I1+1
      IF (I1.gt.MAXTER.or.I1.le.0) GOTO 10710
      VALUE=0.0
11060 GOTO (11070,11080,11090,11100),INFOTOKK(3)
11070 CONTINUE
      VALUE=COFF(I1)
      GOTO 11062
11080 CONTINUE
      VALUE=DCOFF(I1)
      GOTO 11062
11090 CONTINUE
      IF (LFIT(I1)) VALUE=1
      GOTO 11062
11100 CONTINUE
      IF (LCOFF(I1)) VALUE=1
      GOTO 11062
11062 CONTINUE
      GOTO 10722
11110 CONTINUE
      VALUE=H2STAT(10)
      GOTO 10722
11120 CONTINUE
      VALUE=H2STAT(11)
      GOTO 10722
11130 CONTINUE
      VALUE=H2STAT(12)
      GOTO 10722
11140 CONTINUE
      IF (I1.lt.0 .or. I1.gt.3 .or. I2.lt.0 .or. I2.gt.3) goto 10710
      IF (I1.eq.0) THEN
      IMIN=1
      IMAX=3
      ELSE
      IMIN=I1
      IMAX=I1
      ENDIF
      IF (I2.eq.0) THEN
      JMIN=1
      JMAX=3
      ELSE
      JMIN=I2
      JMAX=I2
      ENDIF
      VALUE=0
      DO 11151 J=JMIN,JMAX
      DO 11161 I=IMIN,IMAX
      VALUE=VALUE+STATS(I,J)
11161 CONTINUE
11162 CONTINUE
11151 CONTINUE
11152 CONTINUE
      GOTO 10722
11170 CONTINUE
      IF (I1.lt.0.or.I1.gt.8) GOTO 10710
      I1=MAX(I1,1)
      VALUE=FMARKER(INFOTOKK(3),I1)
      GOTO 10722
10730 GOTO ( 10750,10750,10750,10750,10750,10750,10750,10750,10750,10750
     *,10750,10750,10750,10750,10750,10750,10750,10750,10750,10750,10750
     *,10750,10750,10750,10750,10750,10750,10750,10770,10780,10790,10790
     *,10790,10790,10790,10800,10810,10820,10830,10830,10840,10850,10860
     *,10870,10880,10890,10900,10910,10920,10930,10940,10950,10950,10950
     *,10950,10950,10950,10950,10950,10950,10950,10950,10950,10950,10950
     *,10950,10960,10970,10980,10990,11000,11010,11020,11030,11040,11050
     *,11050,11050,11050,11110,11120,11130,11140,11170,11170,11170,10725
     *),INFOTOKK(2)
10725 CONTINUE
10670 CONTINUE
      CARDX = 'TD_V_'//CARDIN(3:MAXSTR) 
      ISTAT=T2_GET_ENV( CARDX(:MAXSTR+3),OUTSTR,inlen)
      IF (ISTAT.and.INLEN.gt.0) THEN
      IF ( INLEN.ge.5 .and. OUTSTR(5:5).eq.CHAR(127)) THEN
      VALUE=VALSTR
      ELSE
      WRITE ( FORMT , '(A2,I2.2,A1)' ) '(G' , INLEN , ')' 
C     READ(OUTSTR(1:INLEN),FORMT,ERR=11180) VALUE
      READ(OUTSTR(1:INLEN),  *  ,ERR=11180) VALUE ! FMT='(Gxx)' is illigal...
      ENDIF
      RETURN
      ENDIF
11180 CONTINUE
      TDGETV=.false.
      GOTO 10722
C0721 CALL T2TOKK(INFOTOKK,CARDIN(3:MAXSTR),'SYMBOL:1,XVALUE:2,DXVALUE:3
C    *,YVALUE:4,DYVALUE:5,ZVALUE:6,DZVALUE:7,NDXVALUE:8,NDYVALUE:9,NDZVA
C    *LUE:10,UVALUE:11,DUVALUE:12,NDUVALUE:13,VVALUE:14,DVVALUE:15,NDVVA
C    *LUE:16,WVALUE:17,DWVALUE:18,NDWVALUE:19,THVALUE:102,DTHVALUE:103,R
C    *VALUE:104,DRVALUE:105,PHIVALUE:206,DPHIVALUE:207,NDTHETA:108,NDRVA
C    *LUE:109,NDPHIVALUE:210,INPUT_LEVEL,SETS,CURRENT_XWINDOW:11,XWINDOW
C    *S:21,CURRENT_YWINDOW:12,YWINDOWS:22,,CURRENT_WINDOW,CURRENT_SET,CU
C    *RRENT_HISTOGRAM,CURRENT_COLUMN,CURRENT_POINT,CURRENT_ROW,WINDOWS,C
C    *OLUMNS,ROWS,PLOTS,NTUPL,VIEW_THETA,VIEW_PHI,VIEW_SCRD,VIEW_DISTANC
C    *E,VIEW_SEPARATION,POINTS:11,XMIN:21,XMAX:22,YMIN:31,YMAX:32,ZMIN:4
C    *1,ZMAX:42,SUM:51,ESUM:52,AVERAGE:61,EAVERAGE:62,MEAN:71,EMEAN:72,S
C    *TD:81,ESTD:82,REPEAT,CPULIMIT,CPUTIME,ELAPSEDTIME,CHISQR,FTEST,TER
C    *MS,NTFIT,NPFIT,COEFFICIENT:1,ECOEFFICIENT:2,FIT:3,CONSTRAIN:4,HIST
C    *_ENTRIES,HIST_MEAN,HIST_STD,HIST_SUM,XMARKER:1,YMARKER:2,ZMARKER:3
C    *,;')
10721 TKSTR(:462)=                          'SYMBOL:1,XVALUE:2,DXVALUE:3
     *,YVALUE:4,DYVALUE:5,ZVALUE:6,DZVALUE:7,NDXVALUE:8,NDYVALUE:9,NDZVA
     *LUE:10,UVALUE:11,DUVALUE:12,NDUVALUE:13,VVALUE:14,DVVALUE:15,NDVVA
     *LUE:16,WVALUE:17,DWVALUE:18,NDWVALUE:19,THVALUE:102,DTHVALUE:103,R
     *VALUE:104,DRVALUE:105,PHIVALUE:206,DPHIVALUE:207,NDTHETA:108,NDRVA
     *LUE:109,NDPHIVALUE:210,INPUT_LEVEL,SETS,CURRENT_XWINDOW:11,XWINDOW
     *S:21,CURRENT_YWINDOW:12,YWINDOWS:22,,CURRENT_WINDOW,CURRENT_SET,CU
     *RRENT_HISTOGRAM,CURRENT_COLUMN,CURRENT_'
      TKSTR(463:)=                          'POINT,CURRENT_ROW,WINDOWS,C
     *OLUMNS,ROWS,PLOTS,NTUPL,VIEW_THETA,VIEW_PHI,VIEW_SCRD,VIEW_DISTANC
     *E,VIEW_SEPARATION,POINTS:11,XMIN:21,XMAX:22,YMIN:31,YMAX:32,ZMIN:4
     *1,ZMAX:42,SUM:51,ESUM:52,AVERAGE:61,EAVERAGE:62,MEAN:71,EMEAN:72,S
     *TD:81,ESTD:82,REPEAT,CPULIMIT,CPUTIME,ELAPSEDTIME,CHISQR,FTEST,TER
     *MS,NTFIT,NPFIT,COEFFICIENT:1,ECOEFFICIENT:2,FIT:3,CONSTRAIN:4,HIST
     *_ENTRIES,HIST_MEAN,HIST_STD,HIST_SUM,XMARKER:1,YMARKER:2,ZMARKER:3
     *,;'
      CALL T2TOKK(INFOTOKK,CARDIN(3:MAXSTR),TKSTR)
      GOTO (10725,10730,10725,10725,10725,10725,10725,10730,10725),INFOT
     *OKK(1)
10722 CONTINUE
      RETURN
10760 CONTINUE
      CALL T2ERR(0,' ',('*** ERROR *** Value not in storage'),3)
      GOTO 10690
10710 CONTINUE
      CALL T2ERR(0,' ','*** ERROR *** Bad subscript in lexical',3)
10690 CONTINUE
      TDGETV=.false.
      RETURN
      END
      SUBROUTINE T2EXPR(INFOIN,CARDIN,SEXPR,NSEXPR)
      IMPLICIT NONE
      INTEGER INFOIN(5)
      CHARACTER*(*) CARDIN
      INTEGER NSEXPR
      INTEGER*4 SEXPR(NSEXPR)
      LOGICAL TDGETV,LESAVE,LEFAST
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      INTEGER MAXSTK
      PARAMETER (MAXSTK=100)
      REAL FSTK(MAXSTK)
      INTEGER IOPSTK(MAXSTK),ITRSTK(MAXSTK),ISTK
      COMMON /T2EXST/ISTK,FSTK,IOPSTK,ITRSTK
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      INTEGER IOP,IBRKT,ISAVE,ISAVE5
      INTEGER IEIND,I,J,K
      INTEGER MAXFUN
      PARAMETER (MAXFUN=29)
      INTEGER*4 FSTR
      EQUIVALENCE (FLOTNG,FSTR)
      REAL F1,F2,F3
      INTEGER IAND
      CHARACTER*5 SFUN(MAXFUN)
      DATA SFUN/  '  +', '  +', '  -', '  *', '  /', '  **', 'SIN', 'ASI
     *N', 'COS', 'ACOS', 'TAN', 'ATAN', 'LOG', 'ALOG', 'LN', 'EXP' , 'GA
     *MMA','SQRT', 'RAN', 'ABS' , 'DEG', 'RAD', 'INT', 'FRAC', 'NINT', '
     *MINUS','ERF', 'ERFC', 'FREQ'  /
      LESAVE=SEXPR(1).eq.1
      LEFAST=SEXPR(1).eq.2
      IEIND=3
      ISTK=0
      IOP=0
      IBRKT=0
      LSYERR=.false.
      ITRSTK(1)=0
      IOPSTK(1)=0
11190 CONTINUE
11191 CONTINUE
      IF (LSYERR) GOTO 11200
      STRNG(1:1)=' '
      IF (LEFAST) THEN
      IEIND=IEIND+1
      INFOIN(3)=IAND(SEXPR(IEIND-1),2**16-1)
      INTERP=IAND(SEXPR(IEIND-1)/2**16,2**4-1)
      IF (INTERP.eq.4) THEN
      FSTR=SEXPR(IEIND)
      IEIND=IEIND+1
      GOTO 11210
      ELSEIF (INTERP.eq.2) THEN
      KEYORD=IAND(SEXPR(IEIND-1)/2**20,2**4-1)
      INTEG=IAND(SEXPR(IEIND-1)/2**24,2**8-1)
      GOTO 11220
      ENDIF
      ELSE
      CALL T2TOKN(INFOIN,CARDIN,',PI:1.,'//  'SINE:1,ARCSINE:2,COSINE:3,
     *ARCCOSINE:4,TANGENT:5,ARCTANGENT:6,'//  'ASINE:2,ACOSINE:4,ATANGEN
     *T:6,'//  'ALOG:7,LOGARITHM:7,LN:9,EXPONENTIAL:10,GAMMA:11,'//  'SQ
     *RT:12,RANDOM:13,ABSOLUTE:14,DEGREES:15,RADIANS:16,'//  'INTEGER:17
     *,FRACTION:18,NINTEGER:19,'//  'ERF:21,ERFC:22,FREQ:23,;')
      ENDIF
      IF (LESAVE) THEN
      IEIND=IEIND+1
11230 CONTINUE
      IF (IEIND.le.NSEXPR) THEN
      SEXPR(IEIND-1)=MIN(INFOIN(3),2**16-1)+INTERP*2**16
      IF (INTERP.eq.4) THEN
      IF (IEIND.le.NSEXPR) SEXPR(IEIND)=FSTR
      IEIND=IEIND+1
      ELSEIF (INTERP.eq.2) THEN
      SEXPR(IEIND-1)=SEXPR(IEIND-1)+KEYORD*2**20+INTEG*2**24
      ENDIF
      ENDIF
      ENDIF
11240 GOTO (11250,11260,11270,11280,11290,11300,11310,11320,11330),INTER
     *P
11300 CONTINUE
      IF (LEFAST) THEN
      DO 11341 I=1,3
      INFOTOKK(I)=SEXPR(IEIND)
      IEIND=IEIND+1
11341 CONTINUE
11342 CONTINUE
      DO 11351 I=1,3
      IINDEX(I)=SEXPR(IEIND)
      IEIND=IEIND+1
11351 CONTINUE
11352 CONTINUE
      NSTRNG=3
      STRNG(2:2)=CHAR(0)
      ENDIF
      IF ( TDGETV('V_'//STRNG(2:NSTRNG),FLOTNG)) THEN
      IF (LESAVE) THEN
      IF (INFOTOKK(1).eq.2) THEN
      IF (IEIND+6 .lt. NSEXPR) THEN
      DO 11361 I=1,3
      SEXPR(IEIND)=INFOTOKK(I)
      IEIND=IEIND+1
11361 CONTINUE
11362 CONTINUE
      DO 11371 I=1,3
      SEXPR(IEIND)=IINDEX(I)
      IEIND=IEIND+1
11371 CONTINUE
11372 CONTINUE
      ELSE
      IEIND=IEIND+6
      ENDIF
      ELSE
      INTERP=4
      GOTO 11230
      ENDIF
      ENDIF
      GOTO 11210
      ENDIF
      GOTO 11380
11310 CONTINUE
11390 CONTINUE
11380 CONTINUE
      IF (LEFAST) NSTRNG=0
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Illegal expression',4)
      GOTO 11192
11320 CONTINUE
11330 CONTINUE
11290 CONTINUE
11250 CONTINUE
      IF (INTERP.ne.1) THEN
      INFOIN(3)=INFOIN(3)-1
      ENDIF
      IF (IOP.ne.0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing number',4)
      ENDIF
      GOTO 11192
11270 CONTINUE
      FLOTNG=3.14159265D0
      KEYORD=0
      GOTO 11210
11280 CONTINUE
11210 CONTINUE
      IF (IOP.eq.0) THEN
      IF ( ISTK.eq.0 .or. STRNG(1:1).eq.'+' .or. STRNG(1:1).eq.'-') THEN
     *
      IOP=2
      ELSE
      IOP=4
      ENDIF
      ENDIF
      KEYORD=0
11400 GOTO (11410,11420,11430,11440,11450,11460,11470),IOP
11470 CONTINUE
      ISTK=ISTK+1
      IF (ISTK.gt.MAXSTK) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Stack overflow (expression
     * too complex)',4)
      GOTO 11192
      ENDIF
      FSTK(ISTK)=FLOTNG
      IOPSTK(ISTK)=IOP
      ITRSTK(ISTK)=INFOIN(3)
      CALL T2FNRD(6+1,F3)
      GOTO 11402
11410 CONTINUE
11420 CONTINUE
11430 CONTINUE
11440 CONTINUE
11450 CONTINUE
11460 CONTINUE
      GOTO 11480
11402 CONTINUE
      IOP=0
      GOTO 11242
11260 CONTINUE
11220 CONTINUE
      FLOTNG=0
11490 GOTO (11500,11510,11520,11530,11540,11550,11560),KEYORD
11560 CONTINUE
11570 CONTINUE
      KEYORD=INTEG+6
      IF (IOP.eq.0 .and. ISTK.ne.0) IOP=4
      IF (IOP.gt.1) GOTO 11480
      IOP=KEYORD
      GOTO 11492
11530 CONTINUE
      IF (IOP.eq.4) THEN
      IOP=6
      ELSEIF (IOP.gt.0) THEN
      GOTO 11380
      ELSE
      IOP=KEYORD
      ENDIF
      GOTO 11492
11540 CONTINUE
      IF (IOP.gt.0) GOTO 11380
      IOP=KEYORD
      GOTO 11492
11510 CONTINUE
      IF (IOP.gt.1) GOTO 11380
      IOP=KEYORD
      GOTO 11492
11520 CONTINUE
      IF (IOP.ge.4) THEN
      INTEG=20
      GOTO 11570
      ENDIF
      IF (IOP.gt.1) GOTO 11380
      IOP=KEYORD
      GOTO 11492
11500 CONTINUE
      IBRKT=IBRKT+1
      IF (IOP.eq.0) THEN
      IF (ISTK.eq.0) THEN
      IOP=2
      ELSE
      IOP=4
      ENDIF
      ENDIF
      IOP=-ABS(IOP)
11480 CONTINUE
      IF (ISTK.gt.0 .and. ABS(IOP).ge.2 .and. ABS(IOP).le.5) CALL T2FNRD
     *(2*ABS(IOP/2),F3)
      IF (LSYERR) GOTO 11200
      ISTK=ISTK+1
      IF (ISTK.gt.MAXSTK) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Stack overflow (expression
     * too complex)',4)
      GOTO 11192
      ENDIF
      IOPSTK(ISTK)=IOP
      FSTK(ISTK)=FLOTNG
      ITRSTK(ISTK)=INFOIN(3)
      IOP=KEYORD
      GOTO 11492
11550 CONTINUE
      IBRKT=IBRKT-1
      IF (IOP.ne.0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing number',4)
      GOTO 11192
      ENDIF
      IF(IBRKT.le.0)GOTO 11192
      IF (ISTK.gt.0) CALL T2FNRD(0,F3)
      GOTO 11492
11492 CONTINUE
      GOTO 11242
11242 CONTINUE
      GOTO 11191
11192 CONTINUE
11580 CONTINUE
      IF (IBRKT.gt.0 .and. .not. LEFAST) CALL T2ERR(INFOIN,CARDIN,'*** W
     *ARNING *** Unbalenced parenthesis',4)
      IF (.not.LEFAST .and. ITRSTK(1).eq.0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Missing expression',4)
      F3=0
      ELSEIF (ISTK.gt.0) THEN
      CALL T2FNRD(-9999,F3)
      IF (LSYERR) GOTO 11200
      ENDIF
      FLOTNG=F3
      IF (LESAVE.and. .not. FLAGS(23)) THEN
      IF (IEIND.lt.NSEXPR) THEN
      SEXPR(1)=2
      SEXPR(2)=IEIND
      ELSE
      SEXPR(1)=0
      ENDIF
      ENDIF
      RETURN
11200 CONTINUE
      IF (LEFAST) NSTRNG=0
      LSYERR=.false.
      ISAVE=INFOIN(3)
      ISAVE5=INFOIN(5)
      IF (ISTK.gt.0) INFOIN(5)=ITRSTK(ISTK)+1
      INFOIN(3)=ITRSTK(ISTK+1)
      IOP=IOPSTK(ISTK+1)
      F2=FSTK(ISTK+1)
      IF (IOP .le. 6 .and. IOP .gt. 0) THEN
      F1=0
      IF (ISTK.gt.0) F1=FSTK(ISTK)
      WRITE(OUTSTR,*)'* "',F1,SFUN(IOP),F2,'"'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ELSEIF (IOP.gt.6) THEN
      J=MIN(MAX(IOP,1),MAXFUN)
      WRITE(OUTSTR,*)'* Function argument out of range "',SFUN(J),'(',F2
     *,')"'
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,-4)
      ENDIF
      CALL T2TERR
      INFOIN(3)=ISAVE
      INFOIN(5)=ISAVE5
      FLOTNG=0
      IF (LESAVE) SEXPR(1)=0
      END
      SUBROUTINE T2FNRD(IOP3,F3)
      IMPLICIT NONE
      INTEGER I,J
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER MAXSTK
      PARAMETER (MAXSTK=100)
      REAL FSTK(MAXSTK)
      INTEGER IOPSTK(MAXSTK),ITRSTK(MAXSTK),ISTK
      COMMON /T2EXST/ISTK,FSTK,IOPSTK,ITRSTK
      INTEGER IPREC,IOP,IOP3,ISTK1,ISEED
      REAL F1,F2,F3
      REAL GAMMA, ERF, ERFC, FREQ, RAN
      REAL RAD
      PARAMETER (RAD=3.14159265/180.)
      IPREC=IOP3
      IF (ISTK.le.0) THEN
      F3=FSTK(1)
      RETURN
      ENDIF
11591 CONTINUE
      ISTK1=ISTK
      IOP=IOPSTK(ISTK1)
      IF (IOP .lt. IPREC) THEN
      IF( IPREC .gt. 0) GOTO 11600
      IF( IPREC .eq. 0) IPREC=6+1
      IOPSTK(ISTK1)=ABS(IOP)
      GOTO 11591
      ENDIF
      IOP=ABS(IOP)
      F2=FSTK(ISTK1)
      ISTK1=ISTK1-1
      ISTK=ISTK1
      IF (ISTK1.gt.0) THEN
      F1=FSTK(ISTK1)
      ELSE
      F1=0
      ENDIF
      IF (.not. LTRAP) THEN
11610 GOTO (11620,11630,11640,11650,11660,11670,11680,11690,11700,11710,
     *11720,11730,11740,11750,11760,11770,11780,11790,11800,11810,11820,
     *11830,11840,11850,11860,11870,11880,11890,11900),IOP
      CALL T2ERR(0,' ','*** ERROR *** No such operation',3)
      F3=0
      GOTO 11600
11620 CONTINUE
11630 CONTINUE
      F3=F1+F2
      GOTO 11612
11650 CONTINUE
      F3=F1*F2
      GOTO 11612
11660 CONTINUE
      F3=F1/F2
      GOTO 11612
11640 CONTINUE
      F3=F1-F2
      GOTO 11612
11670 CONTINUE
      IF (MOD(F2,1.0).ne.0) THEN
      F3=F1**F2
      ELSE
      F3=F1**INT(F2)
      ENDIF
      GOTO 11612
11680 CONTINUE
      F3=SIN(F2*RAD)
      GOTO 11612
11700 CONTINUE
      F3=COS(F2*RAD)
      GOTO 11612
11720 CONTINUE
      F3=TAN(F2*RAD)
      GOTO 11612
11690 CONTINUE
      F3=ASIN(F2)/RAD
      GOTO 11612
11710 CONTINUE
      F3=ACOS(F2)/RAD
      GOTO 11612
11730 CONTINUE
      F3=ATAN(F2)/RAD
      GOTO 11612
11740 CONTINUE
      F3=ALOG10(F2)
      GOTO 11612
11750 CONTINUE
      F3=10**F2
      GOTO 11612
11760 CONTINUE
      F3=ALOG(F2)
      GOTO 11612
11770 CONTINUE
      F3=EXP(F2)
      GOTO 11612
11780 CONTINUE
      IF (F2.le.0) GOTO 11910
      F3=GAMMA(F2)
      GOTO 11612
11790 CONTINUE
      F3=SQRT(F2)
      GOTO 11612
11800 CONTINUE
      IF (F2.ne.0) ISEED=F2
      F3=RAN(ISEED)
      GOTO 11612
11810 CONTINUE
      F3=ABS(F2)
      GOTO 11612
11820 CONTINUE
      F3=F2/0.0174532925
      GOTO 11612
11830 CONTINUE
      F3=F2*0.0174532925
      GOTO 11612
11840 CONTINUE
      F3=INT(F2)
      GOTO 11612
11850 CONTINUE
      F3=MOD(F2,1.0)
      GOTO 11612
11860 CONTINUE
      F3=NINT(F2)
      GOTO 11612
11870 CONTINUE
      F3=-F2
      GOTO 11612
11880 CONTINUE
      F3=ERF(F2)
      GOTO 11612
11890 CONTINUE
      F3=ERFC(F2)
      GOTO 11612
11900 CONTINUE
      F3=FREQ(F2)
      GOTO 11612
11612 CONTINUE
      ENDIF
      IF (ISTK1.gt.0) THEN
      FSTK(ISTK1)=F3
      ELSE
      FSTK(1)=F3
      GOTO 11600
      ENDIF
      GOTO 11591
11592 CONTINUE
11600 CONTINUE
      RETURN
11910 CONTINUE
      LSYERR=.true.
      END
      SUBROUTINE T2TOKN(INFOIN,CARDIN,KEYS)
      IMPLICIT NONE
      INTEGER I,J
      LOGICAL INTRAC,TDGETV,TDGETS
      INTEGER INFOIN(3)
      CHARACTER*(*) CARDIN
      CHARACTER*1 CCHAR,QUOTE
      CHARACTER*(*) KEYS
      REAL FLIM(4)
      DOUBLE PRECISION T2TIMF
      COMMON /T2FLGC/ FLAGS(200), LTRAP,LHANDL,LSYERR,LSCREV
      LOGICAL FLAGS, LTRAP,LHANDL,LSYERR,LSCREV(3)
      INTEGER RELFLAG 
      PARAMETER (RELFLAG=151)
      INTEGER IWINLEV 
      INTEGER NWINLEV , MAX_FILL 
      PARAMETER (NWINLEV =4)
      PARAMETER (MAX_FILL=4)
      REAL GRDSYM, GRDSIZ, DATDAT(2,8), H2STAT(12), TITLIN(4), TITFA
     *C(4), TITLOC(4), TITMAR(4), TITLMX(4), TIKFAC, TITINX, TITX1, TIT
     *Y1, TITX, TITY, TITZ, TITSIZ, TITCON(5), REVLEV, REDUCE(5), XFR
     *M12(12), XFRM13(12), XFRM14(12), XFRM23(12), XFRM24(12), XFRM34(6
     *), XVARSX(20), CIRSIZ(2,3), ASIZE, AFLARE, SMSZDF, ORAXES(3), EY
     *EDIR(3), VUEDIR(3), VUECEN(3), VERTCL(3), EYESEP, SCRD, SCRZ, EYE
     *DIS, EYEPNT(3), XYPART(2, 2), BARSIZ(3), BARBRK(3), TIKSIZ(3), XY
     *ZBAS(3), TTHETA, TPHI, FRELBL(4), PATRN(20,30), SCLPRM(10,3), WI
     *NDOW(4), SCREEN(2), SYMBOL, NOSYMB, FACTXY(19), LBLSIZ, SYMSIZ, X
     *YZLIM(3,2), WORLD(3), RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY
     *0, XUNUSD(6), AXANG(3), REDFAC, DSCAL, PATSZ, MARGIN(4), PSCR(2
     *), OREAL, OCPU, CSCRD, DATPTS, ERRPTS, DATXMN, DATXMX, DATYMN, DA
     *TYMX, DATZMN, DATZMX, DATSUM, ERRSUM, DATAVE, ERRAVE, DATCEN, ERR
     *CEN, DATSTD, ERRSTD, WINREL(2,2,NWINLEV),WINABS(2,2,NWINLEV),WINL
     *IM(2,2), FMARKER(3,8), SYDIR(3), GRDIR(3), EXYZLIM(3,2), DSLOPE(2
     *,2)
      REAL PLOT_EXTENT(2,2),FILL_ANGLE(MAX_FILL),FILL_WIDTH(MAX_FILL)
      INTEGER FILL_INDEX, FILL_TEX(MAX_FILL), N_LINES(6)
      EQUIVALENCE (DATDAT, DATPTS)
      INTEGER MAXREP
      PARAMETER (MAXREP=5)
      INTEGER IPATRN, NPATRN(30), NXYLIM(3,2), NPLOTS, NCSETS, NCCOL, N
     *CROW, IYEAR, IMONTH, IDAY, ISIGFG, ITXPRI, ITXSEC, ITITDT(3), L
     *ENCRD, IPROP, IHTEX, IBLINK, IERASE, ITCNTR, IUNUSD, NXYZ1(3), 
     *NXYZ2(3), LBLFMT(3), LBLCHR(3), NDIMNS(3), IBLKTP, IDIMNS, NMES
     *H0, NMESH1, NMESH2, MESH1, MESH2, MESH3, MESH2D, MESHN(3), NMESHN(
     *2), NFIELD, IFIELD(19), NINCR, NPOINT, IVARBL(19), IVPTR(19), I_
     *VORDER(19,2), LINEAR(4), NONLIN(4), MXECHO, LINES, MAXLNS, USRK
     *BD, USRSCR, PLTFIL, LINWID, LINCOL, LINTEX, ICPOIN(3), IREPCT(MA
     *XREP), LEVREP, GRDTYP, GRDTEX, OUTTEX, IAXTEX, TITEX, LETSET, LAB
     *TEX, TICTEX, SHADOWTYP,SHADOWTEX, NXYZDEF1(10), NXYZDEF2(10), IF
     *ILE_CASE ,MAX_SUBST
      INTEGER MAX_CYCLE
      PARAMETER (MAX_CYCLE=20)
      INTEGER N_CYCLE, ITX_CYCLE(MAX_CYCLE)
      REAL SYM_CYCLE(MAX_CYCLE)
      EQUIVALENCE (NMESH1,NMESHN)
      EQUIVALENCE (MESH1,MESHN)
      INTEGER IBUFFR(400)
      REAL BUFFER(400)
      INTEGER NCHSAVE 
      PARAMETER (NCHSAVE=2*512) 
      INTEGER*4 ICHSAVE(NCHSAVE)
      INTEGER*4 IVRPTR(15)
      CHARACTER*512 OUTSTR,C_FILE, C_NAME, C_SELECT
      CHARACTER C_TIT_ESCAPE*1,C_TIT_SUBSTITUTE*2
      INTEGER N_FILE, N_NAME, N_SELECT
      CHARACTER*8 PXNAME
      CHARACTER*64 INPFMT
      LOGICAL LTDATA, OUTSID(4)
      COMMON /T2COM/ PXNAME, REDUCE, TITX, TITY ,XFRM12, XFRM13, XFRM1
     *4, XFRM23 ,XFRM24, XFRM34 ,XVARSX ,TITSIZ, GRDSYM, GRDSIZ, CIRS
     *IZ, ASIZE, AFLARE ,SMSZDF, ORAXES, EYEDIR, VUEDIR, VUECEN ,VERTC
     *L, EYESEP, SCRD, SCRZ, EYEDIS, EYEPNT ,XYPART, BARSIZ, TIKSIZ, XY
     *ZBAS, TTHETA ,TPHI, FRELBL, IPATRN, NPATRN, PATRN ,SCLPRM, WINDO
     *W, SCREEN, SYMBOL, NOSYMB ,FACTXY, LBLSIZ, SYMSIZ, XYZLIM, WORLD 
     *,RADRMX, RADRMN, RADAMN, RADANG, RADX0, RADY0, XUNUSD ,USRKBD, U
     *SRSCR, PLTFIL ,ITITDT, LENCRD ,INPFMT, GRDTYP, LINWID, LINCOL, L
     *INTEX, TITCON, ITCNTR ,IUNUSD, NXYZ1, NXYZ2 ,LBLCHR, NDIMNS, IBL
     *KTP, IDIMNS ,NMESH1, NMESH2, MESH1, MESH2, MESH3, NFIELD ,IFIELD
     *, NINCR ,IVARBL, IVRPTR ,LINEAR, NONLIN ,NPOINT, LETSET ,MXECH
     *O, LINES, MAXLNS ,AXANG, MESH2D, REDFAC, GRDTEX, OUTTEX, IAXTEX, 
     *TITEX, DSCAL ,OUTSTR, IPROP, IHTEX, IBLINK, IERASE, LABTEX, TICTE
     *X, NXYLIM, PATSZ ,MARGIN, PSCR, ITXPRI, ITXSEC, OREAL, OCPU, CSCR
     *D, OUTSID ,TITLIN, TITINX, TITZ, TITX1, TITY1, LTDATA, NPLOTS, RE
     *VLEV ,LBLFMT, IYEAR, IMONTH, IDAY, ISIGFG ,DATPTS, ERRPTS, DATXM
     *N, DATXMX, DATYMN, DATYMX, DATZMN, DATZMX ,DATSUM, ERRSUM, DATAVE
     *, ERRAVE, DATCEN, ERRCEN, DATSTD, ERRSTD ,NCSETS, NCCOL, NCROW, F
     *MARKER, H2STAT, TITFAC, TITLOC, TITMAR ,TIKFAC, IWINLEV, WINREL, 
     *WINABS, WINLIM ,ICPOIN, LEVREP, IREPCT, SYDIR, GRDIR, NMESH0, EXY
     *ZLIM, IVPTR ,TITLMX, NXYZDEF1, NXYZDEF2, IFILE_CASE, N_CYCLE, ITX
     *_CYCLE ,SYM_CYCLE, PLOT_EXTENT, FILL_ANGLE, FILL_WIDTH, FILL_TEX 
     *,FILL_INDEX ,N_LINES ,DSLOPE ,MAX_SUBST, BARBRK ,I_VORDER,SHADOW
     *TYP,SHADOWTEX
      COMMON /T2SCRT/ BUFFER, IBUFFR, N_FILE,N_NAME,N_SELECT, ICHSAVE
      COMMON /T2_CHAR/ C_TIT_ESCAPE,C_TIT_SUBSTITUTE
      COMMON /T2_SCRT/ C_FILE, C_NAME, C_SELECT
      INTEGER JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL, NINMAX
      PARAMETER (NINMAX=20)
      INTEGER NINP(NINMAX)
      COMMON /T2TRBK/NINP, JOUFIL, ERRFIL, OUTFIL, DBGFIL, INPFIL
      CHARACTER*512 STRNG, STJOU
      LOGICAL LTOKEN
      REAL FLOTNG
      INTEGER INTERP, KEYORD, NSTRNG, MAXSTR, NSTJOU, LSTJOU, NTOKEN
      INTEGER*4 INTEG
      COMMON /TOKENC/ INTERP, INTEG, FLOTNG, KEYORD, NSTRNG, MAXSTR, ST
     *RNG, NSTJOU, LSTJOU, STJOU, LTOKEN, NTOKEN
      BYTE TYPTAB(256),TYPTB2(256)
      CHARACTER*256 UPCHAR,OKCHAR,DNCHAR
      INTEGER INFOTOKK(3),IINDEX(3)
      COMMON /T2TOKNC/ TYPTAB,TYPTB2,INFOTOKK,IINDEX
      COMMON /T2UPCH/ UPCHAR,OKCHAR,DNCHAR
      INTEGER CHARAC,KEYLET
      INTEGER CHTYPE,KEYTYP
      INTEGER ICOL, JCOL, MINCOL, MAXCOL, IBRKT
      INTEGER ID, IDIGIT, IDIG, IE, IEXP, IDATE, IS, JNTEG, JDIGIT
      REAL F60, SAVEN, Y
      INTEGER NXPC 
      PARAMETER (NXPC=30)
      INTEGER MINMCH 
      PARAMETER (MINMCH=2)
      REAL XPC(NXPC),DATE(4)
      DATA XPC/1.E01,1.E02,1.E03,1.E04,1.E05,1.E06,1.E07,1.E08,1.E09,1.E
     *10, 1.E11,1.E12,1.E13,1.E14,1.E15,1.E16,1.E17,1.E18,1.E19,1.E20, 1
     *.E21,1.E22,1.E23,1.E24,1.E25,1.E26,1.E27,1.E28,1.E29,1.E30/
      MAXCOL=LEN(CARDIN)
      IF (INFOIN(1).GT.0) MAXCOL=MIN(MAXCOL,INFOIN(1))
      NSTRNG=0
      INTERP=6
      MINCOL=INFOIN(3)+1
      DO 11921 ICOL=MINCOL,MAXCOL
      CCHAR=CARDIN(ICOL:ICOL)
      CHARAC=ICHAR(CCHAR)
      CHTYPE=TYPTB2(CHARAC+1)
      GOTO ( 11930,11940,11950,11960,11960, 11970,11980,11990,11950,1195
     *0, 11950,11950,11950) CHTYPE
12000 CONTINUE
      INFOIN(3)=ICOL
      KEYORD=CHTYPE-13
      INTERP=2
      FLOTNG=0
      RETURN
11970 CONTINUE
11921 CONTINUE
11922 CONTINUE
      INTERP=1
      RETURN
11990 CONTINUE
      INFOIN(3)=ICOL-1
      INTERP=1
      RETURN
11940 CONTINUE
      KEYORD=1
      ID=ICOL+1
      IDIGIT=-9
      INTEG=0
      IDIG=0
      GOTO 12010
11930 CONTINUE
      KEYORD=0
      ID=0
      IDIGIT=-9
      INTEG=(CHARAC-ICHAR('0'))
      IDIG=1
      IF (INTEG.gt.0) IDIGIT=IDIGIT+1
12010 CONTINUE
      IE=0
      IEXP=0
      MINCOL=ICOL+1
      F60=0.0
      IDATE=0
      DO 12021 ICOL=MINCOL,MAXCOL
      CCHAR=CARDIN(ICOL:ICOL)
      CHARAC=ICHAR(CCHAR)
      CHTYPE=TYPTB2(CHARAC+1)
      GOTO (12030,12040 ,12050 ,12060 ,12070, 12070,12070,12070,12070,12
     *070, 12070,12080,12070,12070,12050,12050 ), CHTYPE
12080 CONTINUE
      IF (CCHAR.eq.':') THEN
      IF (F60.eq.0) THEN
      F60=1
      SAVEN=0
      ENDIF
      SAVEN=SAVEN+INTEG/F60
      F60=F60*60
      INTEG=0
      IDIGIT=-9
      IEXP=0
      IF (IE+ID.ne.0.or.ABS(F60).ge.3601) GOTO 12090
      ELSEIF (CCHAR.eq.'\') THEN
      IF (IDATE.gt.2 .or. ID+IE.ne.0) GOTO 12090
      IF (IDATE.eq.0) THEN
      DO 12101 J=1,4
      DATE(J)=0
12101 CONTINUE
12102 CONTINUE
      DATE(2)=1
      DATE(3)=1
      JCOL=-5
      ENDIF
      IDATE=IDATE+1
      IF (JCOL.lt.ICOL) DATE(IDATE)=INTEG
      INTEG=0
      IDIGIT=-9
      IEXP=0
      JCOL=ICOL+1
      ELSE
      GOTO 12070
      ENDIF
      GOTO 12021
12040 CONTINUE
      IF (IE+ID.gt.0) GOTO 12090
      ID=ICOL+1
      GOTO 12021
12050 CONTINUE
      IF (ICOL.ne.IE) GOTO 12070
      IF (CCHAR.eq.'-')IS=-1
      GOTO 12021
12060 CONTINUE
      IF (IDIG.eq.0.or.IE.gt.0) GOTO 12090
      IDIG=0
      IE=ICOL+1
      JNTEG=INTEG
      JDIGIT=IDIGIT
      INTEG=0
      IS=1
      IDIGIT=-9
      GOTO 12021
12030 CONTINUE
      IF (IDIGIT.ge.0) THEN
      IEXP=IEXP+1
      ELSE
      INTEG=INTEG*10+(CHARAC-ICHAR('0'))
      IDIG=IDIG+1
      IF (INTEG.gt.0) IDIGIT=IDIGIT+1
      ENDIF
12021 CONTINUE
12022 CONTINUE
12070 CONTINUE
      INFOIN(3)=ICOL-1
      IF (IDIG.le.0) GOTO 12090
      IF (IE .gt. 0) THEN
      IEXP=IS*INTEG+IEXP
      INTEG=JNTEG
      IDIGIT=JDIGIT
      ELSE
      IE=ICOL+1
      ENDIF
      IF (ID.ne.0) IEXP=IEXP-IE+ID+1
      IF (9+IDIGIT+IEXP.gt.31) GOTO 12110
      FLOTNG=INTEG
      IF (IEXP.ne.0) THEN
      I=IABS(IEXP)
12121 CONTINUE
      J=MIN(I,NXPC)
      Y=XPC(J)
      IF (IEXP.LT.0) THEN
      FLOTNG=FLOTNG/Y
      ELSE
      FLOTNG=FLOTNG*Y
      ENDIF
      I=I-J
      IF(.NOT.(I.eq.0))GOTO 12121
12122 CONTINUE
      INTEG=NINT(MIN(MAX(FLOTNG,-2.0E9),2.0E9))
      ENDIF
      IF (F60.ne.0) FLOTNG=SAVEN+FLOTNG/F60
      IF (IDATE.ne.0) THEN
      IF (JCOL.lt.ICOL) DATE(IDATE+1)=FLOTNG
      FLOTNG=T2TIMF(DATE(1),DATE(2),DATE(3),DATE(4),0.,0.)/3600
      ENDIF
12130 CONTINUE
      INTERP=4
      GOTO 12090
12110 CONTINUE
      WRITE(OUTSTR,12140)-1.0E31,1.0E31
      CALL T2ERR(INFOIN,CARDIN,OUTSTR,4)
12140 FORMAT ('*** ERROR *** Number out of range ',1P,G10.3,' to ',G10.3
     *)
      INTEG=0
      FLOTNG=0
      INTERP=7
      RETURN
12090 CONTINUE
      INFOIN(3)=ICOL-1
      RETURN
11960 CONTINUE
      MAXCOL=MIN(MAXCOL,LEN(STRNG)+ICOL-1)
      STRNG(1:1)=','
      NSTRNG=1
      MINCOL=ICOL
      IBRKT=0
      DO 12151 ICOL=MINCOL,MAXCOL
      CCHAR=CARDIN(ICOL:ICOL)
      CHARAC=ICHAR(CCHAR)
      CHTYPE=TYPTB2(CHARAC+1)
      GOTO (12160,12160,12170,12180,12180, 12170,12170,12190,12190,12200
     *, 12210,12160,12190 ),CHTYPE 
12170 CONTINUE
      IF (IBRKT.gt.0) GOTO 12160
      GOTO 12152
12190 CONTINUE
      GOTO 12152
12200 CONTINUE
      IBRKT=IBRKT+1
      GOTO 12160
12210 CONTINUE
      IBRKT=IBRKT-1
12180 CONTINUE
      CCHAR=UPCHAR(CHARAC+1:CHARAC+1)
12160 CONTINUE
      NSTRNG=NSTRNG+1
      STRNG(NSTRNG:NSTRNG)=CCHAR
12151 CONTINUE
12152 CONTINUE
      INFOIN(3)=ICOL-1
      IF (IBRKT.ne.0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** WARNING *** Mismatched brakets []',4
     *)
      ENDIF
      IF (NSTRNG.lt.3) RETURN
      IF (NSTRNG.ge.4 .and. STRNG(2:3).eq.'V_') THEN
      STRNG(:NSTRNG)=STRNG(3:NSTRNG)
      NSTRNG=NSTRNG-2
      RETURN
      ENDIF
      MAXCOL=LEN(KEYS)
      ICOL=INDEX(KEYS,STRNG(1:NSTRNG))
      IF (ICOL.eq.0) RETURN
      MINCOL=INDEX(KEYS(ICOL:MAXCOL),':')+ICOL
      IF (NSTRNG.lt.MINCOL-ICOL-1) THEN
      IF (INDEX(KEYS(MINCOL+1:MAXCOL),STRNG(1:NSTRNG)) .gt. 0) THEN
      CALL T2ERR(INFOIN,CARDIN,'*** ERROR *** Ambiguous function name',4
     *)
      INTERP=7
      RETURN
      ENDIF
      ENDIF
      INTEG=0
      INTERP=2
      DO 12221 J=MINCOL,MAXCOL
      CCHAR=KEYS(J:J)
      KEYLET=ICHAR(CCHAR)
      KEYTYP=TYPTAB(KEYLET+1)
      IF (KEYTYP.ne.1) THEN
      IF (KEYTYP.eq.2) INTERP=3
      GOTO 12222
      ENDIF
      INTEG=INTEG*10+(KEYLET-ICHAR('0'))
12221 CONTINUE
12222 CONTINUE
      KEYORD=8
      RETURN
11980 CONTINUE
      INTERP=8
11950 CONTINUE
      INFOIN(3)=ICOL
      STRNG(1:2)=CCHAR
      NSTRNG=1
      INTEG=0
      FLOTNG=0
      RETURN
      END
